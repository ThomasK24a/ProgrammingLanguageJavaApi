-- phpMyAdmin SQL Dump
-- version 5.1.3
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Gegenereerd op: 25 mrt 2022 om 16:15
-- Serverversie: 10.4.24-MariaDB
-- PHP-versie: 8.1.4

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";

--
-- Database: `programming_language_api`
--
CREATE DATABASE IF NOT EXISTS `programming_language_api` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;
USE `programming_language_api`;

-- --------------------------------------------------------

--
-- Tabelstructuur voor tabel `language`
--

CREATE TABLE `language` (
  `id` int(11) NOT NULL,
  `language_name` varchar(50) NOT NULL,
  `file_extension` varchar(50) DEFAULT NULL,
  `hello_world_program` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Gegevens worden geëxporteerd voor tabel `language`
--

INSERT INTO `language` (`id`, `language_name`, `file_extension`, `hello_world_program`) VALUES
(1, '05Ab1E', NULL, '\"Hello World'),
(2, '0815', '0815', '<:48:x<:65:=<:6C:$=$=$$~<:03:+\r\n$~<:ffffffffffffffb1:+$<:77:~$\r\n~<:fffffffffffff8:x+$~<:03:+$~\r\n<:06:x-$x<:0e:x-$=x<:43:x-$'),
(3, '1C Enterprise', NULL, 'Message(\"Hello World\");'),
(4, '256', '256', 'Hello World'),
(5, '2B', '2b', '+0+0+0+0+0+0+0+2)+0+0+9)+7))+3)-0-0-0-0-0-0-0-9)+0+0+0+0+0+0+0+0+7)-8)+3)-6)-8)-7-0-0-0-0-0-0)'),
(6, '420', '420', '420\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it\r\n\r\nblaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it\r\n\r\nblaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it\r\nblaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it\r\n\r\nblaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it\r\n\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it\r\n\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it blaze it\r\nblaze it blaze it blaze it blaze it blaze it blaze it'),
(7, '4Gl', '4gl', 'main\r\n    display \"Hello World\"\r\nend main'),
(8, '4Test', NULL, 'testcase printHelloWorld()\r\n    print(\"Hello World\")'),
(9, '4Thdimension', '4dd', 'OPEN WINDOW (10;45;500;330;0;\"Hello Window\")\r\nWhile (True)\r\n  MESSAGE (\"Hello World\")\r\nEnd while'),
(10, '8Th', NULL, '\"Hello World\n\" .'),
(11, '~English', 'ext', 'Display \"Hello World\" and a newline.\r\nStop the program.'),
(12, '~Indonesia', 'ext', 'Menampilkan kalimat \"Hello World\" lalu garis baru\r\nProgram selesai'),
(13, '~Malay', 'ext', 'Tunjukkan perkataan \"Hello World\" dan garisan baru\r\nProgram tamat'),
(14, '~Sanskrit', 'ext', 'प्रदर्शक \"नमस्कार विश्व\" समायोग नव पङ्क्ति\r\nविधि विराम'),
(15, 'Μλ', NULL, '>  EEEEEEEΔΔΘς       v\r\nv  ςΘΔEEEEEEEEEE     <\r\n>  EEEEEEEEEEEδδΘς   v\r\nv  ΘδδEEEEEEEEEEEς   <\r\n>  ς EEEEEEEEEEEΔΘ   v\r\nv  ΘΔΔΔΔEEEEς        <\r\n>  ςEEEΔΔΘ           v\r\nv  ΘδEEEEEEEEEEEEς   <\r\n>  ςEEEEEEEEEEEΔΘ    v\r\nv  ΘΔΔΔΔEEEEEEEEEEEς <\r\n>  ςEEEEEEEEEEEδδΘ   v\r\nv  ΘEEEEEEEEEEς      <\r\n>  ςEEEΔΔΔΘ          λ'),
(16, 'قلب', NULL, '‫(قول \"مرحبا يا عالم\")'),
(17, 'なでしこ', 'nako', '「Hello World」と表示'),
(18, 'ひまわり', 'hmw', '「Hello World」と、表示。'),
(19, '文言', 'wy', '吾有一言。曰「「Hello World」」。書之。'),
(20, '易语言', 'e', '调试输出(“Hello World”）'),
(21, 'A++', NULL, '(print \"Hello World\")'),
(22, 'Abap', 'abap', 'REPORT ZHELLO_WORLD.\r\n\r\nSTART-OF-SELECTION.\r\n    WRITE: \'Hello World\'.'),
(23, 'Abc', 'abc', 'WRITE \"Hello World\"'),
(24, 'Acidic', 'acidic', 'Hello World\r\nwP'),
(25, 'Acpi', NULL, 'Scope() {\r\n	Method(_WAK) {\r\n		Store (\"Hello World\", Debug)\r\n		Return(Package(2){0x00000000,0})\r\n	}	\r\n}'),
(26, 'Acronym', 'acronym', '{{>>{~~~~{-<}~~~~~~~~~{-<-<}}<<}\r\n</(<<<){[<]}:>:{>>{~~~~~~~~{<}~{>}}<<}\r\n~>{{~{v}}>>>v{~}^<<<}/(<<<){[<<]}:>:{>>{~~~~~~~~{<<}~{>>}}<<}\r\n~{>>{vvvvvvvv~~~~~~~~~~~~~~~}<<}~{>>{vvvv~~~~~~~~~~~~~}<<}~\r\n{>>{^^^^^^^^^^~}<<}~{>>{v~~~~~~~{{<<}~}v{~}vvvvvvv{~{>>}}^^^^^^~~~\r\n{{<<}~}vvvv{~{>>}}v~~~}<<}~<{{^^^}}~\r\n{>>{vvvvvv~{{<<}~{>>}}^^^^^^^~~~~~~~~~~~{{<<}~{v>}}^^^^^^}}\r\n/{{()}}{[<<<<]}:>:{{~v}}}'),
(27, 'Acs', 'acs', '#include \"zcommon.acs\"\r\n\r\nScript 1 OPEN\r\n{\r\n  Print(s: \"Hello World\");\r\n}'),
(28, 'Actionscript', 'as', 'package \r\n{\r\n	import flash.display.Sprite;\r\n	import flash.text.TextField;\r\n	\r\n	public class actionscript extends Sprite\r\n	{\r\n		private var hello:TextField = new TextField();\r\n		\r\n		public function actionscript(){\r\n			hello.text = \"Hello World\";\r\n			addChild(hello);\r\n		}\r\n	}\r\n}'),
(29, 'Actionscript2', 'as', 'trace( \"Hello World\" );'),
(30, 'Actionscript3', 'as', 'package {\r\n\r\nimport flash.display.Sprite;\r\nimport flash.text.TextField;\r\nimport flash.text.TextFieldAutoSize;\r\nimport flash.text.TextFormat;\r\n\r\n[SWF(width=\'800\', height=\'600\', backgroundColor=\'#cccccc\', frameRate=\'30\')]\r\n\r\n	public class HelloFlash extends Sprite\r\n	{\r\n		public function HelloFlash()\r\n		{\r\n			var format:TextFormat = new TextFormat();\r\n			format.font = \"Arial\";\r\n			format.size = 20;\r\n			format.color = 0x0000;\r\n\r\n			var textField:TextField = new TextField();\r\n			textField.defaultTextFormat = format;\r\n\r\n			textField.border = false;\r\n			textField.autoSize = TextFieldAutoSize.LEFT;\r\n			textField.selectable = false;\r\n\r\n			textField.text = \"Hello World\";\r\n			addChild(textField);\r\n\r\n\r\n		}\r\n	}\r\n}'),
(31, 'Actionscript Flashmx', 'as', '_root.createTextField(\"mytext\",1,100,100,300,100);\r\nmytext.multiline = true;\r\nmytext.wordWrap = true;\r\nmytext.border = false;\r\n\r\nmyformat = new TextFormat();\r\nmyformat.color = 0xff0000;\r\nmyformat.bullet = false;\r\nmyformat.underline = true;\r\n\r\nmytext.text = \"Hello World\";\r\nmytext.setTextFormat(myformat);'),
(32, 'Ada', 'adb', 'with Ada.Text_IO;\r\n\r\nprocedure Hello_World is\r\n   use Ada.Text_IO;\r\nbegin\r\n   Put_line (\"Hello World\");\r\nend Hello_World;'),
(33, 'Advpl', NULL, 'User Function Hello()\r\nLocal cMsg := \"Hello World\"\r\nconout(cMsg)\r\nMsgInfo(cMsg)\r\nReturn'),
(34, 'Aeolbonn', 'aeo', ':Hello World\r\n:'),
(35, 'Aeolbonn', 'aeolbonn', ':Hello World\r\n:'),
(36, 'Agda', 'agda', 'module agda where\r\nopen import IO\r\n\r\nmain = run (putStrLn \"Hello World\")'),
(37, 'Aheui', 'aheui', '밤밣따빠밣밟따뿌\r\n빠맣파빨받밤뚜뭏\r\n돋밬탕빠맣붏두붇\r\n볻뫃박발뚷투뭏붖\r\n뫃도뫃희멓뭏뭏붘\r\n뫃봌토범더벌뿌뚜\r\n뽑뽀멓멓더벓뻐뚠\r\n뽀덩벐멓뻐덕더벅'),
(38, 'Aime', 'aime', 'integer\r\nmain(void)\r\n{\r\n    o_text(\"Hello World\n\");\r\n \r\n    return 0;\r\n}'),
(39, 'Aiml', 'aiml', '<aiml>\r\n    <category>\r\n        <pattern>*</pattern>\r\n        <template>Hello World</template>\r\n    </category>\r\n</aiml>'),
(40, 'Alaguf', 'alaguf', '\"Hello World\"#!'),
(41, 'Alda', 'alda', 'piano: c8 d e f g f e d c2.'),
(42, 'Algae', 'algae', 'printf(\"Hello World\n\");'),
(43, 'Algol W', 'algol', 'begin\r\n    write( \"Hello World\" )\r\nend.'),
(44, 'Algol60', 'algol60', 'BEGIN\r\n  FILE F(KIND=REMOTE);\r\n  EBCDIC ARRAY E[0:11];\r\n  REPLACE E BY \"HELLO WORLD\";\r\n  WRITE(F, *, E);\r\nEND.'),
(45, 'Algol68', 'algol68', 'begin\r\n  print((\"Hello World\",newline))\r\nend'),
(46, 'Alore', 'alore', 'Print(\'Hello World\')'),
(47, 'Amiga E', 'amiga-e', 'PROC main() IS WriteF(\'Hello World\n\')'),
(48, 'Amos', NULL, 'Print \"Hello World\"'),
(49, 'Android', 'java', 'package com.example.helloworld;\r\n\r\nimport android.app.Activity;\r\nimport android.os.Bundle;\r\nimport android.widget.TextView;\r\n\r\npublic class HelloWorld extends Activity {\r\n   /** Called when the activity is first created. */\r\n   @Override\r\n   public void onCreate(Bundle savedInstanceState) {\r\n       super.onCreate(savedInstanceState);\r\n       TextView tv = new TextView(this);\r\n       tv.setText(\"Hello World\");\r\n       setContentView(tv);\r\n   }\r\n}'),
(50, 'Angelscript', NULL, 'void main() { print(\"Hello World\n\"); }'),
(51, 'Angular', 'js', '$scope.$log = $log;\r\n$scope.message = \'Hello World\';'),
(52, 'Ante', 'ante', '9♦8♥J♦A♦2♣3♥7♠J♦A♦7♦J♦J♦A♦3♦J♦5♥6♦4♥J♥A♥6♠6♠J♥A♦8♦J♦A♦8♠J♦A♦3♦J♦A♦6♠J♦A♦8♠J♦A♥3♦2♠J♥A♥2♣6♠J♥'),
(53, 'Antlang', 'ant', '\"Hello World\"'),
(54, 'Apc', 'apc', 'probe program\r\n{\r\n	on_entry log (\"Hello World\n\");\r\n}'),
(55, 'Apex', 'cls', 'global with sharing class HelloWorld {\r\n  global static void main() {\r\n    System.debug(\'Hello World\');\r\n  }\r\n}'),
(56, 'Apl', 'apl', '⎕←\'Hello World\''),
(57, 'Applescript', 'scpt', 'display dialog \"Hello World\"'),
(58, 'Arc', 'arc', '(prn \"Hello World\")'),
(59, 'Arduino', 'ino', 'void setup() {\r\n  Serial.begin(9600);\r\n  Serial.println(\"Hello World\");\r\n}\r\n\r\nvoid loop() {\r\n\r\n}'),
(60, 'Arena', 'are', 'print(\"Hello World\");'),
(61, 'Argh', 'agh', 'lpppppppppppsrfj\r\n Hello World*  j\r\n             qPh'),
(62, 'Arnoldc', 'arnoldc', 'IT\'S SHOWTIME\r\nTALK TO THE HAND \"Hello World\"\r\nYOU HAVE BEEN TERMINATED'),
(63, 'Asciidots', 'ascii', '.-$\"Hello World\"'),
(64, 'Ash', 'ash', 'public class Ash {\r\n  public static func main(args : [String]) {\r\n    println(\"Hello World\")\r\n  }\r\n}'),
(65, 'Asm2Bf', 'asm', 'STK 2\r\nORG 0\r\n\r\nTXT \"Hello World\"\r\nDB_ 0\r\n\r\n@LOOP\r\n	RCL R2, R1\r\n	JZ_ R2, 0\r\n	OUT R2\r\n	INC R1\r\n	JMP %LOOPs'),
(66, 'Asp', 'asp', '<%@ Language= \"VBScript\" %>\r\n<%\r\n    Response.Write(\"Hello World\")\r\n%>'),
(67, 'Aspectj', 'aj', 'System.out.println(\"Hello World\");'),
(68, 'Assember Hp 85', 'asm', '010 ! Hello world in Assembler for the HP-85\r\n020         NAM HELLO\r\n030         DEF RUNTIM\r\n040         DEF TOKENS\r\n050         DEF PARSE\r\n060         DEF ERMSG\r\n070         DEF INIT\r\n100 PARSE   BYT 0,0\r\n110 RUNTIM  BYT 0,0,377,377\r\n120 TOKENS  BYT 377\r\n130 ERMSG   BYT 377\r\n140 !\r\n150 INIT    LDM R26,=MSG\r\n160         ADMD R26,=BINTAB\r\n170         LDM R36,=12D,0\r\n180         JSB =OUTSTR\r\n190         RTN\r\n200 MSG     ASC \"Hello World\"\r\n210 BINTAB  DAD 101233\r\n220 OUTSTR  DAD 35052\r\n300         FIN'),
(69, 'Assembler 6502', 'asm', '; goodbyeworld.s for C= 8-bit machines, ca65 assembler format.\r\n; String printing limited to strings of 256 characters or less.\r\n \r\na_cr	= $0d		; Carriage return.\r\nbsout	= $ffd2		; KERNAL ROM, output a character to current device.\r\n \r\n	.code\r\n \r\n	ldx #0		; Starting index 0 in X register.\r\nprintnext:\r\n	lda text,x	; Get character from string.\r\n	beq done	; If we read a 0 we\'re done.\r\n	jsr bsout	; Output character. \r\n	inx		; Increment index to next character.\r\n	bne printnext	; Repeat if index doesn\'t overflow to 0.\r\ndone:\r\n	rts		; Return from subroutine.\r\n \r\n	.rodata\r\n \r\ntext:\r\n	.byte	\"Hello World\", a_cr, 0'),
(70, 'Assembler 6502Appleii', 'asm', 'STROUT 	EQU	$DB3A ;OUTPUTS AY-POINTED NULL TERMINATED STRING\r\n	LDY	#>HELLO\r\n	LDA	#<HELLO\r\n	JMP	STROUT\r\n\r\nHELLO	ASC	\"Hello World\",00'),
(71, 'Assembler 6502C64', 'asm', 'ldy #0\r\nbeq in\r\nloop:\r\njsr $ffd2\r\niny\r\nin:\r\nlda hello,y\r\nbne loop\r\nrts\r\nhello: .tx \"Hello World!\"\r\n       .by 13,10,0'),
(72, 'Assembler 6809Vectrex', 'asm', '; Hello World for Vectrex computer with 6809 CPU\r\n; by Frog ( http://frog.enlight.ru )\r\n; 24 March 2016\r\n\r\n;***************************************************************************\r\n                org     0\r\n\r\n; this header required to identify ROM by Vectrex hardware (only year allowed to change)\r\n                db      \"g GCE 2016\", $80       ; \'g\' is copyright sign\r\n                dw      $F600                   ; music from the rom (no music)\r\n                db      $FC, $30, 33, -$2a      ; height, width, rel y, rel x for app title\r\n                db      \"HELLO WORLD\", $80      ; app title, ending with $80\r\n                db      0                       ; end of header\r\n\r\n; main loop (required to redraw vectors on CRT screen)\r\nloop:\r\n\r\n; recalibrate CRT, reset beam to 0,0 (center of the screen)\r\n                jsr     $f192                   ; Wait_Recal subroutine in ROM\r\n\r\n                ldu     #helloworld             ; string address\r\n                lda     #10                     ; Y\r\n                ldb     #-45                    ; X\r\n\r\n                jsr     $f37a                   ; Print_Str_d subroutine in ROM\r\n\r\n                bra     loop\r\n\r\n; Text data ($80 - end of line)\r\n\r\nhelloworld:     db      \'HELLO WORLD!\',$80'),
(73, 'Assembler 8048 Videopac', 'asm', '; Hello World for Philips Videopac (Magnavox Odyssey 2)\r\n; by Frog ( https://github.com/petersobolev )\r\n; 25 July 2016\r\n\r\n	cpu	8048\r\n	org	400h\r\n\r\n; interrupt vectors\r\n	jmp     02C3h                           ; selectgame (RESET)\r\n	jmp     0009h                           ; irq\r\n	jmp	timer                           ; timer\r\n	jmp	001Ah                           ; vsyncirq\r\n	jmp	start                           ; after selectgame\r\n	jmp	0044h                           ; soundirq\r\n\r\ntimer:\r\n	ret                                     ; no timer needed\r\n\r\n\r\nstart:\r\n\r\n	call	011Ch                           ; gfxoff\r\n\r\n	mov	r0,#010h                        ; pointer in VDC - which char to display (one of 12)\r\n	mov	r3,#40                          ; x\r\n	mov	r4,#100                         ; y\r\n	mov	r1,#hellostr & 0ffh             ; string to print (should be on same 255 bytes page)\r\n\r\n	mov	r2,#11                          ; string length\r\n\r\nnextchar:\r\n	mov	a,r1\r\n	movp	a,@a                            ; get char located at @r1\r\n	mov	r5,a\r\n	inc	r1                              ; inc addr of char\r\n	mov	r6,#0eh                         ; white color\r\n	call	03EAh                           ; printchar bios subroutine (increases r0, r3)\r\n	djnz	r2,nextchar\r\n\r\n	call	0127h                           ; gfxon (show what is written to VDC)\r\n\r\n\r\nloop:\r\n	jmp 	loop                            ; just wait and do nothing\r\n\r\n; \'HELLO WORLD\' (ascii not supported by assembler)\r\nhellostr:\r\n	db 	01dh, 012h, 00eh, 00eh, 017h, 00ch, 011h, 017h, 013h, 00eh, 01ah'),
(74, 'Assembler Arm', 's', '.data\r\nmessage:                .asciz \"Hello World\n\"\r\n\r\n.text\r\n.global main\r\nmain:\r\n    mov r0, #1          @ file descriptor 1\r\n    ldr r1, =message    @ load address of message\r\n    mov r7, #4          @ system call write\r\n    swi #0              @ display message\r\n\r\n    mov r0, #0\r\n    bx lr'),
(75, 'Assembler Atari2600', 'asm', ';\r\n; hello.asm\r\n;\r\n; A \"Hello, World!\" which illustrates an Atari 2600 programming\r\n; introduction talk (slides at http://slideshare.net/chesterbr).\r\n;\r\n; This is free software (see license below). Build it with DASM\r\n; (http://dasm-dillon.sourceforge.net/), by running:\r\n;\r\n;   dasm hello.asm -ohello.bin -f3\r\n;\r\n\r\n    PROCESSOR 6502\r\n    INCLUDE \"vcs.h\"\r\n\r\n    ORG $F000       ; Start of \"cart area\" (see Atari memory map)\r\n\r\nStartFrame:\r\n    lda #%00000010  ; Vertical sync is signaled by VSYNC\'s bit 1...\r\n    sta VSYNC\r\n    REPEAT 3        ; ...and lasts 3 scanlines\r\n        sta WSYNC   ; (WSYNC write => wait for end of scanline)\r\n    REPEND\r\n    lda #0\r\n    sta VSYNC       ; Signal vertical sync by clearing the bit\r\n\r\nPreparePlayfield:   ; We\'ll use the first VBLANK scanline for setup\r\n    lda #$00        ; (could have done it before, just once)\r\n    sta ENABL       ; Turn off ball, missiles and players\r\n    sta ENAM0\r\n    sta ENAM1\r\n    sta GRP0\r\n    sta GRP1\r\n    sta COLUBK      ; Background color (black)\r\n    sta PF0         ; PF0 and PF2 will be \"off\" (we\'ll focus on PF1)...\r\n    sta PF2\r\n    lda #$FF        ; Playfield collor (yellow-ish)\r\n    sta COLUPF\r\n    lda #$00        ; Ensure we will duplicate (and not reflect) PF\r\n    sta CTRLPF\r\n    ldx #0          ; X will count visible scanlines, let\'s reset it\r\n    REPEAT 37       ; Wait until this (and the other 36) vertical blank\r\n        sta WSYNC   ; scanlines are finished\r\n    REPEND\r\n    lda #0          ; Vertical blank is done, we can \"turn on\" the beam\r\n    sta VBLANK\r\n\r\nScanline:\r\n    cpx #174        ; \"HELLO WORLD\" = (11 chars x 8 lines - 1) x 2 scanlines =\r\n    bcs ScanlineEnd ;   174 (0 to 173). After that, skip drawing code\r\n    txa             ; We want each byte of the hello world phrase on 2 scanlines,\r\n    lsr             ;   which means Y (bitmap counter) = X (scanline counter) / 2.\r\n    tay             ;   For division by two we use (A-only) right-shift\r\n    lda Phrase,y    ; \"Phrase,Y\" = mem(Phrase+Y) (Y-th address after Phrase)\r\n    sta PF1         ; Put the value on PF bits 4-11 (0-3 is PF0, 12-15 is PF2)\r\nScanlineEnd:\r\n    sta WSYNC       ; Wait for scanline end\r\n    inx             ; Increase counter; repeat untill we got all kernel scanlines\r\n    cpx #191\r\n    bne Scanline\r\n\r\nOverscan:\r\n    lda #%01000010  ; \"turn off\" the beam again...\r\n    sta VBLANK      ;\r\n    REPEAT 30       ; ...for 30 overscan scanlines...\r\n        sta WSYNC\r\n    REPEND\r\n    jmp StartFrame  ; ...and start it over!\r\n\r\nPhrase:\r\n    .BYTE %00000000 ; H\r\n    .BYTE %01000010\r\n    .BYTE %01111110\r\n    .BYTE %01000010\r\n    .BYTE %01000010\r\n    .BYTE %01000010\r\n    .BYTE %00000000\r\n    .BYTE %00000000 ; E\r\n    .BYTE %01111110\r\n    .BYTE %01000000\r\n    .BYTE %01111100\r\n    .BYTE %01000000\r\n    .BYTE %01000000\r\n    .BYTE %01111110\r\n    .BYTE %00000000\r\n    .BYTE %00000000 ; L\r\n    .BYTE %01000000\r\n    .BYTE %01000000\r\n    .BYTE %01000000\r\n    .BYTE %01000000\r\n    .BYTE %01000000\r\n    .BYTE %01111110\r\n    .BYTE %00000000\r\n    .BYTE %00000000 ; L\r\n    .BYTE %01000000\r\n    .BYTE %01000000\r\n    .BYTE %01000000\r\n    .BYTE %01000000\r\n    .BYTE %01000000\r\n    .BYTE %01111110\r\n    .BYTE %00000000 ; O\r\n    .BYTE %00000000\r\n    .BYTE %00111100\r\n    .BYTE %01000010\r\n    .BYTE %01000010\r\n    .BYTE %01000010\r\n    .BYTE %01000010\r\n    .BYTE %00111100\r\n    .BYTE %00000000\r\n    .BYTE %00000000 ; white space\r\n    .BYTE %00000000\r\n    .BYTE %00000000\r\n    .BYTE %00000000\r\n    .BYTE %00000000\r\n    .BYTE %00000000\r\n    .BYTE %00000000\r\n    .BYTE %00000000\r\n    .BYTE %00000000 ; W\r\n    .BYTE %01000010\r\n    .BYTE %01000010\r\n    .BYTE %01000010\r\n    .BYTE %01000010\r\n    .BYTE %01011010\r\n    .BYTE %00100100\r\n    .BYTE %00000000\r\n    .BYTE %00000000 ; O\r\n    .BYTE %00111100\r\n    .BYTE %01000010\r\n    .BYTE %01000010\r\n    .BYTE %01000010\r\n    .BYTE %01000010\r\n    .BYTE %00111100\r\n    .BYTE %00000000\r\n    .BYTE %00000000 ; R\r\n    .BYTE %01111100\r\n    .BYTE %01000010\r\n    .BYTE %01000010\r\n    .BYTE %01111100\r\n    .BYTE %01000100\r\n    .BYTE %01000010\r\n    .BYTE %00000000\r\n    .BYTE %00000000 ; L\r\n    .BYTE %01000000\r\n    .BYTE %01000000\r\n    .BYTE %01000000\r\n    .BYTE %01000000\r\n    .BYTE %01000000\r\n    .BYTE %01111110\r\n    .BYTE %00000000\r\n    .BYTE %00000000 ; D\r\n    .BYTE %01111000\r\n    .BYTE %01000100\r\n    .BYTE %01000010\r\n    .BYTE %01000010\r\n    .BYTE %01000100\r\n    .BYTE %01111000\r\n    .BYTE %00000000 ; Last byte written to PF1 (important, ensures lower tip\r\n                    ;                           of letter \"D\" won\'t \"bleeed\")\r\n\r\n    ORG $FFFA             ; Cart config (so 6502 can start it up)\r\n\r\n    .WORD StartFrame      ;     NMI\r\n    .WORD StartFrame      ;     RESET\r\n    .WORD StartFrame      ;     IRQ\r\n\r\n    END\r\n\r\n;\r\n; Copyright 2011-2013 Carlos Duarte do Nascimento (Chester). All rights reserved.\r\n;\r\n; Redistribution and use in source and binary forms, with or without modification, are\r\n; permitted provided that the following conditions are met:\r\n;\r\n;    1. Redistributions of source code must retain the above copyright notice, this list of\r\n;       conditions and the following disclaimer.\r\n;\r\n;    2. Redistributions in binary form must reproduce the above copyright notice, this list\r\n;       of conditions and the following disclaimer in the documentation and/or other materials\r\n;       provided with the distribution.\r\n;\r\n; THIS SOFTWARE IS PROVIDED BY CHESTER \'\'AS IS\'\' AND ANY EXPRESS OR IMPLIED\r\n; WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n; FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR\r\n; CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\r\n; SERVICES;  LOSS OF USE, DATA, OR PROFITS;  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\r\n; ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n; NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\r\n; ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n;\r\n; The views and conclusions contained in the software and documentation are those of the\r\n; authors and should not be interpreted as representing official policies, either expressed\r\n; or implied, of Chester.\r\n;'),
(76, 'Assembler Bootsect', 'asm', '[ORG	0x7C00]\r\n\r\n	mov	si,HelloWorld\r\n	call	print_string\r\n\r\n	jmp	$\r\n	\r\n	HelloWorld	db	\"Hello world!\",0xD,0xA,0\r\n	\r\nprint_string:\r\n	mov	ah,0xE\r\n.repeat:\r\n	lodsb\r\n	cmp	al,0\r\n	je	.done\r\n	int	0x10\r\n	jmp	.repeat\r\n.done:\r\n	ret\r\n	\r\n	times	510-($-$$)	db	0\r\n	dw	0xAA55'),
(77, 'Assembler Dcpu16', 'asm', ';;;;;;;;;;;;;;;;;;;\r\njsr init_devices\r\njsr Hello_World\r\nset PC,end\r\n;;;;;;;;;;;;;;;;;;;\r\n:dev_screen   dat 0\r\n:device_count dat 0\r\n;;;;;;;;;;;;;;;;;;;\r\n:find_devices\r\nhwn [device_count]\r\nset I,0\r\n:find_devices_loop\r\nhwq i\r\nife A,0xf615\r\n    set [dev_screen],1\r\nadd I,1\r\nifn I,device_count\r\n    set PC,find_devices_loop\r\nset PC,pop\r\n:init_devices\r\njsr find_devices\r\n;set up display \r\nset A,0\r\nset B,0x8000\r\nhwi [dev_screen]\r\nset PC,pop\r\n\r\n:Hello_World\r\nset [0x8000],0x1048\r\nset [0x8001],0x1065\r\nset [0x8002],0x106c\r\nset [0x8003],0x106c\r\nset [0x8004],0x106f\r\nset [0x8005],0x102c\r\nset [0x8006],0\r\nset [0x8007],0x1077\r\nset [0x8008],0x106f\r\nset [0x8009],0x1072\r\nset [0x800a],0x106c\r\nset [0x800b],0x1064\r\nset [0x800c],0x1021\r\nset PC,pop\r\n\r\n:end\r\nset PC,end'),
(78, 'Assembler Fasm Dos', 'asm', 'format MZ\r\n\r\nentry .code: start\r\n\r\nsegment .code\r\nstart:\r\n	mov ax, .data ; put data segment into ax\r\n	mov ds, ax    ; there, I setup the DS for you\r\n	mov dx, msg   ; now I give you the offset in DX. DS:DX now completed.\r\n	mov ah, 9h\r\n	int 21h\r\n	mov ah, 4ch\r\n	int 21h\r\n\r\nsegment .data\r\n	msg db \'Hello World\', \'$\''),
(79, 'Assembler Hla', 'hla', 'program HelloWorld;\r\n\r\n#include( \"stdlib.hhf\" );\r\n\r\nbegin HelloWorld;\r\n  stdout.put( \"Hello, world!\", nl );\r\nend HelloWorld;'),
(80, 'Assembler Ibm360', 'asm', 'LA    1,MSGAREA     Point Register 1 to message area\r\n         SVC   35            Invoke SVC 35 (Write to Operator) \r\n         BR    14            Return\r\nMSGAREA  EQU   *             Message Area\r\n         DC    AL2(19)       Total area length = 19 (Prefix length:4 + Data Length:15) \r\n         DC    XL2\'00\'       2 bytes binary of zeros\r\n         DC    C\'Hello world!\'  Text to be written to system console\r\n         END'),
(81, 'Assembler Intel', 'asm', '; hello_world.asm intel \r\n\r\n.model small\r\n\r\n.stack 100h\r\n\r\n.data\r\nmsg db \"Hello World!\",\'$\'\r\n\r\n.code\r\nmain proc\r\n        mov ax,@data\r\n        mov ds, ax\r\n\r\n; hello-world is there \r\n        mov dx,offset msg\r\n        mov ah,09\r\n        int 21h\r\n\r\n        mov ax,4c00h\r\n        int 21h\r\n\r\nmain endp\r\nend main'),
(82, 'Assembler Lc 3', 'asm', '.ORIG x3000\r\n\r\n			LEA R0, HELLOWORLD\r\n			PUTS\r\n	\r\nHELLOWORLD	.STRINGZ \"Hello world!\n\"'),
(83, 'Assembler M68000 Amigaos', 'asm', '; \"Hello World\" in Motorola 68000 machine language, for AmigaOS\r\n\r\nExecBase     = 4\r\nOpenLibrary  = -552\r\nCloseLibrary = -414\r\nPutStr       = -948\r\n\r\n	section \"main\", code\r\n\r\n	; open \"dos.library\"\r\n\r\n	move.l	ExecBase, a6\r\n	lea	lib, a1\r\n	moveq	#0, d0\r\n	jsr	(OpenLibrary, a6)\r\n	move.l	d0, a6\r\n\r\n	; print the message\r\n\r\n	move.l	#msg, d1\r\n	jsr	(PutStr, a6)\r\n\r\n	; close the library, and exit with code 0\r\n\r\n	move.l	a6, a1\r\n	move.l	ExecBase, a6\r\n	jsr	(CloseLibrary, a6)\r\n\r\n	moveq	#0, d0\r\n	rts\r\n\r\nlib	dc.b	\"dos.library\", 0\r\nmsg	dc.b	\"Hello World!\n\", 0'),
(84, 'Assembler Masm Dos', 'asm', '; 16 bit dos assembly\r\n.model small\r\n.stack\r\n.data\r\n    message   db \"Hello world!\", \"$\"\r\n.code\r\n    main    proc\r\n        mov   ax,seg message\r\n        mov   ds,ax\r\n        mov   ah,09\r\n        lea   dx,message\r\n        int   21h\r\n        \r\n        mov   ax,4c00h\r\n        int   21h\r\n    main    endp\r\nend main'),
(85, 'Assembler Masm Win32', 'asm', '; ---------------------------------------------\r\n; Hello World for Win32 Intel x86 Assembly\r\n;\r\n; by fruel (https://github.com/fruel)\r\n; 13 June 2016\r\n; ---------------------------------------------\r\n\r\n.386\r\n.model flat,stdcall\r\n.stack 4096\r\n\r\nEXTRN ExitProcess@4 : PROC\r\nEXTRN GetStdHandle@4 : PROC\r\nEXTRN WriteConsoleA@20 : PROC\r\n\r\n.data\r\nmsg BYTE \"Hello World!\",0\r\nbytesWritten DWORD ?\r\n\r\n.code\r\nmain PROC\r\n    push -11                 ; nStdHandle (STD_OUTPUT_HANDLE)\r\n    call GetStdHandle@4\r\n \r\n    push 0                   ; lpReserved\r\n    push OFFSET bytesWritten ; lpNumberOfCharsWritten\r\n    push LENGTHOF msg - 1    ; nNumberOfCharsToWrite\r\n    push OFFSET msg          ; *lpBuffer\r\n    push eax                 ; hConsoleOutput\r\n    call WriteConsoleA@20\r\n\r\n    push 0                   ; uExitCode\r\n    call ExitProcess@4\r\nmain ENDP\r\nEND main'),
(86, 'Assembler Masm Win64', 'asm', '; ---------------------------------------------\r\n; Hello World for Win64 Intel x64 Assembly\r\n;\r\n; by fruel (https://github.com/fruel)\r\n; 13 June 2016\r\n; ---------------------------------------------\r\n\r\nGetStdHandle PROTO\r\nExitProcess PROTO\r\nWriteConsoleA PROTO\r\n\r\n.data\r\nmsg BYTE \"Hello World!\",0\r\nbytesWritten DWORD ?\r\n\r\n.code\r\nmain PROC\r\n    sub rsp, 5 * 8              ; reserve shadow space\r\n\r\n    mov rcx, -11                ; nStdHandle (STD_OUTPUT_HANDLE)\r\n    call GetStdHandle\r\n\r\n    mov  rcx, rax               ; hConsoleOutput\r\n    lea  rdx, msg               ; *lpBuffer\r\n    mov  r8, LENGTHOF msg - 1   ; nNumberOfCharsToWrite\r\n    lea  r9, bytesWritten       ; lpNumberOfCharsWritten\r\n    mov  QWORD PTR [rsp + 4 * SIZEOF QWORD], 0  ; lpReserved\r\n    call WriteConsoleA\r\n\r\n    mov rcx, 0                  ; uExitCode\r\n    call ExitProcess\r\nmain ENDP\r\nEND'),
(87, 'Assembler Mips', 'asm', '.data\r\n    hw:        .asciiz        \"Hello, World!\"\r\n.text\r\nmain:\r\n    la $a0, hw           #load the address of hw into $a0\r\n    li $v0, 4            #load 4 into $v0\r\n    syscall              #perform the print_string syscall\r\n    li $v0, 10           #load 10 into $v0\r\n    syscall              #perform the exit syscall'),
(88, 'Assembler Mmix', 'asm', 't	IS	$255\r\n	LOC	Data_Segment\r\n	GREG	@\r\nString	BYTE	\"Hello World\",#a,0\r\n\r\n	LOC	#100\r\nMain	LDA	t,String\r\n	TRAP	0,Fputs,StdOut\r\n	TRAP	0,Halt,0'),
(89, 'Assembler Nasm Freebsd', 'asm', 'section	.text\r\n    global _start			;must be declared for linker (ld)\r\n\r\n_syscall:		\r\n	int	0x80		;system call\r\n	ret\r\n\r\n_start:				;tell linker entry point\r\n\r\n	push	dword len	;message length\r\n	push	dword msg	;message to write\r\n	push	dword 1		;file descriptor (stdout)\r\n	mov	eax,0x4		;system call number (sys_write)\r\n	call	_syscall	;call kernel\r\n\r\n				;the alternate way to call kernel:\r\n				;push	eax\r\n				;call	7:0\r\n\r\n	add	esp,12		;clean stack (3 arguments * 4)\r\n\r\n	push	dword 0		;exit code\r\n	mov	eax,0x1		;system call number (sys_exit)\r\n	call	_syscall	;call kernel\r\n\r\n				;we do not return from sys_exit,\r\n				;there\'s no need to clean stack\r\nsection	.data\r\n\r\nmsg	db	\"Hello, world!\",0xa	;our string\r\nlen	equ	$ - msg			;length of our string'),
(90, 'Assembler Nasm Linux', 'asm', 'section	.text\r\n    global _start			;must be declared for linker (ld)\r\n\r\n_start:					;tell linker entry point\r\n\r\n	xor	ebx,ebx 	;ebx=0\r\n	mov	ecx,msg		;address of message to write\r\n	lea	edx,[ebx+len]	;message length\r\n	lea	eax,[ebx+4]	;system call number (sys_write)\r\n	inc	ebx		;file descriptor (stdout)\r\n	int	0x80		;call kernel\r\n\r\n	xor	eax, eax	;set eax=0\r\n	inc	eax		;system call number (sys_exit)\r\n	int	0x80		;call kernel\r\n\r\nsection	.rodata\r\n\r\nmsg	db	\'Hello, world!\',0xa	;our string\r\nlen	equ	$ - msg			;length of our string'),
(91, 'Assembler Nasm Linux64', 'asm', 'section	.text\r\n    global _start			;must be declared for linker (ld)\r\n\r\n_start:					;tell linker entry point\r\n\r\n	xor	eax,eax		;eax:=0\r\n	lea	edx,[rax+len]	;message length\r\n	mov	al,1		;system call number (sys_write)\r\n	mov	esi,msg		;message to write\r\n	mov	edi,eax		;file descriptor (stdout)\r\n	syscall			;call kernel\r\n	\r\n	xor	edi, edi	;return 0 (EXIT_SUCCESS)\r\n	lea	eax,[rdi+60]	;system call number (sys_exit)\r\n	syscall			;call kernel\r\n\r\nsection	.rodata\r\n\r\nmsg	db	\'Hello, world!\',0xa	;our string\r\nlen	equ	$ - msg			;length of our string'),
(92, 'Assembler Nasm Macho64', 'asm', 'global start\r\n\r\nsection .text\r\nstart:\r\n    mov         rax, 0x2000004  ; write\r\n    mov         rdi, 1          ; stdout\r\n    mov         rsi, msg\r\n    mov         rdx, msg.len\r\n    syscall\r\n\r\n    mov         rax, 0x2000001  ; exit\r\n    mov         rdi, 0\r\n    syscall\r\n\r\nsection .data\r\nmsg:    db      \"Hello, World!\", 10\r\n.len:   equ     $ - msg'),
(93, 'Assembler Nasm Win32', 'asm', 'BITS	32\r\nglobal	_main\r\nextern	_printf\r\nsection	.text\r\n	push	msg\r\n	call	_printf\r\n	add		esp,4\r\n	ret\r\nsection	.data\r\n	msg:	db	\"Hello world\",0Ah,0'),
(94, 'Assembler Pdp10 Midas', 'mid', 'TITLE Hello World\r\n\r\nA==1\r\nB==2\r\nTYO==1\r\n\r\nSTART:	.OPEN TYO,[.UAO,,\'TTY]\r\n	 .LOSE\r\n	MOVE A,[440700,,HELLO]\r\nLOOP:	ILDB B,A\r\n	JUMPE B,[.LOGOUT 1,]\r\n	.IOT TYO,B\r\n	JRST LOOP\r\n\r\nHELLO:	ASCIZ /Hello World/\r\n\r\n	END START'),
(95, 'Assembler Pdp11 Palx', 'palx', '.TITLE Hello World\r\n\r\nR0=%0\r\nR1=%1\r\nTPS==177564\r\nTPB==177566\r\n\r\n	.=400\r\n\r\nSTART:	MOV #1,@#TPS\r\n	MOV #HELLO,R0\r\nLOOP:	TSTB @#TPS\r\n	BPL LOOP\r\n	MOVB (R0)+,R1\r\n	BEQ STOP\r\n	MOVB R1,@#TPB\r\n	BR LOOP\r\n\r\nSTOP:	HALT\r\n\r\nHELLO:	.ASCIZ /Hello World/\r\n\r\n	.END START'),
(96, 'Assembler Tasm Dos', 'asm', 'IDEAL\r\nMODEL SMALL\r\nSTACK 100h\r\n\r\nDATASEG\r\nmsg			db \"Hello World!\", 0dh, 0ah, \"$\"\r\n\r\nCODESEG\r\nstart:\r\n	mov		ax, @data\r\n	mov		ds, ax\r\n	\r\n	mov		dx, offset msg\r\n	mov		ah, 9\r\n	int		21h\r\n	\r\n	mov		ah, 4ch\r\n	int		21h\r\n\r\nend start'),
(97, 'Assembler Tms9900 Ti99 4A', 'asm', '* Hello World for TI-99/4a computer with TMS9900 CPU\r\n* by Frog ( http://frog.enlight.ru )\r\n* 15 April 2016\r\n*\r\n****************************************************************************\r\n\r\n        DEF     START\r\n\r\nWRKSP   EQU     >8300\r\n\r\nVDPWD   EQU     >8C00           * VDP RAM write data\r\nVDPWA   EQU     >8C02           * VDP RAM read/write address\r\n\r\n\r\nSTART   LIMI    0               * disable interrupts\r\n        LWPI    WRKSP           * set default workspace\r\n\r\n* set VDP RAM start address (low and high byte)\r\n\r\n        LI      R0,>0000\r\n        ORI     R0,>4000\r\n        SWPB    R0\r\n        MOVB    R0,@VDPWA\r\n        SWPB    R0\r\n        MOVB    R0,@VDPWA\r\n\r\n        LI      R1,HELLOWORLD   * ascii string address\r\n        LI      R2,12           * total chars\r\n\r\nNEXTCHAR\r\n        MOVB    *R1+,@VDPWD     * put next char on screen\r\n        DEC     R2\r\n        JNE     NEXTCHAR\r\n\r\nLOOPBACK\r\n        JMP LOOPBACK            * stop and do nothing\r\n\r\n\r\nHELLOWORLD\r\n        TEXT \'HELLO WORLD!\'     * string data\r\n        BYTE 0\r\n\r\n        END'),
(98, 'Assembler Vax Ultrix', 'asm', '.data\r\nhw:\r\n	.ascii \"Hello World!12\"\r\n.text\r\n	.align 1\r\n.globl _main\r\n_main:\r\n	.word 0\r\n	pushl $13\r\n	pushab hw\r\n	pushl $1\r\n	calls $3,_write\r\n	ret'),
(99, 'Assembler Z80 Knightos', 'asm', '#include \"kernel.inc\"\r\n    .db \"KEXC\"\r\n    .db KEXC_ENTRY_POINT\r\n    .dw start\r\nstart:\r\n    pcall(getLcdLock)\r\n\r\n    pcall(allocScreenBuffer)\r\n    pcall(clearScreen)\r\n\r\n    kld(hl, message)\r\n    ld de, 0\r\n    pcall(drawStr)\r\n\r\n    jr $ ; Loop forever\r\n\r\nmessage:\r\n    .db \"Hello world!\", 0'),
(100, 'Assembler Z80 Ti83Calculator', 'asm', '.NOLIST\r\n#define   EQU   .equ\r\n#define   equ   .equ\r\n#define   END   .end\r\n#define   end   .end\r\n#include \"ti83plus.inc\"\r\n.LIST\r\n     .org 9D93h\r\n      .db $BB,$6D\r\n      ld a,0\r\n      ld (CURCOL),a\r\n      ld (CURROW),a\r\n      ld hl,text\r\n      B_CALL(_PutS)\r\n      B_CALL(_NewLine)\r\n      ret\r\ntext:\r\n      .db \"Hello, World\",0\r\n.end\r\nend'),
(101, 'Assembler Z80 Zxspectrum', 'asm', 'org $6000\r\n	ld bc, STRING\r\n	ld de, SCR\r\n\r\nLOOP\r\n	ld a, (bc)\r\n	cp 0\r\n	jr z, EXIT\r\n	rst $10\r\n	inc bc\r\n	inc de\r\n	jr LOOP\r\n\r\nEXIT\r\n	ret\r\n	\r\nSCR equ 16384\r\n\r\nSTRING\r\n	defb \"Hello World!\"\r\n	defb 13, 0'),
(102, 'Ats2', 'dats', 'implement main0 () = println! \"Hello World\"'),
(103, 'Attache', '%40', 'Print[\"Hello World\"]'),
(104, 'Autohotkey', 'ahk', 'MsgBox, Hello World'),
(105, 'Autoit', 'au3', 'MsgBox(0, \"Message Box\", \"Hello World\")'),
(106, 'Avisynth', 'avs', 'MessageClip(\"Hello World\")'),
(107, 'Awful', 'yuk', '#!/usr/bin/awful\r\n\r\n:writeln s\"Hello World\"'),
(108, 'Awk', 'awk', '# awk -f awk.awk\r\nBEGIN { print \"Hello World\" }'),
(109, 'B', 'b', 'main() {\r\n    putchar (\'Hell\'); putchar (\'o Wo\'); putchar (\'rld\'); putchar (\'*n\');\r\n}'),
(110, 'Baik', 'ina', 'tulis \"Hello World\"'),
(111, 'Ballerina', 'bal', 'import ballerina/io;\r\n\r\npublic function main() {\r\n    io:println(\"Hello World\");'),
(112, 'Bash', 'bash', '#!/bin/bash\r\n\r\necho \"Hello World\"'),
(113, 'Basic 256', 'kbs', 'Print \"Hello World\"'),
(114, 'Basic', 'bas', '10 PRINT \"Hello World\"\r\n20 END'),
(115, 'Batch', 'bat', '@echo off\r\necho Hello World'),
(116, 'Batch', 'cmd', '@echo off\r\necho Hello World'),
(117, 'Batsh', 'batsh', 'println(\"Hello World\");'),
(118, 'Battlestar', 'bts', '#!/usr/bin/bts\r\nconst hello = \"Hello World\n\"\r\nprint(hello)'),
(119, 'Bcpl', 'bcl', 'GET \"LIBHDR\"\r\n\r\nLET START() BE\r\n$(\r\n  WRITES(\"Hello World*N\")\r\n$)'),
(120, 'Beatnik', 'beatnik', 'Soars, larkspurs, rains.\r\nIndistinctness.\r\nMario snarl (nurses, natures, rules...) sensuously retries goal.\r\nAgribusinesses\' costs par lain ropes (mopes) autos\' cores.\r\nTuner ambitiousness.\r\nFlit.\r\nDour entombment.\r\nLegals\' saner kinking lapse.\r\nNests glint.\r\nDread, tied futures, dourer usual tumor grunts alter atonal\r\n  garb tries shouldered coins.\r\nTaste a vast lustiness.\r\nStile stuns gad subgroup gram lanes.\r\nDraftee insurer road: cuckold blunt, strut sunnier.\r\nRely enure pantheism: arty gain groups (genies, pan) titters, tattles, nears.\r\nBluffer tapes?  Idle diatom stooge!\r\nFeted antes anklets ague?  Remit goiter gout!\r\nDoubtless teared toed alohas will dull gangs\' aerials\' tails\' sluices;\r\nGusset ends!  Gawkier halo!\r\n\r\nEnter abstruse rested loser beer guy louts.\r\nCurtain roams lasso weir lupus stunt.\r\nTruant bears animate talon.  Entire torte originally timer.\r\nRedo stilt gobs.\r\n\r\nUtter centaurs;\r\nUrgent stars;\r\nUsurers (dilute);\r\nNoses;\r\nBones;\r\nBrig sonar graders;\r\nUtensil silts;\r\nLazies.\r\nFret arson veterinary rows.\r\n\r\nAtlas grunted: \"Pates, slues, sulfuric manor liaising tines,\r\n  trailers, rep... unfair!  Instant snots!\"\r\n\r\nSled rested until eatery fail.\r\nErgs fortitude\r\n  Indent spotter\r\nEuros enter egg.\r\nCurious tenures.\r\nTorus cutlasses.\r\nSarong torso earns cruel lags it reeled.\r\n\r\nEngineer: \"Erase handbag -- unite ratification!\"\r\n\r\noaring oaten donkeys unsold, surer rapid saltest tags\r\nBUTTERED TIBIA LUGS REWIRING TOILETS\r\nanion festers raring edit epilogues.\r\nDIRGE ROTOR.\r\nlinnet oaring.\r\nGORE BOOTIES.\r\nIroned goon lists tallest sublets --\r\nRiots,\r\nRaucous onset.\r\n\r\nIgnobly, runners\' diet anguishes sunrise loner.\r\nErode mob, slier switcher!\r\nLoaners stilt drudge pearl atoll, risking hats\' ends.\r\n\r\nRebind sitters.\r\n\r\nToga epistles -- crud lard.  (Pager purse dons souls.)\r\n\r\nglob title a curio hired rites shed suds lade grease strut arctic revs toad\r\nunless idlers rind stilt region land GERMICIDES SULTANA GUTS gill siting leans\r\nnice spurs\r\ntests gloves\r\nroused asp\r\n\r\nHoles!  Moles!  (Sores!)\r\nHygienists!  Scars!  (Asses!)\r\nSmells spell rares.\r\n\r\nCubs instant sing in parse goodies.\r\nRosin.  Unhelpful sisal acres.  Slope told.\r\nMALENESS PASTA LAB.  \"Infirmary vine,\" rang illiterates (beans).\r\nRosin sours, insults truss abalones, nailed rules, helical atlases.\r\nDear remodeling stings mar rents.\r\nSunless shiner orb (silly idol.)\r\nClarity disses senna.\r\nVagabonds sauted; sloes performed gelds.\r\nAlter post radial lip sectioning gums.\r\nSaint Towellings.\r\nLarger aeons telephone stolid char, pal!\r\nBoats Dean forsook, rosters, tunas, terrariums -- united, traced.\r\nNude pagoda careens.'),
(121, 'Beef', 'bf', 'using System;\r\n\r\nnamespace HelloWorld\r\n{\r\n    class Program\r\n    {\r\n        static void Main()\r\n        {\r\n            Console.WriteLine(\"Hello World\");\r\n        }\r\n    }\r\n}'),
(122, 'Befunge', 'be', '>\"dlroW olleH\",,,,,,,,,,,@'),
(123, 'Bennugd', NULL, 'import \"mod_say\" \r\n \r\nProcess Main()\r\nBegin \r\n    say(\"Hello World\");\r\nEnd'),
(124, 'Beta', 'bet', 'ORIGIN \'~beta/basiclib/betaenv\'\r\n-- program: Descriptor --\r\n(* Hello World in BETA *)\r\n(# do \'Hello World\' -> putLine #)'),
(125, 'Binaryfuck', 'bf', '000 000 000 000 000 000 000 000 000 000 110 010 000 010 000\r\n000 000 010 000 000 000 000 000 000 000 010 000 000 000 000\r\n000 000 000 000 000 000 011 011 011 011 001 111 010 010 010\r\n000 000 100 010 000 100 000 000 000 000 000 000 000 100 100\r\n000 000 000 100 011 011 000 000 100 010 000 000 000 000 000\r\n000 000 000 000 000 000 000 000 000 000 100 010 100 000 000\r\n000 100 001 001 001 001 001 001 100 001 001 001 001 001 001\r\n001 001 100'),
(126, 'Birl', 'c', 'HORA DO SHOW // main code block\r\n    CE QUER VER ESSA PORRA? (\"Hello World\n\"); // print \"Hello World\"\"\r\n    BORA CUMPADE 0; // end function\r\nBIRL'),
(127, 'Bit', 'bit', 'LINENUMBERZEROCODEPRINTZEROGOTOONELINENUMBERONECODEPRINTONEGOTOONEZEROLINENUMBE\r\nRONEZEROCODEPRINTZEROGOTOONEONELINENUMBERONEONECODEPRINTZEROGOTOONEZEROZEROLINE\r\nNUMBERONEZEROZEROCODEPRINTONEGOTOONEZEROONELINENUMBERONEZEROONECODEPRINTZEROGOT\r\nOONEONEZEROLINENUMBERONEONEZEROCODEPRINTZEROGOTOONEONEONELINENUMBERONEONEONECOD\r\nEPRINTZEROGOTOONEZEROZEROZEROLINENUMBERONEZEROZEROZEROCODEPRINTZEROGOTOONEZEROZ\r\nEROONELINENUMBERONEZEROZEROONECODEPRINTONEGOTOONEZEROONEZEROLINENUMBERONEZEROON\r\nEZEROCODEPRINTONEGOTOONEZEROONEONELINENUMBERONEZEROONEONECODEPRINTZEROGOTOONEON\r\nEZEROZEROLINENUMBERONEONEZEROZEROCODEPRINTZEROGOTOONEONEZEROONELINENUMBERONEONE\r\nZEROONECODEPRINTONEGOTOONEONEONEZEROLINENUMBERONEONEONEZEROCODEPRINTZEROGOTOONE\r\nONEONEONELINENUMBERONEONEONEONECODEPRINTONEGOTOONEZEROZEROZEROZEROLINENUMBERONE\r\nZEROZEROZEROZEROCODEPRINTZEROGOTOONEZEROZEROZEROONELINENUMBERONEZEROZEROZEROONE\r\nCODEPRINTONEGOTOONEZEROZEROONEZEROLINENUMBERONEZEROZEROONEZEROCODEPRINTONEGOTOO\r\nNEZEROZEROONEONELINENUMBERONEZEROZEROONEONECODEPRINTZEROGOTOONEZEROONEZEROZEROL\r\nINENUMBERONEZEROONEZEROZEROCODEPRINTONEGOTOONEZEROONEZEROONELINENUMBERONEZEROON\r\nEZEROONECODEPRINTONEGOTOONEZEROONEONEZEROLINENUMBERONEZEROONEONEZEROCODEPRINTZE\r\nROGOTOONEZEROONEONEONELINENUMBERONEZEROONEONEONECODEPRINTZEROGOTOONEONEZEROZERO\r\nZEROLINENUMBERONEONEZEROZEROZEROCODEPRINTZEROGOTOONEONEZEROZEROONELINENUMBERONE\r\nONEZEROZEROONECODEPRINTONEGOTOONEONEZEROONEZEROLINENUMBERONEONEZEROONEZEROCODEP\r\nRINTONEGOTOONEONEZEROONEONELINENUMBERONEONEZEROONEONECODEPRINTZEROGOTOONEONEONE\r\nZEROZEROLINENUMBERONEONEONEZEROZEROCODEPRINTONEGOTOONEONEONEZEROONELINENUMBERON\r\nEONEONEZEROONECODEPRINTONEGOTOONEONEONEONEZEROLINENUMBERONEONEONEONEZEROCODEPRI\r\nNTZEROGOTOONEONEONEONEONELINENUMBERONEONEONEONEONECODEPRINTZEROGOTOONEZEROZEROZ\r\nEROZEROZEROLINENUMBERONEZEROZEROZEROZEROZEROCODEPRINTZEROGOTOONEZEROZEROZEROZER\r\nOONELINENUMBERONEZEROZEROZEROZEROONECODEPRINTONEGOTOONEZEROZEROZEROONEZEROLINEN\r\nUMBERONEZEROZEROZEROONEZEROCODEPRINTONEGOTOONEZEROZEROZEROONEONELINENUMBERONEZE\r\nROZEROZEROONEONECODEPRINTZEROGOTOONEZEROZEROONEZEROZEROLINENUMBERONEZEROZEROONE\r\nZEROZEROCODEPRINTONEGOTOONEZEROZEROONEZEROONELINENUMBERONEZEROZEROONEZEROONECOD\r\nEPRINTONEGOTOONEZEROZEROONEONEZEROLINENUMBERONEZEROZEROONEONEZEROCODEPRINTONEGO\r\nTOONEZEROZEROONEONEONELINENUMBERONEZEROZEROONEONEONECODEPRINTONEGOTOONEZEROONEZ\r\nEROZEROZEROLINENUMBERONEZEROONEZEROZEROZEROCODEPRINTZEROGOTOONEZEROONEZEROZEROO\r\nNELINENUMBERONEZEROONEZEROZEROONECODEPRINTZEROGOTOONEZEROONEZEROONEZEROLINENUMB\r\nERONEZEROONEZEROONEZEROCODEPRINTONEGOTOONEZEROONEZEROONEONELINENUMBERONEZEROONE\r\nZEROONEONECODEPRINTZEROGOTOONEZEROONEONEZEROZEROLINENUMBERONEZEROONEONEZEROZERO\r\nCODEPRINTZEROGOTOONEZEROONEONEZEROONELINENUMBERONEZEROONEONEZEROONECODEPRINTZER\r\nOGOTOONEZEROONEONEONEZEROLINENUMBERONEZEROONEONEONEZEROCODEPRINTZEROGOTOONEZERO\r\nONEONEONEONELINENUMBERONEZEROONEONEONEONECODEPRINTZEROGOTOONEONEZEROZEROZEROZER\r\nOLINENUMBERONEONEZEROZEROZEROZEROCODEPRINTZEROGOTOONEONEZEROZEROZEROONELINENUMB\r\nERONEONEZEROZEROZEROONECODEPRINTONEGOTOONEONEZEROZEROONEZEROLINENUMBERONEONEZER\r\nOZEROONEZEROCODEPRINTONEGOTOONEONEZEROZEROONEONELINENUMBERONEONEZEROZEROONEONEC\r\nODEPRINTONEGOTOONEONEZEROONEZEROZEROLINENUMBERONEONEZEROONEZEROZEROCODEPRINTZER\r\nOGOTOONEONEZEROONEZEROONELINENUMBERONEONEZEROONEZEROONECODEPRINTONEGOTOONEONEZE\r\nROONEONEZEROLINENUMBERONEONEZEROONEONEZEROCODEPRINTONEGOTOONEONEZEROONEONEONELI\r\nNENUMBERONEONEZEROONEONEONECODEPRINTONEGOTOONEONEONEZEROZEROZEROLINENUMBERONEON\r\nEONEZEROZEROZEROCODEPRINTZEROGOTOONEONEONEZEROZEROONELINENUMBERONEONEONEZEROZER\r\nOONECODEPRINTONEGOTOONEONEONEZEROONEZEROLINENUMBERONEONEONEZEROONEZEROCODEPRINT\r\nONEGOTOONEONEONEZEROONEONELINENUMBERONEONEONEZEROONEONECODEPRINTZEROGOTOONEONEO\r\nNEONEZEROZEROLINENUMBERONEONEONEONEZEROZEROCODEPRINTONEGOTOONEONEONEONEZEROONEL\r\nINENUMBERONEONEONEONEZEROONECODEPRINTONEGOTOONEONEONEONEONEZEROLINENUMBERONEONE\r\nONEONEONEZEROCODEPRINTONEGOTOONEONEONEONEONEONELINENUMBERONEONEONEONEONEONECODE\r\nPRINTONEGOTOONEZEROZEROZEROZEROZEROZEROLINENUMBERONEZEROZEROZEROZEROZEROZEROCOD\r\nEPRINTZEROGOTOONEZEROZEROZEROZEROZEROONELINENUMBERONEZEROZEROZEROZEROZEROONECOD\r\nEPRINTONEGOTOONEZEROZEROZEROZEROONEZEROLINENUMBERONEZEROZEROZEROZEROONEZEROCODE\r\nPRINTONEGOTOONEZEROZEROZEROZEROONEONELINENUMBERONEZEROZEROZEROZEROONEONECODEPRI\r\nNTONEGOTOONEZEROZEROZEROONEZEROZEROLINENUMBERONEZEROZEROZEROONEZEROZEROCODEPRIN\r\nTZEROGOTOONEZEROZEROZEROONEZEROONELINENUMBERONEZEROZEROZEROONEZEROONECODEPRINTZ\r\nEROGOTOONEZEROZEROZEROONEONEZEROLINENUMBERONEZEROZEROZEROONEONEZEROCODEPRINTONE\r\nGOTOONEZEROZEROZEROONEONEONELINENUMBERONEZEROZEROZEROONEONEONECODEPRINTZEROGOTO\r\nONEZEROZEROONEZEROZEROZEROLINENUMBERONEZEROZEROONEZEROZEROZEROCODEPRINTZEROGOTO\r\nONEZEROZEROONEZEROZEROONELINENUMBERONEZEROZEROONEZEROZEROONECODEPRINTONEGOTOONE\r\nZEROZEROONEZEROONEZEROLINENUMBERONEZEROZEROONEZEROONEZEROCODEPRINTONEGOTOONEZER\r\nOZEROONEZEROONEONELINENUMBERONEZEROZEROONEZEROONEONECODEPRINTZEROGOTOONEZEROZER\r\nOONEONEZEROZEROLINENUMBERONEZEROZEROONEONEZEROZEROCODEPRINTONEGOTOONEZEROZEROON\r\nEONEZEROONELINENUMBERONEZEROZEROONEONEZEROONECODEPRINTONEGOTOONEZEROZEROONEONEO\r\nNEZEROLINENUMBERONEZEROZEROONEONEONEZEROCODEPRINTZEROGOTOONEZEROZEROONEONEONEON\r\nELINENUMBERONEZEROZEROONEONEONEONECODEPRINTZEROGOTOONEZEROONEZEROZEROZEROZEROLI\r\nNENUMBERONEZEROONEZEROZEROZEROZEROCODEPRINTZEROGOTOONEZEROONEZEROZEROZEROONELIN\r\nENUMBERONEZEROONEZEROZEROZEROONECODEPRINTONEGOTOONEZEROONEZEROZEROONEZEROLINENU\r\nMBERONEZEROONEZEROZEROONEZEROCODEPRINTONEGOTOONEZEROONEZEROZEROONEONELINENUMBER\r\nONEZEROONEZEROZEROONEONECODEPRINTZEROGOTOONEZEROONEZEROONEZEROZEROLINENUMBERONE\r\nZEROONEZEROONEZEROZEROCODEPRINTZEROGOTOONEZEROONEZEROONEZEROONELINENUMBERONEZER\r\nOONEZEROONEZEROONECODEPRINTONEGOTOONEZEROONEZEROONEONEZEROLINENUMBERONEZEROONEZ\r\nEROONEONEZEROCODEPRINTZEROGOTOONEZEROONEZEROONEONEONELINENUMBERONEZEROONEZEROON\r\nEONEONECODEPRINTZEROGOTOONEZEROONEONEZEROZEROZEROLINENUMBERONEZEROONEONEZEROZER\r\nOZEROCODEPRINTZEROGOTOONEZEROONEONEZEROZEROONELINENUMBERONEZEROONEONEZEROZEROON\r\nECODEPRINTZEROGOTOONEZEROONEONEZEROONEZEROLINENUMBERONEZEROONEONEZEROONEZEROCOD\r\nEPRINTONEGOTOONEZEROONEONEZEROONEONELINENUMBERONEZEROONEONEZEROONEONECODEPRINTZ\r\nEROGOTOONEZEROONEONEONEZEROZEROLINENUMBERONEZEROONEONEONEZEROZEROCODEPRINTZEROG\r\nOTOONEZEROONEONEONEZEROONELINENUMBERONEZEROONEONEONEZEROONECODEPRINTZEROGOTOONE\r\nZEROONEONEONEONEZEROLINENUMBERONEZEROONEONEONEONEZEROCODEPRINTZEROGOTOONEZEROON\r\nEONEONEONEONELINENUMBERONEZEROONEONEONEONEONECODEPRINTONE'),
(128, 'Bitbitjump', 'bbj', 'Z0:0 Z1:0\r\nstart: .deref p X\r\n       .testH X print -1\r\nprint: .out X\r\n       .add p BASE p\r\n       0 0 start\r\n       p:H X:0\r\n       H:72 101 108\r\n       108 111 44\r\n       32 87 111\r\n       114 108 100\r\n       33 10 -1\r\n       .include lib.bbj'),
(129, 'Bitsbox', 'b', 'text(\'Hello World\')'),
(130, 'Blackrum', 'br', 'slur \"Hello World\"'),
(131, 'Blc', 'Blc', 'Hello World'),
(132, 'Blitz3D', 'bb', ';Blitz3D Hello World demo by MANIAK_dobrii\r\nPrint \"Hello World\"\r\nWaitKey\r\nEnd'),
(133, 'Bloop', 'bloop', 'DEFINE PROCEDURE \'\'HELLO-WORLD\'\' [N]:\r\nBLOCK 0: BEGIN\r\n     PRINT[\'Hello World\']\r\nBLOCK 0: END.\r\nHELLO-WORLD[1];');
INSERT INTO `language` (`id`, `language_name`, `file_extension`, `hello_world_program`) VALUES
(134, 'Blub', 'blub', 'blub. blub? blub. blub. blub. blub. blub. blub. blub. blub. blub. blub. blub. blub. blub. blub. blub. blub. blub. blub. blub! blub?\r\nblub? blub. blub. blub. blub. blub. blub. blub. blub. blub. blub. blub. blub. blub. blub. blub. blub. blub. blub. blub? blub! blub!\r\nblub? blub! blub? blub. blub! blub. blub. blub? blub. blub. blub. blub. blub. blub. blub. blub. blub. blub. blub. blub. blub. blub.\r\nblub! blub? blub? blub. blub. blub. blub. blub. blub. blub. blub. blub. blub. blub? blub! blub! blub? blub! blub? blub. blub. blub.\r\nblub! blub. blub. blub. blub. blub. blub. blub. blub. blub. blub. blub. blub. blub. blub. blub. blub! blub. blub! blub. blub. blub.\r\nblub. blub. blub. blub. blub! blub. blub. blub? blub. blub? blub. blub? blub. blub. blub. blub. blub. blub. blub. blub. blub. blub.\r\nblub. blub. blub. blub. blub. blub. blub! blub? blub? blub. blub. blub. blub. blub. blub. blub. blub. blub. blub. blub? blub! blub!\r\nblub? blub! blub? blub. blub! blub. blub. blub? blub. blub? blub. blub? blub. blub. blub. blub. blub. blub. blub. blub. blub. blub.\r\nblub. blub. blub. blub. blub. blub. blub. blub. blub. blub. blub! blub? blub? blub. blub. blub. blub. blub. blub. blub. blub. blub.\r\nblub. blub. blub. blub. blub. blub. blub. blub. blub. blub. blub. blub? blub! blub! blub? blub! blub? blub. blub! blub! blub! blub!\r\nblub! blub! blub! blub. blub? blub. blub? blub. blub? blub. blub? blub. blub! blub. blub. blub. blub. blub. blub. blub. blub! blub.\r\nblub! blub! blub! blub! blub! blub! blub! blub! blub! blub! blub! blub! blub! blub. blub! blub! blub! blub! blub! blub! blub! blub!\r\nblub! blub! blub! blub! blub! blub! blub! blub! blub! blub. blub. blub? blub. blub? blub. blub. blub! blub.'),
(135, 'Bolgefuck', 'bf', 'wimpmodesHpsepslpslpsops psWpsopsrpslpsdpH     //hello world without moving pointers in wimpmode'),
(136, 'Boo', 'boo', 'print \"Hello World\"'),
(137, 'Boolfuck', NULL, ';;;+;+;;+;+;\r\n+;+;+;+;;+;;+;\r\n;;+;;+;+;;+;\r\n;;+;;+;+;;+;\r\n+;;;;+;+;;+;\r\n;;+;;+;+;+;;\r\n;;;;;+;+;;\r\n+;;;+;+;;;+;\r\n+;;;;+;+;;+;\r\n;+;+;;+;;;+;\r\n;;+;;+;+;;+;\r\n;;+;+;;+;;+;\r\n+;+;;;;+;+;;\r\n;+;+;+;'),
(138, 'Bosque', 'bsq', 'namespace NSMain;\r\n\r\nentrypoint function main(): String {  \r\n    return \"Hello World\";\r\n}'),
(139, 'Brainfuck 2D', 'bf2d', '*\r\n *                                          *0**************\r\n  *                                        *                *\r\n   *                                      *                  *\r\n    *9*******************                *          *         *7***************\r\n                        *               *          **                         *\r\n                        *              *          * *                         *\r\n                        *             *          *  *                         *\r\n                        *            *          *   *                         *\r\n                        *           **********0*    *                         *\r\n                       *                            **********                *\r\n                      *                                     *                 *\r\n                     *                                     *                  *\r\n                    *44****************************       *                   *\r\n                                                   *     *                    *\r\n                                                    *   *                     *\r\n      ***********0*                                  * 0                      *\r\n     *            *                          *3***    *                       *\r\n    *             *                         *     0                           *\r\n   *              *                        2       *                          *\r\n  *               *           *7***********         *                        *\r\n *               *           *                       *                      *\r\n 0              *           *                         *                    *4***********\r\n *             *           *                           *                                *\r\n *            *           *                             *             *0****             *\r\n *           0           *                               *           *     *              *\r\n *          ********************************************************************************\r\n *                     *                                   *       *       *\r\n **********************                                     *     *        *\r\n                                                       *     *0***         *\r\n                                                       **                  *\r\n                                                       * *                 *\r\n                                                       *  *                *\r\n                              *                        *********************\r\n                             * *                            *\r\n                            *   *                            *\r\n                           *     *                            *8****************\r\n                          *       *26****                                      *\r\n                         *              *                                      *\r\n                        *               *              *0******                *\r\n                       *      *         *             *        *              *\r\n                      *      **         *            *     *    *            *\r\n                     *      * *         *           *     **     *          *4*******\r\n                    *      *  *         *          *     * *      *                  *\r\n                   *      *   *         *         *     *  *       *                  *\r\n                  *      *    *         *        *****0*   *****************************\r\n                 *      *     *         *                            *\r\n                *      *      *        *                              *\r\n               ******0*       *       *                                *\r\n                              *      *                                  *92***********\r\n                              *     *3******                                         *\r\n                              *             *                                        *\r\n                              *          *   *                                       *\r\n                              *         **    *                                      *\r\n                              *        * *     *        *0*****                     *\r\n                              *       *  *      *      *     0                     *\r\n                              *      *   *********    *     *                     *5****\r\n                              *     *                *     *                            *\r\n                              *     0      *3********     *                              *\r\n                              *     *     *              *                                *\r\n                              **************************************************************\r\n                                    *   *              *\r\n                                    *  *    *****8*   *\r\n                                    * *     0    *   *    *\r\n                                    **      *   *   *    **\r\n                                    *       *  ***6*    * *                                  *\r\n                     *                      *          *  *                                 *\r\n                     **                     *0*********   *                                *\r\n                     * *                                  *                               *\r\n                     *  *                                 *                              *\r\n                     *   *                                *                               *\r\n                     *    *                               *                                *\r\n                     **************************************                                 *\r\n                            *                                                                0\r\n                             *                                                 *91*************\r\n                              *2222*****************************               *\r\n                                                               *               *\r\n                                                               *               *\r\n                                                  *0**************************************   *\r\n                                                  *            *               *        *   **\r\n                                                  *            *               *       *   * *\r\n                                                  *           *                *      *   *  *\r\n                                                  *          *                 *     *   *   *\r\n                                                  *         *                  *    *****    *\r\n                                                  *        *31*******          *             *\r\n                                                  *                  *         *             *\r\n                                                  *                   *        ***************\r\n                                                  *                    *\r\n                                                  ***********************\r\n\r\n/* the new BrainFuckTwoD Code\r\n      \"Hello World!\"\r\n     (c) DuNe & oCaS          */'),
(140, 'Brainfuck', 'bf', '-[------->+<]>-.-[->+++++<]>++.+++++++..+++.[--->+<]>-----.---[->+++<]>.-[--->+<]>---.+++.------.--------.'),
(142, 'Broccoli', 'brocc', '(out \"Hello World\" crlf)'),
(143, 'Brzrk', 'brzrk', '$\"Hello World\"'),
(144, 'Burlesque', 'burlesque', '\"Hello World\"Q'),
(145, 'Byter', 'byter', '>>>>>>>>>V00V00V\r\n0#00A00V<V00V0VV\r\n-+>>A00VV<<0$0V>\r\nV0AA<00V>V<<<<V0\r\n>>V0V<<<-<000V<0\r\n0AV0VV<<<0000V<0\r\n0A>V+}>>>>>>}<V-\r\n0A{>>>>-000000>V\r\n00A0000>>>>>>>>A\r\nV0A<<<<<<<<<<<<>\r\nV000000000000000\r\nV000000000000000\r\nV000000000000000\r\nV000000000000000\r\nV000000000000000\r\n>>>>>>>>>>>>V000'),
(146, 'C++', 'cpp', '#include <iostream>\r\n\r\nint main()\r\n{\r\n   std::cout << \"Hello World\" << std::endl;\r\n}'),
(147, 'C', 'c', '#include <stdio.h>\r\n\r\nint main() {\r\n	printf(\"Hello World\n\");\r\n	return 0;\r\n}'),
(148, 'Caml', 'ml', 'print_endline \"Hello World\";;'),
(149, 'Cardinal', 'cardinal', '%\"Hello World\";x'),
(150, 'Casio Basic', NULL, '\"Hello World\"'),
(151, 'Cat', 'cat', 'Hello World'),
(152, 'Cbot', 'txt', 'extern void object::New()\r\n{\r\n\r\nmessage(\"Hello World\");\r\n\r\n}'),
(153, 'Cduce', 'cduce', 'print \"Hello World\";;'),
(154, 'Centura', 'centura', '! Hello World in Centura\r\n\r\nFunction: HelloWorld\r\nDescription:\r\nReturns\r\nParameters\r\nStatic Variables\r\nLocal variables\r\nActions\r\n Call SalMessageBox( \'Hello World\',\'Message\',MB_Ok)'),
(155, 'Ceylon', 'ceylon', 'shared void hello() {\r\n    print(\"Hello World\");\r\n}'),
(156, 'Cgi', 'c', '#include <stdio.h>\r\n\r\nmain ()\r\n{\r\n   printf (\"Content-type: text/html\n\");\r\n   printf (\"\n\");\r\n   printf (\"<html>\n\");\r\n   printf (\"<head>\n\");\r\n   printf (\"<title>Hello World</title>\n\");\r\n   printf (\"</head>\n\");\r\n   printf (\"\n\");\r\n   printf (\"<body>\n\");\r\n   printf (\"<h1>Hello World</h1>\n\");\r\n   printf (\"</body>\n\");\r\n   printf (\"</html>\n\");\r\n}'),
(157, 'Chapel', 'chpl', 'writeln(\"Hello World\");'),
(158, 'Cheddar', 'cheddar', 'print \"Hello World\"'),
(159, 'Chef', 'ch', 'Hello World Cake with Chocolate sauce.\r\n\r\nThis prints hello world, while being tastier than Hello World Souffle. The main\r\nchef makes a \" world!\" cake, which he puts in the baking dish. When he gets the\r\nsous chef to make the \"Hello\" chocolate sauce, it gets put into the baking dish\r\nand then the whole thing is printed when he refrigerates the sauce. When\r\nactually cooking, I\'m interpreting the chocolate sauce baking dish to be\r\nseparate from the cake one and Liquefy to mean either melt or blend depending on\r\ncontext.\r\n\r\nIngredients.\r\n33 g chocolate chips\r\n100 g butter\r\n54 ml double cream\r\n2 pinches baking powder\r\n114 g sugar\r\n111 ml beaten eggs\r\n119 g flour\r\n32 g cocoa powder\r\n0 g cake mixture\r\n\r\nCooking time: 25 minutes.\r\n\r\nPre-heat oven to 180 degrees Celsius.\r\n\r\nMethod.\r\nPut chocolate chips into the mixing bowl.\r\nPut butter into the mixing bowl.\r\nPut sugar into the mixing bowl.\r\nPut beaten eggs into the mixing bowl.\r\nPut flour into the mixing bowl.\r\nPut baking powder into the mixing bowl.\r\nPut cocoa  powder into the mixing bowl.\r\nStir the mixing bowl for 1 minute.\r\nCombine double cream into the mixing bowl.\r\nStir the mixing bowl for 4 minutes.\r\nLiquefy the contents of the mixing bowl.\r\nPour contents of the mixing bowl into the baking dish.\r\nbake the cake mixture.\r\nWait until baked.\r\nServe with chocolate sauce.\r\n\r\nchocolate sauce.\r\n\r\nIngredients.\r\n111 g sugar\r\n108 ml hot water\r\n108 ml heated double cream\r\n101 g dark chocolate\r\n72 g milk chocolate\r\n\r\nMethod.\r\nClean the mixing bowl.\r\nPut sugar into the mixing bowl.\r\nPut hot water into the mixing bowl.\r\nPut heated double cream into the mixing bowl.\r\ndissolve the sugar.\r\nagitate the sugar until dissolved.\r\nLiquefy the dark chocolate.\r\nPut dark chocolate into the mixing bowl.\r\nLiquefy the milk chocolate.\r\nPut milk chocolate into the mixing bowl.\r\nLiquefy contents of the mixing bowl.\r\nPour contents of the mixing bowl into the baking dish.\r\nRefrigerate for 1 hour.'),
(160, 'Chicken', 'chicken', 'chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken chicken\r\nchicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken\r\n\r\nchicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken\r\n\r\nchicken chicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken\r\nchicken chicken\r\nchicken chicken chicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken\r\n\r\nchicken chicken\r\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken\r\n\r\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken\r\n\r\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken\r\nchicken chicken chicken chicken chicken chicken'),
(161, 'Cil', 'il', '// ilasm cil.il\r\n.assembly HelloWorld {}\r\n.method public static void Main() cil managed\r\n{\r\n     .entrypoint\r\n     .maxstack 1\r\n     ldstr \"Hello World\"\r\n     call void [mscorlib]System.Console::WriteLine(string)\r\n     ret\r\n}'),
(162, 'Clean', 'icl', 'module hello\r\nStart :: {#Char}\r\nStart = \"Hello World\"'),
(163, 'Clipper', 'cli', '? \"Hello World\"'),
(164, 'Clipper', 'clipper', '? \"Hello World\"'),
(165, 'Clipper', 'prg', '? \'Hello World\''),
(166, 'Clips', 'clips', '(defrule hw\r\n    (f ?x)\r\n=>\r\n    (printout t ?x crlf))\r\n\r\n(assert (f \"Hello World\"))\r\n\r\n(run)'),
(167, 'Clisp', 'lisp', '(write-line \"Hello World\")'),
(168, 'Clojure', 'clj', '(println \"Hello World\")'),
(169, 'Cobol', 'cbl', 'identification division.\r\n       program-id. cobol.\r\n       procedure division.\r\n       main.\r\n           display \'Hello World.\' end-display.\r\n           stop run.'),
(170, 'Cobra', 'cobra', 'class Hello\r\n\r\n    def main\r\n        print \'Hello World\''),
(171, 'Coconut', 'coc', '\"Hello World\" |> print'),
(172, 'Coffeescript', 'coffee', 'alert \"Hello World\"'),
(173, 'Coldfusion', 'cfm', '<cfset message = \"Hello World\">\r\n<cfoutput> #message#</cfoutput>'),
(174, 'Common Lisp', 'lisp', ';; Common Lisp\r\n\r\n(defun hello-world ()\r\n  (format t \"Hello World~%\"))\r\n\r\n(hello-world)'),
(175, 'Concurnas', 'conc', 'System.out.println(\"Hello World\")'),
(176, 'Continuesequation', 'ce', '0 0 o\'H\'e\'l\'l\'o\',\' \'w\'o\'r\'l\'d\'!'),
(177, 'Control Language', 'cllc', 'SNDPGMMSG MSG(\"Hello World\")'),
(178, 'Cool', 'cl', 'class Main inherits IO {\r\n   main(): Object {\r\n	out_string(\"Hello World.\n\")\r\n   };\r\n};'),
(179, 'Cor', 'cor', 'func main() console.log(\'Hello World\')'),
(180, 'Cow', 'cow', 'MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO\r\nMoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO\r\nMoO MoO Moo MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO Moo MoO MoO\r\nMoO MoO MoO MoO MoO Moo Moo MoO MoO MoO Moo OOO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO\r\nMoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO Moo MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO\r\nMoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO\r\nMoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO\r\nMoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO Moo MOo\r\nMOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo\r\nMOo MOo MOo MOo MOo Moo MOo MOo MOo MOo MOo MOo MOo MOo Moo MoO MoO MoO Moo MOo MOo MOo MOo MOo MOo Moo MOo MOo MOo MOo MOo MOo MOo MOo Moo\r\nOOO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO Moo'),
(181, 'Crystal', 'cr', 'puts \"Hello World\"'),
(182, 'Csh', 'csh', '#!/bin/csh\r\necho \"Hello World\"'),
(183, 'Csharp', 'cs', 'class HelloWorld {\r\n	static void Main() {\r\n		System.Console.WriteLine(\"Hello World\");\r\n	}\r\n}'),
(184, 'Cson', 'cson', '{\'hello\': \'world\'}'),
(185, 'Css', 'css', 'body::before {\r\n    content: \"Hello World\";\r\n}'),
(186, 'Cuda', 'cu', '#include <stdio.h>\r\n\r\n__global__ void hello_world(){\r\n    printf(\"Hello World\n\");\r\n}\r\n\r\nint main() {\r\n    hello_world<<<1,1>>>();\r\n    return 0;\r\n}'),
(187, 'Cuneiform', 'cfl', 'def greet() -> <out : Str>\r\nin Bash *{\r\n  out=\"Hello World\"\r\n}*\r\n\r\n( greet()|out );'),
(188, 'Curry', 'curry', '-- \"Hello World\" demo for the Tcl/Tk library\r\n\r\nimport Tk\r\n\r\nmain = runWidget \"Hello\"\r\n          (TkCol [] [TkLabel [TkText \"Hello World\"],\r\n                     TkButton tkExit [TkText \"Stop\"]])'),
(189, 'Cypherneo4J', 'cypher', 'CREATE (Hello:Word { val: \'Hello\' }), (World:Word { val: \'World!\' }),\r\n(Hello)-[:SPACE]->(World)\r\nRETURN Hello,World'),
(190, 'D', 'd', '// Hello World in D\r\nimport std.stdio;\r\n\r\nvoid main()\r\n{\r\n	   writeln(\"Hello World\");\r\n}'),
(191, 'Dark', 'txt', '+helloworld hell\r\nhelloworld$twist stalker io\r\nhelloworld$twist sign string\r\nio$stalk\r\nio$personal\r\nstring$scrawl \" Hello World\r\nstring$read ~\r\nio$echo\r\nhelloworld$consume io\r\nhelloworld$consume string\r\nhelloworld$empty\r\nhelloworld$apocalypse'),
(192, 'Dart', 'dart', 'main() {\r\n  print(\'Hello World\');\r\n}'),
(193, 'Db2', 'sql', 'VALUES(\'Hello World\')'),
(194, 'Dc', 'dc', '[Hello World\r\n]n'),
(195, 'Dcl', NULL, 'WRITE SYS$OUTPUT \"Hello World\"'),
(197, 'Decimal', 'dec', '13072101108108111044032087111114108100033010D301\n ;13                                               push string\n ;  072                                            \'H\'\n ;     101                                         \'e\'\n ;        108                                      \'l\'\n ;           108                                   \'l\'\n ;              111                                \'o\'\n ;                 044                             \',\'\n ;                    032                          \' \'\n ;                       087                       \'W\'\n ;                          111                    \'o\'\n ;                             114                 \'r\'\n ;                                108              \'l\'\n ;                                   100           \'d\'\n ;                                      033        \'!\'\n ;                                         010     \'\n\'\n ;                                            D    end string\n ;                                             301 print'),
(198, 'Delphi', 'delphi', '// Hello World in Delphi\r\nProgram Hello_World;\r\n\r\n($APPTYPE CONSOLE)\r\n\r\nBegin\r\n  WriteLn(\'Hello World\');\r\nEnd.'),
(199, 'Delphi', 'pas', 'program HelloWorld;\r\n{$APPTYPE CONSOLE}\r\n\r\nbegin\r\n	WriteLn(\'Hello World\');\r\nend.'),
(200, 'Deno', 'ts', 'console.log(\"Hello World\");'),
(201, 'Dis', 'dis', '^!|||||||||||||||||||||||||||||||||{!!!||||||||||||||||||||||||||||||||||||||||\r\n||||||||||||||||*_>_*>|_*_>_*_>_*_>_*_>_*_>_*_>_*_>_*_>_*_>_*>__*|_>*__|*|||*__\r\n>*>||*>_|*__>*__>*__>*__>*__>*__>*__>*{_>*>_|*>||*__>*>||*>||*__>*__>*__>*>_|*>\r\n||*__>*__>*__>*__>*__>*__>*{__*>||*>_|*__>*__>*>||*>||*__>*>_|*>||*__>*__>*__>*\r\n__>*__>*__>*__>*{{>*>||*>_|*__>*__>*__>*__>*__>*__>*__>*__>*__>*{_>*>_|*>||*__>\r\n*>_|*>||*__>*__>*__>*__>*__>*__>*__>*__>*__>*{_>*>||*>_|*>|>*>||*>_|*__>*__>*__\r\n>*__>*__>*__>*__>*__>*{_>*>|_*>||*>_|*__>*>||*>_|*__>*__>*>_|*>||*__>*__>*__>*_\r\n_>*__>*__>*{__*>||*>_|*__>*>_|*>||*__>*>|_*>||*>_|*__>*__>*__>*__>*__>*__>*__>*\r\n__>*{_>*>|_*>||*>||*__>*__>*__>*__>*__>*__>*__>*__>*__>*{_>*>|_*>||*>_|*__>*__>\r\n*__>*__>*__>*__>*__>*__>*__>*{_>*__|*>__|*>__|*__|*__>*__>*__>*__>*__>*__>*__>*\r\n__>*__>*>_|*>||*{_>*__|*>__|*>__|*{_|*__>*>||*>||*{!'),
(202, 'Divzeros', 'dz', '(?\'H+?\'e+?\'l+?\'l+?\'o+?\',+?\' +?\'W+?\'o+?\'r+?\'l+?\'d+?\'!)/0'),
(203, 'Dna#', 'dna', 'AT\r\n  T--A\r\n A----T\r\n T-----A\r\n T-----A\r\n G----C\r\n  T--A\r\n   GC\r\n   CG\r\n  C--G\r\n A----T\r\n A-----T\r\n T-----A\r\n A----T\r\n  A--T\r\n   GC\r\n   AT\r\n  C--G\r\n T----A\r\n C-----G\r\n T-----A\r\n G----C\r\n  C--G\r\n   CG\r\n   AT\r\n  A--T\r\n T----A\r\n A-----T\r\n A-----T\r\n G----C\r\n  A--T\r\n   GC\r\n   TA\r\n  G--C\r\n T----A\r\n G-----C\r\n C-----G\r\n C----G\r\n  A--T\r\n   GC\r\n   TA\r\n  G--C\r\n A----T\r\n G-----C\r\n A-----T\r\n C----G\r\n  A--T\r\n   CG\r\n   GC\r\n  A--T\r\n A----T\r\n C-----G\r\n A-----T\r\n C----G\r\n  A--T\r\n   CG\r\n   GC\r\n  A--T\r\n T----A\r\n G-----C\r\n A-----T\r\n G----C\r\n  A--T\r\n   CG\r\n   GC\r\n  A--T\r\n G----C\r\n A-----T\r\n A-----T\r\n T----A\r\n  A--T\r\n   TA\r\n   AT\r\n  T--A\r\n G----C\r\n A-----T\r\n A-----T\r\n A----T\r\n  G--C\r\n   AT\r\n   AT\r\n  G--C\r\n T----A\r\n G-----C\r\n A-----T\r\n G----C\r\n  G--C\r\n   AT\r\n   TA\r\n  T--A\r\n A----T\r\n G-----C\r\n G-----C\r\n A----T\r\n  A--T\r\n   TA\r\n   AT\r\n  T--A\r\n A----T\r\n T-----A\r\n G-----C\r\n A----T\r\n  T--A\r\n   TA\r\n   AT\r\n  G--C\r\n A----T\r\n T-----A\r\n A-----T\r\n T----A\r\n  G--C\r\n   AT\r\n   TA\r\n  T--A\r\n A----T\r\n G-----C\r\n G-----C\r\n A----T\r\n  A--T\r\n   AT\r\n   AT\r\n  T--A\r\n G----C\r\n A-----T'),
(204, 'Dna Sharp', 'dna', 'AT\r\n   T--A\r\n  A----T\r\n  T-----A\r\n  T-----A\r\n  G----C\r\n   T--A\r\n    GC\r\n    CG\r\n   C--G\r\n  A----T\r\n  A-----T\r\n  T-----A\r\n  A----T\r\n   A--T\r\n    GC\r\n    AT\r\n   C--G\r\n  T----A\r\n  C-----G\r\n  T-----A\r\n  G----C\r\n   C--G\r\n    CG\r\n    AT\r\n   A--T\r\n  T----A\r\n  A-----T\r\n  A-----T\r\n  G----C\r\n   A--T\r\n    GC\r\n    TA\r\n   G--C\r\n  T----A\r\n  G-----C\r\n  C-----G\r\n  C----G\r\n   A--T\r\n    GC\r\n    TA\r\n   G--C\r\n  A----T\r\n  G-----C\r\n  A-----T\r\n  C----G\r\n   A--T\r\n    CG\r\n    GC\r\n   A--T\r\n  A----T\r\n  C-----G\r\n  A-----T\r\n  C----G\r\n   A--T\r\n    CG\r\n    GC\r\n   A--T\r\n  T----A\r\n  G-----C\r\n  A-----T\r\n  G----C\r\n   A--T\r\n    CG\r\n    GC\r\n   A--T\r\n  G----C\r\n  A-----T\r\n  A-----T\r\n  T----A\r\n   A--T\r\n    TA\r\n    AT\r\n   T--A\r\n  G----C\r\n  A-----T\r\n  A-----T\r\n  A----T\r\n   G--C\r\n    AT\r\n    AT\r\n   G--C\r\n  T----A\r\n  G-----C\r\n  A-----T\r\n  G----C\r\n   G--C\r\n    AT\r\n    TA\r\n   T--A\r\n  A----T\r\n  G-----C\r\n  G-----C\r\n  A----T\r\n   A--T\r\n    TA\r\n    AT\r\n   T--A\r\n  A----T\r\n  T-----A\r\n  G-----C\r\n  A----T\r\n   T--A\r\n    TA\r\n    AT\r\n   G--C\r\n  A----T\r\n  T-----A\r\n  A-----T\r\n  T----A\r\n   G--C\r\n    AT\r\n    TA\r\n   T--A\r\n  A----T\r\n  G-----C\r\n  G-----C\r\n  A----T\r\n   A--T\r\n    AT\r\n    AT\r\n   T--A\r\n  G----C\r\n  A-----T'),
(205, 'Dogescript', 'djs', 'shh such hello dogescript very next-gen wow difficulty\r\n\r\nplz console.loge with \'Hello World\''),
(206, 'Dogo', 'dogo', 'roll-over roll-over heel roll-over roll-over roll-over roll-over heel heel heel \r\nheel heel heel heel heel heel sit roll-over roll-over roll-over heel roll-over \r\nroll-over roll-over heel heel heel heel heel heel heel heel roll-over roll-over \r\nheel roll-over roll-over roll-over roll-over roll-over heel roll-over roll-over \r\nroll-over roll-over roll-over stay roll-over roll-over roll-over heel roll-over \r\nroll-over heel roll-over roll-over roll-over heel roll-over roll-over roll-over \r\nroll-over heel heel heel heel heel heel heel sit roll-over roll-over roll-over \r\nheel roll-over roll-over roll-over heel heel heel heel roll-over roll-over heel \r\nroll-over roll-over roll-over roll-over roll-over heel roll-over roll-over \r\nroll-over roll-over roll-over stay roll-over roll-over roll-over heel roll-over  \r\nroll-over roll-over heel roll-over roll-over roll-over roll-over roll-over heel \r\nroll-over heel heel heel heel heel heel heel roll-over roll-over roll-over \r\nroll-over roll-over heel heel roll-over heel heel heel roll-over roll-over \r\nroll-over roll-over roll-over heel roll-over roll-over roll-over heel heel heel \r\nroll-over roll-over roll-over roll-over heel heel heel heel heel heel heel heel \r\nsit roll-over roll-over roll-over heel roll-over roll-over roll-over heel heel \r\nheel heel roll-over roll-over heel roll-over roll-over roll-over roll-over \r\nroll-over heel roll-over roll-over roll-over roll-over roll-over stay roll-over \r\nroll-over roll-over heel roll-over roll-over heel roll-over roll-over roll-over \r\nheel heel heel roll-over roll-over roll-over roll-over heel heel heel heel heel \r\nheel heel heel heel heel sit roll-over roll-over roll-over heel roll-over \r\nroll-over roll-over heel heel heel heel heel heel heel heel heel roll-over \r\nroll-over heel roll-over roll-over roll-over roll-over roll-over heel roll-over \r\nroll-over roll-over roll-over roll-over stay roll-over roll-over roll-over heel \r\nroll-over roll-over roll-over roll-over heel heel heel roll-over roll-over \r\nroll-over roll-over heel roll-over roll-over roll-over roll-over heel heel heel \r\nheel roll-over roll-over heel roll-over heel heel heel roll-over roll-over \r\nroll-over roll-over roll-over heel roll-over roll-over heel heel heel heel heel \r\nheel roll-over roll-over roll-over roll-over heel roll-over roll-over heel heel \r\nheel heel heel heel heel heel roll-over roll-over roll-over roll-over heel \r\nroll-over roll-over roll-over heel heel roll-over roll-over roll-over roll-over \r\nheel roll-over roll-over roll-over roll-over roll-over heel'),
(207, 'Dongbei', 'dongbei', '唠唠：“Hello World”。'),
(208, 'Dos', 'bat', '@echo Hello World'),
(209, 'Draco', 'd', 'proc main()void:\r\n    writeln(\"Hello World!\");\r\ncorp;'),
(210, 'Dreammaker', 'dm', 'mob\r\n	Login()\r\n		world << \"Hello World\"'),
(211, 'Drive In Window', 'diw', 'Hi, welcome to Hello_World_Buffet. Here is a menu.\r\n\r\nRice Krispie Treat: $10\r\nIce Cream: $30\r\nCookies: $70\r\n\r\nHere are your sides.\r\n\r\nWhipped Cream: $1\r\nChocolate: $2\r\nCaramel: $3\r\n\r\nMay I take your order?\r\n\r\nPerson 1 would like the Cookies with Chocolate.\r\nPerson 1 will pay for his order!\r\nPerson 2 would like the Ice Cream, hold the Whipped Cream.\r\nPerson 2 would also like what Person 1 has.\r\nPerson 2 will pay for his order!\r\nPerson 2 needs 7 dollars more for his order!\r\nPerson 2 will pay for his order!\r\nPerson 2 will pay for his order!\r\nPerson 2 needs 3 dollars more for his order!\r\nPerson 2 will pay for his order!\r\nPerson 3 would like the Ice Cream with Chocolate.\r\nPerson 3 will pay for his order!\r\nPerson 1 would also like the Rice Krispie Treat with Caramel.\r\nPerson 1 needs 2 more dollars for his order!\r\nPerson 1 will pay for his order!\r\nPerson 2 will pay for his order!\r\nPerson 2 needs 3 dollars more for his order!\r\nPerson 2 will pay for his order!\r\nPerson 2 needs 6 dollars less for his order!\r\nPerson 2 will pay for his order!\r\nPerson 2 needs 8 dollars less for his order!\r\nPerson 2 will pay for his order!\r\nPerson 3 needs 1 dollar more for his order!\r\nPerson 3 will pay for his order!\r\nJust wait while we decide...\r\n\r\nOK, that will be $1.14. Thanks for coming!'),
(212, 'Dtrace', 'd', '#!/usr/sbin/dtrace -qs\r\nBEGIN {\r\n	printf(\"Hello World\");\r\n	exit(0);\r\n}'),
(213, 'Dup', 'dup', '[[^^>][$;,1+]#%%]p:\r\n0$\"Hello World\"p;!10,'),
(214, 'Dylan', 'dl', 'define method main (#rest args)\r\n  princ(\"Hello World\");\r\nend;\r\n\r\nmain();'),
(215, 'Dyvil', 'dyv', 'class Dyvil\r\n{\r\n	static func main(args: [String]) = print \'Hello World\'\r\n}'),
(216, 'Ebuild', 'ebuild', '# Copyright 1999-2008 Gentoo Foundation\r\n# Distributed under the terms of the GNU General Public License v2\r\n# $Header: $\r\n\r\nDESCRIPTION=\"Hello World\"\r\nHOMEPAGE=\"http://hello-world.org/\"\r\nSRC_URI=\"http://hello-world.org/\"\r\n\r\nLICENSE=\"GPL\"\r\nSLOT=\"0\"\r\nKEYWORDS=\"~x86\"\r\nIUSE=\"\"\r\n\r\nDEPEND=\"\"\r\nRDEPEND=\"\"\r\n\r\nsrc_compile() {\r\n	einfo \"Hello World\"\r\n}'),
(217, 'Ec', 'ec', 'class HelloWorldApp : Application\r\n{\r\n   void Main()\r\n   {\r\n      PrintLn(\"Hello World\");\r\n   }\r\n}'),
(218, 'Echolisp', 'echolisp', '(display \"Hello World\" \"color:blue\")'),
(219, 'Efene', 'efene', '@public\r\nrun = fn () {\r\n    io.format(\"Hello World~n\")\r\n}'),
(220, 'Egl', 'egl', 'program HelloWorld\r\n    function main()\r\n        SysLib.writeStdout(\"Hello World\");\r\n    end\r\nend'),
(221, 'Eiffel', 'eiff', 'indexing \"Hello World in Eiffel , from http://roesler-ac.de/wolfram/hello.htm#Eiffel\"\r\n\r\nclass HELLO\r\n\r\ncreation\r\n	run\r\n\r\nfeature\r\n\r\n	run is\r\n		local\r\n			io : BASIC_IO;\r\n		do\r\n			!!io;\r\n			io.put_string(\"Hello World\");\r\n			io.put_newline\r\n		end; -- run\r\nend; -- class HELLO'),
(222, 'Elena', 'elena', 'public program\r\n[\r\n    console writeLine(\"Hello World\").\r\n]'),
(223, 'Elixir', 'ex', 'IO.puts \"Defining the function world\"'),
(224, 'Elixir', 'exs', '#!/usr/bin/env elixir\r\nIO.puts \"Hello World\"'),
(225, 'Elm', 'elm', 'import Html exposing (text)\r\n\r\nmain =\r\n  text \"Hello World\"'),
(226, 'Emacslisp', 'el', ';;for emacs elisp\r\n\r\n(message \"hello,world\")'),
(227, 'Emmental', 'emmental', ';#58#126#63#36!;#46#36#!;#0#1!;#0#2!;#0#3!;#0#4!;#0#5!;#0#6!;#0#7!#0#33#100#108#114#111#119#32#44#111#108#108#101#72$'),
(228, 'Emojicode', 'emojic', '🐇 🐼 🍇\r\n  🐇🐖 🏁 ➡️ 🚂 🍇\r\n    😀 �Hello World🔤\r\n    🍎 0\r\n  🍉\r\n🍉'),
(229, 'Emoticon', 'emoticon', 'Hello World :Q S::P :P'),
(230, 'Enkelt', 'e', 'skriv(\"Hello World\")'),
(231, 'Eoool', 'eoool', ',{,{89+(59+~1&(7~+1&2&2&((3~+1&(4~(32_((6~+((8+(38_(},}'),
(232, 'Erlang', 'erl', '-module(erlang_hw).\r\n-export([start/0]).\r\n\r\nstart() ->\r\n  io:format(\"Hello World~n\").'),
(233, 'Erlang Escript', 'erl', '#!/usr/bin/env escript\r\n\r\nmain(_) ->\r\n    io:format(\"Hello World~n\").'),
(234, 'Euphoria', 'ex', 'puts(1, \"Hello World\")'),
(235, 'Express', 'js', 'const express = require(\'express\')\r\nconst app = express()\r\n\r\napp.get(\'/\', (_, res) => res.send(\"Hello World\"))\r\n\r\napp.listen(8080)'),
(236, 'Factor', 'factor', 'USING: io ;\r\n\"Hello World\" print'),
(237, 'Factors', 'fact', '1240479476546339573634662660744997483390159825927257577642211238764859751532647897788588745690462747\r\n2954259026932147401271063216759368974236989467343884314431173679900151962232540368081876543214803741\r\n27355669151693462637517323355034011282348481257152244997524115792512161'),
(238, 'Falcon', 'fal', '#!/usr/bin/env falcon\r\n\r\n> \"Hello World\"'),
(239, 'False', 'f', '\"Hello World\r\n\"'),
(240, 'Fancy', 'fy', '\"Hello World\" println'),
(241, 'Fantom', 'fan', '// Hello from Fantom!\r\nclass HelloWorld {\r\n  static Void main() {\r\n    echo(\"Hello World\")\r\n  }\r\n}'),
(242, 'Fennel', 'fnl', '(print \"Hello World\")'),
(243, 'Ferite', 'fe', 'uses \"console\";\r\nConsole.println( \"Hello World\" );'),
(244, 'Fetlang', 'fet', 'Make slave scream \"Hello World\"'),
(245, 'Fim++', 'fimpp', 'Dear Princess Celestia: Hello World\r\n\r\nToday I learned how to say Hello World\r\nI said \"Hello World\".\r\nThat\'s all about how to say Hello World.\r\n\r\nYour faithful student, Twilight Sparkle.'),
(246, 'Fish', 'fish', '#!/usr/bin/env fish\r\necho \"Hello World\"'),
(247, 'Fjoelnir', 'fjo', '\"hello\" < main\r\n{\r\n    main ->\r\n    stef(;)\r\n    stofn\r\n        skrifastreng(;\"Hello World\"),\r\n    stofnlok\r\n}\r\n*\r\n\"GRUNNUR\"\r\n;'),
(248, 'Flascript', 'fls', 'main() -> main {\r\nprint(string) -> \"Hello World\"\r\nprint(newline)\r\n}'),
(249, 'Flask', 'py', 'from flask import Flask\r\napp = Flask(__name__)\r\n\r\n@app.route(\"/\")\r\ndef hello():\r\n    return \"Hello World\"\r\n\r\nif __name__ == \"__main__\":\r\n    app.run()'),
(250, 'Fob', 'fob', '$Hello World#<>'),
(251, 'Focal', 'fc', '0.1.0.1 TYPE \"HELLO WORLD\" , !'),
(252, 'Fog.Fog', 'md', '<ins>Hello World</ins>'),
(253, 'Foo', 'foo', '\"Hello World\"'),
(254, 'Forobj', 'forobj', '\"Hello World\n\"d'),
(255, 'Forth', 'fth', '.( Hello World)'),
(256, 'Fortob', 'fortob', '@print[$!.readcom.println;$.push:\';];\r\nprint \"Hello World\";'),
(257, 'Fortran', 'f90', 'program helloworld\r\nprint *,\'Hello World\'\r\nend program helloworld'),
(258, 'Fortran77', 'f77', 'PROGRAM HELLOW\r\n      WRITE(UNIT=*, FMT=*) \'Hello World\'\r\n      END'),
(259, 'Fourier', 'fourier', '72a101a108aa111a44a32a119a111a114a108a100a33a10a'),
(260, 'Fractran++', 'fpp', '3,-1/2,(2*37)/3,0/0,<71 101 108 108 111 32 87 111 114 108 100 0>/37,4/0'),
(261, 'Freebrain', 'frbr', '!->:>_^>~++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<^_<:\r\n!->:>_^>~+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<^_<:\r\n!->:>_^>~++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<^_<:\r\n!->:>_^>~++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<^_<:\r\n!->:>_^>~+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<^_<:\r\n!->:>_^>~++++++++++++++++++++++++++++++++<^_<:\r\n!->:>_^>~+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<^_<:\r\n!->:>_^>~+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<^_<:\r\n!->:>_^>~++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<^_<:\r\n!->:>_^>~++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<^_<:\r\n!->:>_^>~++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<^_<:\r\n!->:>_^>~+++++++++++++++++++++++++++++++++<^_<:\r\n[!->:>_^> ? <^_<:] ?* (~++++++++++++++++++++++++++++++++++++++++++++++++++) *? !->:>_^>(~++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++)<*>(~++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++)<^_<:'),
(262, 'Frink', 'frink', 'println[\"Hello World!\"]'),
(263, 'Fsharp', 'fs', 'printfn \"Hello World\"'),
(264, 'Fstar', 'fst', 'module Hello\r\n\r\nlet main = FStar.IO.print_string \"Hello World\n\"'),
(265, 'Gaml', 'gaml', 'model GAML\r\n\r\nglobal {\r\n	init {\r\n		write(\"Hello World\");\r\n	}\r\n}\r\n\r\nexperiment GAML {}'),
(266, 'Gammaplex', 'gammaplex', 'X\"Hello World\"XXSXrRE'),
(267, 'Gasoil', 'gasoil', 'main\r\n(\"Hello World\"; WRITE)'),
(268, 'Gdscript', 'gd', 'extends Label\r\n\r\nfunc _ready():\r\n  self.text = \"Hello World\"'),
(269, 'Gecho', 'gecho', 'print \'hello \'<> \'world'),
(270, 'Gentzen', 'gentzen', '<- \"stdlib\";\r\n<- \"iolib\";\r\nmain : () / ($1(iosys) |- $2(++));\r\nmain = [x,y] cut \"Hello World\" [z] outtext x z y;\r\n-> main;'),
(271, 'Geojson', 'geojson', '{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"properties\":{},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-103.35937499999999,66.93006025862448],[-104.4140625,39.90973623453719],[-94.21875,39.36827914916011],[-93.8671875,50.28933925329178],[-85.78125,50.28933925329178],[-85.78125,39.639537564366684],[-75.5859375,39.639537564366684],[-77.6953125,67.06743335108298],[-86.484375,66.79190947341796],[-85.78125,57.7041472343419],[-92.8125,57.32652122521709],[-94.21875,66.51326044311188],[-103.35937499999999,66.93006025862448]]]}},{\"type\":\"Feature\",\"properties\":{},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-71.3671875,67.47492238478702],[-40.42968749999999,67.60922060496382],[-40.78125,64.01449619484472],[-61.52343749999999,63.548552232036414],[-61.52343749999999,57.89149735271031],[-50.625,57.89149735271031],[-50.625,51.39920565355378],[-60.1171875,51.39920565355378],[-61.17187499999999,42.032974332441405],[-42.1875,42.293564192170095],[-42.1875,36.87962060502676],[-68.203125,34.88593094075317],[-71.3671875,67.47492238478702]]]}},{\"type\":\"Feature\",\"properties\":{},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-32.6953125,67.60922060496382],[-32.34375,39.36827914916011],[-4.21875,40.713955826286046],[-4.21875,47.754097979680026],[-20.7421875,47.040182144806664],[-21.796875,67.87554134672945],[-32.6953125,67.60922060496382]]]}},{\"type\":\"Feature\",\"properties\":{},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.5703125,68.78414378041504],[5.9765625,42.553080288955826],[37.265625,43.83452678223682],[37.265625,49.61070993807422],[18.6328125,50.28933925329178],[15.468749999999998,69.03714171275197],[4.5703125,68.78414378041504]]]}},{\"type\":\"Feature\",\"properties\":{},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[41.8359375,43.068887774169625],[41.8359375,68.65655498475735],[95.625,68.65655498475735],[95.625,43.068887774169625],[41.8359375,43.068887774169625]]]}},{\"type\":\"Feature\",\"properties\":{},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[50.9765625,47.27922900257082],[50.9765625,66.93006025862448],[89.296875,66.93006025862448],[89.296875,47.27922900257082],[50.9765625,47.27922900257082]]]}},{\"type\":\"Feature\",\"properties\":{},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-115.6640625,18.312810846425442],[-98.7890625,18.979025953255267],[-84.72656249999999,-15.961329081596634],[-75.5859375,-4.565473550710278],[-69.2578125,-4.214943141390639],[-65.7421875,-15.284185114076433],[-53.0859375,19.973348786110602],[-39.7265625,21.28937435586041],[-65.0390625,-41.244772343082076],[-73.828125,-42.0329743324414],[-76.640625,-28.613459424004414],[-84.375,-41.50857729743933],[-94.921875,-42.0329743324414],[-115.6640625,18.312810846425442]]]}},{\"type\":\"Feature\",\"properties\":{},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-34.80468749999999,-39.09596293630548],[-34.80468749999999,21.28937435586041],[14.414062499999998,21.28937435586041],[14.414062499999998,-39.09596293630548],[-34.80468749999999,-39.09596293630548]]]}},{\"type\":\"Feature\",\"properties\":{},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-28.125,-31.05293398570514],[-28.125,14.944784875088372],[8.7890625,14.944784875088372],[8.7890625,-31.05293398570514],[-28.125,-31.05293398570514]]]}},{\"type\":\"Feature\",\"properties\":{},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[23.203125,21.616579336740603],[22.148437499999996,-38.27268853598096],[32.34375,-37.99616267972812],[33.75,-15.961329081596634],[45.3515625,-36.597889133070204],[59.765625,-36.03133177633187],[39.0234375,-5.266007882805485],[54.84375,-3.513421045640032],[53.0859375,23.241346102386135],[23.203125,21.616579336740603]]]}},{\"type\":\"Feature\",\"properties\":{},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[28.828124999999996,2.811371193331128],[28.828124999999996,16.972741019999035],[46.7578125,16.972741019999035],[46.7578125,2.811371193331128],[28.828124999999996,2.811371193331128]]]}},{\"type\":\"Feature\",\"properties\":{},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[65.0390625,22.917922936146045],[66.09375,-34.30714385628803],[111.4453125,-34.30714385628803],[110.390625,-25.79989118208832],[78.3984375,-24.206889622398023],[76.9921875,23.56398712845123],[65.0390625,22.917922936146045]]]}},{\"type\":\"Feature\",\"properties\":{},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[117.0703125,25.165173368663954],[121.640625,-33.13755119234615],[135.35156249999997,-31.653381399663985],[146.25,-20.3034175184893],[148.7109375,-9.79567758282973],[148.359375,0],[145.1953125,7.36246686553575],[140.2734375,14.604847155053898],[135.703125,20.632784250388028],[128.671875,24.206889622398023],[121.9921875,26.11598592533351],[117.0703125,25.165173368663954]]]}}]}'),
(272, 'Gibberish', 'gibberish', '[Hello World\r\n]eo'),
(273, 'Glass', 'glass', '+{M[m(_o)O!\"Hello World\"(_o)o.?]}'),
(274, 'Gml', 'gml', 'draw_text(1, 1, \"Hello World\");'),
(275, 'Go', 'go', 'package main\r\n\r\nimport \"fmt\"\r\n\r\nfunc main() {\r\n  fmt.Println(\"Hello World\")\r\n}'),
(276, 'Golfscript', 'golfscript', '\"Hello World\"'),
(277, 'Golo', 'golo', 'module hello.world\r\n\r\nfunction main = |args| {\r\n  println(\"Hello World\")\r\n}'),
(278, 'Googleappscript', 'gs', 'function helloWorld() {\r\n  Logger.log(\'Hello World\');\r\n}'),
(279, 'Gosu', 'gosu', 'print(\"Hello World from Gosu!!\")'),
(280, 'Gosu', 'gs', 'print(\"Hello World\")'),
(281, 'Graphql', 'graphql', '{\r\n    \"Hello World\"\r\n}'),
(282, 'Gravity', 'gravity', 'func main() {\r\n  System.print(\"Hello World\");\r\n}'),
(283, 'Green Marl', 'gm', 'procedure hello_world() {\r\n  println(\"Hello World\");\r\n}'),
(284, 'Gri', 'gri', 'show \"Hello World\"'),
(285, 'Gridscript', 'gridscript', '#HELLO WORLD.\r\n\r\n@width 3\r\n@height 1\r\n\r\n(1,1):START\r\n(3,1):PRINT \'Hello World\''),
(286, 'Grin', 'grin', '(Hello World)'),
(287, 'Groovy', 'groovy', 'println \"Hello World\"'),
(288, 'Gui4Cli', NULL, 'G4C MyGui\r\nWindow 10 10 200 300 \"My window\"\r\n\r\nxOnLoad\r\n   GuiOpen MyGui\r\n\r\nxButton 10 10 100 20 \"Hello World\"\r\n   GuiQuit MyGui'),
(289, 'Hack', 'hh', '<?hh \r\necho \'Hello World\';'),
(290, 'Haml', 'haml', '%html\r\n  %title Hello World\r\n  %body\r\n    %h1 Hello World'),
(291, 'Haskell', 'hs', 'module Main where\r\n\r\nmain = putStrLn \"Hello World\"'),
(292, 'Haxe', 'hx', 'class HelloWorld {\r\n    static function main() {\r\n        trace(\"Hello World\");\r\n    }\r\n}'),
(293, 'Hello', NULL, 'h'),
(294, 'Hello++', NULL, 'h'),
(295, 'Hex', 'hex', 'GBL;\r\nBug(\"1\", \"Hello World\");\r\nScuttle(\"1\");\r\nWrite;'),
(296, 'Hexish', 'hexish', '0902160E48656C6C6F20776F726C6421001001161508'),
(297, 'Higher Subleq', 'higher_subleq', 'int printf();\r\nint main()\r\n{\r\n  printf(\"Hello World\n\");\r\n}'),
(298, 'Hodor', 'hd', 'hodor.hod(\'Hhodor? Hodor!? Hodor!? o, Hooodorrhodor orHodor!? d!\');'),
(299, 'Hollow', 'hollow', '{Hello World.9}:?'),
(300, 'Holyc', 'HC', '\"Hello World\";'),
(301, 'Homespring', 'homespring', 'Universe bear hatchery powers world.\r\n    bear hatchery powers o.      bear hatchery powers hell     marshy marshy marshy a snowmelt'),
(302, 'Hop', NULL, '(define-service (hello-world)\r\n  (<HTML>\r\n     (<HEAD>\r\n        (<TITLE> \"Hello World\"))\r\n     (<BODY>\r\n        \"Hello World\")))'),
(303, 'Hq9+', 'h', 'H'),
(304, 'Html', 'html', '<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <title>Hello World!</title>\r\n</head>\r\n<body>\r\n  <h1>Hello World!</h1>\r\n</body>\r\n</html>'),
(305, 'Hubot', 'coffee', 'module.exports = (robot) ->\r\n  robot.respond /hello/i, (msg) ->\r\n    msg.send \'Hello World\''),
(306, 'Huf', 'huf', '++++++++++|+++++++!++>\r\n++++++++++|++++++++++!+>\r\n++++++++++|++++++++++!++++++++>\r\n++++++++++|++++++++++!++++++++>\r\n++++++++++|+++++++++++!+>\r\n++++++|+++++!++>\r\n++++++++++|++++++++!+++++++>\r\n++++++++++|+++++++++++!+>\r\n++++++++++|+++++++++++!++++>\r\n++++++++++|++++++++++!++++++++>\r\n++++++++++|++++++++++!>'),
(307, 'Hy', 'hy', '(print \"Hello World\")'),
(308, 'Hypertalk', 'ht', 'put \"Hello World\"'),
(309, 'I5', 'i5', 'fn main() {\r\n    $print(\"Hello World\")\r\n}'),
(310, 'Ibm1401', NULL, ',008015,022029,036043,050054,055062,063065,066077/333/M0762502F1.HELLO\r\nWORLD'),
(311, 'Icedcoffeescript', 'ics', 'console.log \"Hello World\"'),
(312, 'Ici', 'ici', 'printf(\"Hello World\n\");'),
(313, 'Icon', 'icn', 'procedure main()\r\n    write(\"Hello World\");\r\nend'),
(314, 'Idl', NULL, 'print, \"Hello World\"\r\nend'),
(315, 'Idris', 'idr', 'module Main\r\n\r\nmain : IO ()\r\nmain = putStrLn \"Hello World\"');
INSERT INTO `language` (`id`, `language_name`, `file_extension`, `hello_world_program`) VALUES
(316, 'Il', 'il', '// compile:\r\n// ilasm <this file\'s name>\r\n// (if ilasm cannot be found, it\'s in the .NET directory (%windir%Microsoft.NETFrameworkv4.0.30319ilasm.exe))\r\n\r\n// assembly references\r\n.assembly extern mscorlib\r\n{\r\n  .publickeytoken = (B7 7A 5C 56 19 34 E0 89 )                         // .zV.4..\r\n  .ver 4:0:0:0\r\n}\r\n\r\n// assembly manifest\r\n.assembly ilhw\r\n{\r\n  // target framework\r\n  // this is always a pain in the ass (thus copy it from another assembly by using ildasm)\r\n  .custom instance void [mscorlib]System.Runtime.Versioning.TargetFrameworkAttribute::.ctor(string)\r\n    = ( 01 00 1C 2E 4E 45 54 46 72 61 6D 65 77 6F 72 6B   // ....NETFramework\r\n        2C 56 65 72 73 69 6F 6E 3D 76 34 2E 35 2E 33 01   // ,Version=v4.5.3.\r\n        00 54 0E 14 46 72 61 6D 65 77 6F 72 6B 44 69 73   // .T..FrameworkDis\r\n        70 6C 61 79 4E 61 6D 65 14 2E 4E 45 54 20 46 72   // playName..NET Fr\r\n        61 6D 65 77 6F 72 6B 20 34 2E 35 2E 33 )          // amework 4.5.3\r\n\r\n\r\n  .hash algorithm 0x00008004\r\n  .ver 0:0:0:0\r\n}\r\n\r\n.module         ilhw.dll\r\n.imagebase      0x00400000\r\n.file alignment 0x00000200\r\n.stackreserve   0x00100000\r\n.subsystem      0x0003     // WINDOWS_CUI\r\n.corflags       0x00000001 //  ILONLY\r\n\r\n\r\n.class public abstract auto ansi sealed ILHW.Program\r\n  extends [mscorlib]System.Object // nope, not implicit P:\r\n{\r\n\r\n  .method public hidebysig static void Main(class [mscorlib]System.String[] args) cil managed\r\n  {\r\n    .entrypoint // this method is the entry point of the program\r\n    .maxstack 1 // the maximum amount of objects on the stack is 1.\r\n\r\n    ldstr \"Hello World\" // loads a string on the stack (it actually allocates it and puts the GC handle on the stack)\r\n    call void [mscorlib]System.Console::WriteLine(string) // this should be straightforward enough\r\n\r\n    ret // even void methods need a return statement\r\n  }\r\n\r\n}'),
(317, 'Incal', 'incal', 'send,66#111#102#<101#42#93#101#120#102#110#43#\r\ndie'),
(318, 'Indec', 'indec', 'add2   @ N { N ++   ++ }\r\nadd4  @ N { N add2  add2 } \r\nadd8   @ N { N add4  add4 }\r\nadd16 @ N { N add8  add8 }\r\nadd32  @ N { N add16 add16 }\r\nadd64 @ N { N add32 add32 }\r\n\r\nSPACE add32 \r\nH   add64 add8\r\nd,H add add16 add8 add4\r\ne,d add ++\r\nl,e add add4 add2 ++\r\no,l add add2 ++\r\nW,H add add8 add4 add2 ++\r\nr,o add add2 ++\r\n\r\nH&,e&,l&,l&,o&,SPACE&,W&,o&,r&,l&,d& .'),
(319, 'Inform', 'inform', '\"Hello World\" by \"I.F. Author\"\r\n\r\nThe world is a room.\r\n\r\nWhen play begins, say \"Hello World.\"'),
(320, 'Ink', 'ink', 'Hello World'),
(321, 'Inkling', 'ink', 'display \"Hello World\"'),
(322, 'Intercal', 'i', 'DO ,1 <- #13\r\nPLEASE DO ,1 SUB #1 <- #238\r\nDO ,1 SUB #2 <- #108\r\nDO ,1 SUB #3 <- #112\r\nDO ,1 SUB #4 <- #0\r\nDO ,1 SUB #5 <- #64\r\nDO ,1 SUB #6 <- #194\r\nDO ,1 SUB #7 <- #48\r\nPLEASE DO ,1 SUB #8 <- #22\r\nDO ,1 SUB #9 <- #248\r\nDO ,1 SUB #10 <- #168\r\nDO ,1 SUB #11 <- #24\r\nDO ,1 SUB #12 <- #16\r\nDO ,1 SUB #13 <- #162\r\nPLEASE READ OUT ,1\r\nPLEASE GIVE UP'),
(323, 'Io', 'Io', '\"Hello World\n\" print'),
(324, 'Ioke', 'ik', '\"Hello World\" println'),
(325, 'Irc', NULL, '/timer 1 9999 1 Hello World'),
(326, 'Iscom', 'iscom', '\"Hello World\" @=10'),
(327, 'Islisp', 'lisp', '(format (standard-output) \"Hello World\")'),
(328, 'J', 'ijs', '#!/opt/local/bin/jc\r\necho \'Hello World\'\r\nexit \'\''),
(329, 'Jade', 'jade', 'helloWorld();\r\n\r\nbegin\r\n   write \"Hello World\";\r\nend;'),
(330, 'Jai', 'jai', '#import \"Print\"\r\n\r\nmain::(){\r\n\r\n	print(\"Hello World\");\r\n\r\n}'),
(331, 'Jasmin', 'j', '.class public Jasmin\r\n.super java/lang/Object\r\n\r\n.method public static main([Ljava/lang/String;)V\r\n	.limit stack 2\r\n	getstatic java/lang/System/out Ljava/io/PrintStream;\r\n	ldc \"Hello World\"\r\n	invokevirtual java/io/PrintStream/println(Ljava/lang/String;)V\r\n	return	\r\n.end method'),
(332, 'Jason', 'mas2j', '!greeting.\r\n+!greeting : true <- .print(\"Hello World\").'),
(333, 'Java', 'java', 'public class Java {\r\n	public static void main(String[] args) {\r\n		System.out.println(\"Hello World\");\r\n	}\r\n}'),
(334, 'Javascript', 'js', 'console.log(\"Hello World\");'),
(335, 'Jess', 'cpl', '(printout t \"Hello World\")'),
(336, 'Jsfuck', 'js', '[][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]][([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + ([][[]] + [])[+!+[]] + (![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[+!+[]] + ([][[]] + [])[+[]] + ([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (!![] + [])[+!+[]]](([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + ([][[]] + [])[+!+[]] + (![] + [])[!+[] + !+[] + !+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (+(+!+[] + [+!+[]] + (!![] + [])[!+[] + !+[] + !+[]] + [!+[] + !+[]] + [+[]]) + [])[+!+[]] + (![] + [])[!+[] + !+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (+![] + [![]] + ([] + [])[([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + ([][[]] + [])[+!+[]] + (![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[+!+[]] + ([][[]] + [])[+[]] + ([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (!![] + [])[+!+[]]])[!+[] + !+[] + [+[]]] + (![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[!+[] + !+[] + [+[]]] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]][([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + ([][[]] + [])[+!+[]] + (![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[+!+[]] + ([][[]] + [])[+[]] + ([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (!![] + [])[+!+[]]]((!![] + [])[+!+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + ([][[]] + [])[+[]] + (!![] + [])[+!+[]] + ([][[]] + [])[+!+[]] + (+[![]] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+!+[]]] + ([][[]] + [])[+[]] + ([][[]] + [])[+!+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (![] + [])[!+[] + !+[] + !+[]] + ([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (![] + [])[+!+[]] + (+(!+[] + !+[] + [+!+[]] + [+!+[]]))[(!![] + [])[+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (+![] + ([] + [])[([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + ([][[]] + [])[+!+[]] + (![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[+!+[]] + ([][[]] + [])[+[]] + ([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (!![] + [])[+[]] + (!![] + [])[+!+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + ([][[]] + [])[+!+[]] + (+![] + [![]] + ([] + [])[([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + ([][[]] + [])[+!+[]] + (![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[+!+[]] + ([][[]] + [])[+[]] + ([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (!![] + [])[+!+[]]])[!+[] + !+[] + [+[]]]](!+[] + !+[] + !+[] + [+!+[]])[+!+[]] + (!![] + [])[!+[] + !+[] + !+[]])()([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]][([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + ([][[]] + [])[+!+[]] + (![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[+!+[]] + ([][[]] + [])[+[]] + ([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (!![] + [])[+!+[]]]((!![] + [])[+!+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + ([][[]] + [])[+[]] + (!![] + [])[+!+[]] + ([][[]] + [])[+!+[]] + (+[![]] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+!+[]]] + (!![] + [])[!+[] + !+[] + !+[]] + (![] + [])[!+[] + !+[] + !+[]] + ([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (![] + [])[+!+[]] + (+(!+[] + !+[] + [+!+[]] + [+!+[]]))[(!![] + [])[+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (+![] + ([] + [])[([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + ([][[]] + [])[+!+[]] + (![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[+!+[]] + ([][[]] + [])[+[]] + ([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (!![] + [])[+[]] + (!![] + [])[+!+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + ([][[]] + [])[+!+[]] + (+![] + [![]] + ([] + [])[([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + ([][[]] + [])[+!+[]] + (![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[+!+[]] + ([][[]] + [])[+[]] + ([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (!![] + [])[+!+[]]])[!+[] + !+[] + [+[]]]](!+[] + !+[] + !+[] + [+!+[]])[+!+[]] + (!![] + [])[!+[] + !+[] + !+[]])()(([] + [])[([![]] + [][[]])[+!+[] + [+[]]] + (!![] + [])[+[]] + (![] + [])[+!+[]] + (![] + [])[!+[] + !+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + ([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (![] + [])[!+[] + !+[] + !+[]]]()[+[]])[+[]] + (!+[] + !+[] + [!+[] + !+[] + !+[] + !+[] + !+[] + !+[] + !+[]]) + []) + (+(+!+[] + [+[]] + [+!+[]]))[(!![] + [])[+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (+![] + ([] + [])[([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + ([][[]] + [])[+!+[]] + (![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[+!+[]] + ([][[]] + [])[+[]] + ([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (!![] + [])[+[]] + (!![] + [])[+!+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + ([][[]] + [])[+!+[]] + (+![] + [![]] + ([] + [])[([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + ([][[]] + [])[+!+[]] + (![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[+!+[]] + ([][[]] + [])[+[]] + ([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (!![] + [])[+!+[]]])[!+[] + !+[] + [+[]]]](!+[] + !+[] + [+!+[]])[+!+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (![] + [])[!+[] + !+[]] + (![] + [])[!+[] + !+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (+[![]] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+!+[]]] + (+(!+[] + !+[] + !+[] + [!+[] + !+[]]))[(!![] + [])[+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (+![] + ([] + [])[([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + ([][[]] + [])[+!+[]] + (![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[+!+[]] + ([][[]] + [])[+[]] + ([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (!![] + [])[+[]] + (!![] + [])[+!+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + ([][[]] + [])[+!+[]] + (+![] + [![]] + ([] + [])[([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + ([][[]] + [])[+!+[]] + (![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[+!+[]] + ([][[]] + [])[+[]] + ([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (!![] + [])[+!+[]]])[!+[] + !+[] + [+[]]]](!+[] + !+[] + !+[] + [!+[] + !+[] + !+[]]) + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (!![] + [])[+!+[]] + (![] + [])[!+[] + !+[]] + ([][[]] + [])[!+[] + !+[]] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]][([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + ([][[]] + [])[+!+[]] + (![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[+!+[]] + ([][[]] + [])[+[]] + ([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (!![] + [])[+!+[]]]((!![] + [])[+!+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + ([][[]] + [])[+[]] + (!![] + [])[+!+[]] + ([][[]] + [])[+!+[]] + (+[![]] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+!+[]]] + ([][[]] + [])[+[]] + ([][[]] + [])[+!+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (![] + [])[!+[] + !+[] + !+[]] + ([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (![] + [])[+!+[]] + (+(!+[] + !+[] + [+!+[]] + [+!+[]]))[(!![] + [])[+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (+![] + ([] + [])[([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + ([][[]] + [])[+!+[]] + (![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[+!+[]] + ([][[]] + [])[+[]] + ([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (!![] + [])[+[]] + (!![] + [])[+!+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + ([][[]] + [])[+!+[]] + (+![] + [![]] + ([] + [])[([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + ([][[]] + [])[+!+[]] + (![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[+!+[]] + ([][[]] + [])[+[]] + ([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (!![] + [])[+!+[]]])[!+[] + !+[] + [+[]]]](!+[] + !+[] + !+[] + [+!+[]])[+!+[]] + (!![] + [])[!+[] + !+[] + !+[]])()([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]][([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + ([][[]] + [])[+!+[]] + (![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[+!+[]] + ([][[]] + [])[+[]] + ([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (!![] + [])[+!+[]]]((!![] + [])[+!+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + ([][[]] + [])[+[]] + (!![] + [])[+!+[]] + ([][[]] + [])[+!+[]] + (+[![]] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+!+[]]] + (!![] + [])[!+[] + !+[] + !+[]] + (![] + [])[!+[] + !+[] + !+[]] + ([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (![] + [])[+!+[]] + (+(!+[] + !+[] + [+!+[]] + [+!+[]]))[(!![] + [])[+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (+![] + ([] + [])[([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + ([][[]] + [])[+!+[]] + (![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[+!+[]] + ([][[]] + [])[+[]] + ([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (!![] + [])[+[]] + (!![] + [])[+!+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + ([][[]] + [])[+!+[]] + (+![] + [![]] + ([] + [])[([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + ([][[]] + [])[+!+[]] + (![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[+!+[]] + ([][[]] + [])[+[]] + ([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+[]] + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[+!+[] + [+[]]] + (!![] + [])[+!+[]]])[!+[] + !+[] + [+[]]]](!+[] + !+[] + !+[] + [+!+[]])[+!+[]] + (!![] + [])[!+[] + !+[] + !+[]])()(([] + [])[([![]] + [][[]])[+!+[] + [+[]]] + (!![] + [])[+[]] + (![] + [])[+!+[]] + (![] + [])[!+[] + !+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + ([][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]] + [])[!+[] + !+[] + !+[]] + (![] + [])[!+[] + !+[] + !+[]]]()[+[]])[+[]] + (!+[] + !+[] + [!+[] + !+[] + !+[] + !+[] + !+[] + !+[] + !+[]]) + []) + (!![] + [][(![] + [])[+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]] + (!![] + [])[+[]] + (!![] + [])[!+[] + !+[] + !+[]] + (!![] + [])[+!+[]]])[!+[] + !+[] + [+[]]])()'),
(337, 'Json', 'json', '{ \"hello\": \"world\" }'),
(338, 'Jsoniq', NULL, '\"Hello World\"'),
(339, 'Jsx', 'js', 'var React = require(\'react\');\r\n\r\nvar HelloWorld = function() {\r\n    return <span>Hello World</span>;\r\n};\r\nHelloWorld.displayName = \'HelloWorld\';\r\n\r\nconsole.log(React.renderToString(<HelloWorld />));'),
(340, 'Judoscript', NULL, '. \"Hello World\";'),
(341, 'Julia', 'jl', 'println(\"Hello World\")'),
(342, 'Jython', 'py', 'print \"Hello World\"'),
(343, 'K', 'k', '\"Hello World\n\"'),
(344, 'Karel', 'kl', 'PROGRAM hello_world\r\nBEGIN\r\n  WRITE(\'Hello World\', CR)\r\nEND hello_world'),
(345, 'Kiml', 'kiml', 'io.out \"Hello World\"'),
(346, 'Kipple', 'kipple', '33>o<100 108>o<114 111>o<87 32>o<111 108>o<108 101>o<72'),
(347, 'Kitten', 'ktn', '\"Hello World\" say'),
(348, 'Koberi C', 'koberice', '(int main()\r\n    (print \"Hello World\")\r\n    (return 0))'),
(349, 'Kotlin', 'kt', 'package hello\r\n \r\nfun main() {\r\n  println(\"Hello World\")\r\n}'),
(350, 'Ksh', 'ksh', '#!/bin/ksh\r\necho \"Hello World\"'),
(351, 'Labyrinth', 'labyrinth', '33_100_108:}_114_111:}_87_32_44{{:_101_72.......\r\n@'),
(352, 'Lassoscript', 'lasso', '<?LassoScript\r\n	Variable: \'ScreenText\' = \'Hello World\';\r\n	$ScreenText;\r\n?>'),
(354, 'Lazyk', 'lazy', '`k``s``si`k``s`k```sii``s``s`kski``s``s`ksk``s``s`ksk```s``siii``s``s`kski`k``s``si`k``s``s`ksk```s``s`ksk\r\ni``s`k``s``s`kski``s``s`ksk```sii``s``s`kski`k``s``si`k``s`k```sii``s``s`kski```sii``s``s`ksk``s``s`kski`k\r\n``s``si`k``s`k```sii``s``s`kski```sii``s``s`ksk``s``s`kski`k``s``si`k``s``s`ksk``s`k``s``s`kski``s``s`ksk`\r\n`s`k``s``s`kski```sii``s``s`ksk``s``s`kski`k``s``si`k````s``s`ksk```s``siii``s``s`kski`s``s`ksk```sii``s``\r\ns`ksk``s``s`kski`k``s``si`k``s`k``s``s`kski```s``siii``s``s`kski`k``s``si`k``s`k``s``s`ksk``s`k``s``s`kski\r\n``s``s`ksk``s``s`kski``s``s`ksk```s``siii``s``s`kski`k``s``si`k``s``s`ksk``s`k``s``s`kski``s``s`ksk``s`k``\r\ns``s`kski```sii``s``s`ksk``s``s`kski`k``s``si`k``s`k``s``s`kski``s``s`ksk``s`k``s``s`kski``s``s`ksk```sii`\r\n`s``s`ksk``s``s`kski`k``s``si`k``s`k```sii``s``s`kski```sii``s``s`ksk``s``s`kski`k``s``si`k```s``s`kski``s\r\n`k``s``s`kski``s``s`ksk```sii``s``s`kski`k``s``si`k``s``s`ksk``s`k``s``s`kski```s``siii``s``s`kski`k``s``s\r\ni`k``s`k``s``s`kski``s``s`ksk```sii``s``s`kski`k``s``si`k```sii```sii``s``s`kski`k```sii```sii``s``s`kski'),
(355, 'Lcoffee', 'lcoff', 'print \"Hello World\"'),
(356, 'Less', 'less', 'body::before {\r\n    content: \"Hello World!\"\r\n}'),
(357, 'Leszek', 'leszek', 'OC.1.Hello World'),
(358, 'Limbo', 'b', 'implement Hello;\r\n\r\ninclude \"sys.m\";\r\n	sys: Sys;\r\ninclude \"draw.m\";\r\n\r\nHello: module\r\n{\r\n	init:	fn(ctxt: ref Draw->Context, argv: list of string);\r\n};\r\n\r\ninit(ctxt: ref Draw->Context, argv: list of string)\r\n{\r\n	sys = load Sys Sys->PATH;\r\n	sys->print(\"Hello World\n\");\r\n}'),
(359, 'Lingo', 'lg4', 'on startmovie\r\n  alert \"Hello World\"\r\nend'),
(360, 'Lisaac', 'li', '// Hello World in Lisaac\r\n\r\nSection Header\r\n	+ name		:= HELLO_WORLD;\r\n\r\nSection Inherit\r\n\r\n	- parent_object:OBJECT := OBJECT;\r\n\r\nSection Public\r\n\r\n	- main <-\r\n	(\r\n		\"Hello World !\n\".print;\r\n	);'),
(361, 'Lisp', 'lsp', '; LISP\r\n(DEFUN hello ()\r\n  (PRINT (LIST \'HELLO \'WORLD))\r\n)\r\n\r\n(hello)'),
(362, 'Livescript', 'ls', 'console.log \"Hello World\"'),
(364, 'Lnusp', 'lnusp', '--- Hello World\r\n---\r\n000        .INPUT          .OUTPUT          .STOP\r\n001 .                      .                .\r\n001  .                     .                .\r\n001   .                    .                .\r\n001    . !.!               .                .\r\n001     .   !              .                .\r\n001    ! .  !              .                .\r\n001    .  !!               .                .\r\n001    *                   .                .\r\n072    + H                 .                .\r\n001    *                   .                .\r\n101    + e                 .                .\r\n001    *                   .                .\r\n108    + l                 .                .\r\n001    *                   .                .\r\n108    + l                 .                .\r\n001    *                   .                .\r\n111    + o                 .                .\r\n001    *                   .                .\r\n032    + (sp)              .                .\r\n001    *                   .                .\r\n087    + W                 .                .\r\n001    *                   .                .\r\n111    + o                 .                .\r\n001    *                   .                .\r\n114    + r                 .                .\r\n001    *                   .                .\r\n108    + l                 .                .\r\n001    *                   .                .\r\n100    + d                 .                .\r\n001    *                   .                .\r\n033    + !                 .                .\r\n001    *                   .                .\r\n013    + (cr)              . -------------- .\r\n001    *                   .                .\r\n001    !                   .                .\r\n001     .                  .                .\r\n001      .        !!       .                .\r\n001       . !.!  !  !      .    !......!    .\r\n001        .   ! .  !   ?......!.....?  !   .\r\n001       ! .  ! . @   ?   .   .??    ? .   .\r\n001       .  !!  ./.   .   .   ?  ?   . .   .\r\n016       .      . * --.-- . --.  .---.-.-- .\r\n001       .      ! .   ?   .   *  ?   . !   .\r\n001       .       !.....?..@.....?.....!....@\r\n001       .        .           ?      ?    .\r\n001       !        !           ..    .    .\r\n001        !......!            ! ?..?    .\r\n001                             !.......!'),
(365, 'Locomotive Basic', 'b', '10 print \"Hello World\"\r\nrun'),
(366, 'Logicode', 'lgc', 'out @1001000+@1100101+@1101100+@1101100+@1101111+@100000+@1010111+@1101111+@1110010+@1101100+@1100100'),
(367, 'Logo', 'lg', 'print [Hello World]'),
(368, 'Logtalk', 'lgt', 'write(\'Hello World\')'),
(369, 'Lola', 'lola', ':H,:e,2:l,,:o,:\',:_,:w,:o,:r,:l,:d,:!,:%,:\\b,\\a,,,,,,,,,,,,,,\r\n\r\n+\\cb,ba,,\r\n*\\ba+,,\\a,\r\n:\\ac,c,\r\n\r\nH*+8,,8,\r\ne+d,\r\nl8+,d,\r\no3+,l,\r\n\'_+,^,\r\nw8+,o,\r\nr+^,+,e,\r\nd2%,\r\n_52,\r\n!+_,\r\n\r\n2\\bba,,\r\n3+2,\r\n5+22,,\r\n832,\r\n%*2,5,\r\n^2*2,,3,'),
(370, 'Lolcode', 'lol', 'HAI\r\nCAN HAS STDIO?\r\nVISIBLE \"Hello World\"\r\nKTHXBYE'),
(371, 'Lolpython', 'lol', 'VISIBLE \"Hello World\"'),
(372, 'Lotusscript', 'lss', 'Sub Initialize\r\n	Print \"Hello World\"\r\nEnd Sub'),
(373, 'Lsl', 'lsl', 'default\r\n{\r\n    state_entry()\r\n    {\r\n        llSay(0, \"Hello World\");\r\n    }\r\n}'),
(374, 'Lua', 'lua', 'print(\"Hello World\")'),
(375, 'Lua Grimex', 'j', '//! externalblock extension=lua ObjectMerger $FILENAME$\r\n\r\n//! i   log(\"Hello World\")\r\n\r\n//! endexternalblock'),
(376, 'M4', 'm4', 'Hello'),
(377, 'Maclisp', 'lisp', '(comment) ;-*- Lisp -*-\r\n(progn\r\n  (defun hello-world ()\r\n    (princ \"Hello World\")\r\n    (quit))\r\n  (close (prog1 infile (inpush -1)))\r\n  (sstatus feature noldmsg)\r\n  (gctwa)\r\n  (gc)\r\n  (sstatus flush t)\r\n  (suspend \":KILL \" \'(ts hello))\r\n  (hello-world))'),
(378, 'Macsyma', 'mac', '/* Macsyma */\r\nprint(\"Hello World\");'),
(379, 'Magic', NULL, 'HELLO.WORLD\r\n\r\n\"Hello World\"^#;'),
(380, 'Make', 'makefile', 'hello:\r\n    echo Hello World'),
(381, 'Malbolge', 'mbg', 'D\'`$MLKJ}|43V1C5S3sr0)M^mJIZjh3DCAA?-=v{)Lxqpunm3kSinmlkdib(IHdc\"!Y^][ZYXQuUTMRQJImG/KJIHG@d>&<;:9>=6Z498165.-Q10/.\'&J*)(!g}C0'),
(382, 'Markdown', 'md', 'Hello World'),
(383, 'Mathematica Online', 'nb', 'Notebook[{Cell[\r\nBoxData[RowBox[{\"Print\",\"[\",\"\"Hello World\"\",\"]\"}]],\"Input\",CellID->1]},\r\nStyleDefinitions->\"Default.nb\",FrontEndVersion->\"10.0 for Wolfram Cloud Platform (June 2 2014)\"]'),
(384, 'Matlab', 'm', 'disp(\'Hello World\')'),
(385, 'Maxscript', 'ms', 'print \"Hello World\"\r\n-- \"Hello World\"\r\n\r\n\r\n-- Note that MAXScript is expression-based, so simply writing \"Hello World\" is\r\n-- sufficient to echo it for the reader. Like Haskell, all MAXScript expressions\r\n-- *must* return values, even if they\'re unused.'),
(386, 'Mel', 'mel', 'proc helloWorld () {\r\n   print \"Hello World\n\";\r\n}\r\nhelloWorld;'),
(387, 'Meq', 'meq', '.==++>:+>+[>:++++++++]>:=+>===++>.===+++++++>:=+>:=++++>:++++++++>:rp>p>>p>p>p>p>p>p>p>p>p!'),
(388, 'Mercury', 'm', ':- module hello.\r\n:- interface.\r\n:- import_module io.\r\n:- pred main(io::di, io::uo) is det.\r\n\r\n:- implementation.\r\nmain(!IO) :-\r\n	io.write_string(\"Hello World\n\", !IO).'),
(389, 'Milkscript', 'milk', '#import \"basic\"\r\nprint(\"Hello World\")'),
(390, 'Minecraft', NULL, 'tellraw @a [\"\",{\"text\":\"Hello World\"}]'),
(391, 'Mips', 's', '.data\r\nhello_world: .asciiz \"Hello World\"\r\n\r\n.text\r\nmain:\r\n  li $v0, 4            # Load syscommand print_string\r\n  la $a0, hello_world  # Load hello_world string into register $a0\r\n  syscall              # Print the string\r\n  jr $ra               # Return'),
(392, 'Mirc', 'mrc', 'echo -a Hello World'),
(393, 'Mmmm()', 'mmmm', 'Mmm=m[m.m()].m(m.m());\r\nMmmm=m[mm].m();\r\nmmm.m();mmm.m();mmm.m();mmm.m();\r\nmmm.m();Mmmmm=mmm.m();\r\nmmm.m();mmm.m();mmm.m();mmm.m();\r\nmmm.m();mmm.m();mmm.m();mmm.m();\r\nmmm.m();mmm.m();mmm.m();mmm.m();\r\nmmm.m();mmm.m();mmm.m();mmm.m();\r\nmmm.m();mmm.m();mmm.m();mmm.m();\r\nmmm.m();mmm.m();mmm.m();mmm.m();\r\nmmm.m();mmm.m();mmm.m();mmm.m();\r\nmmm.m();mmm.m();mmm.m();mmm.m();\r\nmmm.m();mmm.m();mmm.m();mmm.m();\r\nmmm.m();mmm.m();mmm.m();mmm.m();\r\nmmm.m();mmm.m();mmm.m();mmm.m();\r\nmmm.m();mmm.m();mmm.m();mmm.m();\r\nmmm.m();mmm.m();mmm.m();mmm.m();\r\nmmm.m();mmm.m();mmm.m();mmm.m();\r\nmmm.m();mmm.m();mmm.m();mmm.m();\r\nmmm.m();mmm.m();mmm.m();mmm.m();\r\nmmm.m();m[mmmm].m(mmm.m());\r\nmmm.m();mmm.m();mmm.m();mmm.m();\r\nmmm.m();mmm.m();mmm.m();mmm.m();\r\nmmm.m();mmm.m();mmm.m();mmm.m();\r\nmmm.m();mmm.m();Mmmmmm=mmm.m();\r\nmmm.m();mmm.m();mmm.m();mmm.m();\r\nmmm.m();mmm.m();mmm.m();mmm.m();\r\nmmm.m();mmm.m();mmm.m();mmm.m();\r\nMmmmmmmmm=mmm.m();\r\nm[mmmm].m(mmm.m());\r\nmmm.m();mmm.m();mmm.m();mmm.m();\r\nmmm.m();mmm.m();Mmmmmmm=mmm.m();\r\nm[mmmm].m(mmmmmm);m[mmmm].m(mmmmmm);\r\nmmm.m();mmm.m();\r\nMmmmmmmm=mmm.m();\r\nm[mmmm].m(mmmmmmm);\r\nmmm.m();mmm.m();\r\nMmmmmmmmmm=mmm.m();\r\nMmmm=m[mm].m();\r\nmmm.m();mmm.m();mmm.m();mmm.m();\r\nmmm.m();mmm.m();mmm.m();mmm.m();\r\nmmm.m();mmm.m();mmm.m();mmm.m();\r\nmmm.m();mmm.m();mmm.m();mmm.m();\r\nmmm.m();mmm.m();mmm.m();mmm.m();\r\nmmm.m();mmm.m();mmm.m();mmm.m();\r\nmmm.m();mmm.m();mmm.m();mmm.m();\r\nmmm.m();mmm.m();mmm.m();\r\nMmmmmmmmmmm=mmm.m();\r\nMmmmmmmmmmmm=mmm.m();\r\nmmm.m();mmm.m();mmm.m();mmm.m();\r\nmmm.m();mmm.m();mmm.m();mmm.m();\r\nmmm.m();mmm.m();\r\nm[mmmm].m(mmm.m());\r\nm[mmmm].m(mmmmmmmmmm);\r\nm[mmmm].m(mmmmm);\r\nm[mmmm].m(mmmmmmm);\r\nm[mmmm].m(mmmmmmmmm);\r\nm[mmmm].m(mmmmmm);\r\nm[mmmm].m(mmmmmmmm);\r\nm[mmmm].m(mmmmmmmmmmm);'),
(394, 'Modiscript', 'chai', 'Mitrooon\r\n    bhaiyo aur behno \"Hello World\"\r\nAchhe din aa gaye'),
(395, 'Modula 2', 'mod', 'MODULE HelloWorld;\r\n\r\nFROM Terminal2 IMPORT WriteString, WriteLn;\r\n\r\nBEGIN\r\n\r\n    WriteString(\"Hello World\");\r\n    WriteLn;\r\n    \r\nEND HelloWorld.'),
(396, 'Modula 3', 'm3', 'MODULE HelloWorld;\r\nIMPORT Io;\r\nBEGIN\r\n    IO.Put (\"Hello World\n\")\r\nEND HelloWorld.'),
(397, 'Mongo', 'shell', 'print(\"Hello World\")'),
(398, 'Monte', 'mt', 'traceln(\"Hello World\")'),
(399, 'Moo', 'moo', '@program hello:run\r\nplayer:tell(\"Hello World\");\r\n.'),
(400, 'Moonscript', 'moon', 'print \'Hello World\''),
(401, 'Morsecode', NULL, '.... . .-.. .-.. ---   .-- --- .-. .-.. -..'),
(402, 'Mouse', 'mse', '\"Hello World\"\r\n\'! !\'\r\n$'),
(403, 'Move', 'mv', 'alert \'Hello World\''),
(404, 'Mozart', 'oz', 'functor\r\nimport\r\n     Application\r\n     System\r\ndefine\r\n    {System.showInfo \'Hello World\'}\r\n    {Application.exit 0} \r\nend'),
(405, 'Muf', 'muf', ': main\r\n    me @ \"Hello World\" notify\r\n;'),
(406, 'Mumps', 'm', 'w \"Hello World\",!'),
(407, 'Mushcode', 'mush', 'say Hello World.'),
(408, 'Myrddin', 'myr', 'use std\r\n\r\nconst main = {\r\n    std.put(\"Hello World\n\")\r\n}'),
(409, 'Mysql', 'sql', 'SELECT \'Hello World\';'),
(410, 'Mathematica', 'nb', 'Print[\"Hello World\"]'),
(411, 'Nadeshiko', 'fjo', '「Hello World」と表示。'),
(412, 'Neko', 'neko', '$print(\"Hello World\n\");'),
(413, 'Nemerle', 'n', 'class Hello\r\n{\r\n    static Main () : void\r\n    {\r\n        System.Console.WriteLine (\"Hello World\");\r\n    }\r\n}'),
(414, 'Newtonscript', 'nwt', 'baseview :=\r\n   {viewBounds: {left: -3, top: 71, right: 138, bottom: 137},\r\n    viewFlags: 581,\r\n    declareSelf: \'base,\r\n    _proto: protoFloatNGo,\r\n    debug: \"baseview\"\r\n   };\r\n\r\ntextview := * child of baseview *\r\n   {text: \"Hello World\",\r\n    viewBounds: {left: 33, top: 24, right: 113, bottom: 46},\r\n    viewFlags: 579,\r\n    _proto: protoStaticText,\r\n    debug: \"textview\"\r\n   };'),
(415, 'Nice', 'nice', 'void main(String[] args){\r\n   println(\"Hello World\");\r\n}'),
(416, 'Nim', 'nim', 'echo(\"Hello World\")'),
(417, 'Nit', 'nit', 'print \"Hello World\"'),
(418, 'Nodejs', 'js', '#!/usr/bin/env node\r\n\r\nconsole.log(\'Hello World\');'),
(419, 'Novice', 'novice', 'a\r\na-Hello World_*\r\nHello World_*'),
(420, 'Nu', 'nu', '(puts \"Hello World\")'),
(421, 'Nwscript', 'nss', '// Place in the OnClientEnter event of the module\'s properties\r\n{\r\n    SendMessageToPC(GetEnteringObject(), \"Hello World\");\r\n}'),
(422, 'Nxc', 'nxc', 'task main()\r\n{\r\n    TextOut(0, LCD_LINE1, \"Hello World\");\r\n}'),
(423, 'Oberon 2', 'obn', 'MODULE HelloWorld;                     \r\nIMPORT Out;\r\nBEGIN\r\n  Out.String( \"Hello World\" );\r\n  Out.Ln;\r\nEND HelloWorld.'),
(424, 'Oberon', 'o', 'MODULE HelloWorld;\r\n\r\nIMPORT Out;\r\n\r\nBEGIN\r\n   Out.Open;\r\n   Out.String(\'Hello World\');\r\nEND HelloWorld.'),
(425, 'Obix', 'osc', 'system.console.write_line ( \"Hello World\" )'),
(426, 'Obj', 'st', 'stdout println:\'Hello World\'.'),
(427, 'Object Pascal', 'pp', 'program ObjectPascalExample;\r\n\r\ntype\r\n   THelloWorld = class\r\n      procedure Put;\r\n   end;\r\n\r\nprocedure THelloWorld.Put;\r\nbegin\r\n   Writeln(\'Hello World\');\r\nend;\r\n\r\nvar\r\n   HelloWorld: THelloWorld;\r\n\r\nbegin\r\n   HelloWorld := THelloWorld.Create;\r\n   HelloWorld.Put;\r\n   HelloWorld.Free;\r\nend.'),
(428, 'Objective C', 'm', '/*\r\n Build on OS X: \r\n clang -framework Foundation -fobjc-arc objc.m -o objc\r\n \r\n Build on Linux with GNUstep:\r\n clang `gnustep-config --objc-flags` `gnustep-config --base-libs` -fobjc-nonfragile-abi -fobjc-arc objc.m -o objc\r\n */\r\n\r\n#import <Foundation/Foundation.h>\r\n\r\nint main(void)\r\n{\r\n    NSLog(@\"Hello World\");\r\n}'),
(429, 'Objective J', 'j', 'document.write(\"Hello World\");'),
(430, 'Objectstar', NULL, 'CALL ENDMSG(\'HELLO WORLD\');'),
(431, 'Ocaml', 'ml', 'print_string \"Hello World\n\"'),
(432, 'Octave', 'octave', '#Hello World in Octave (http://www.octave.org/)\r\nprintf(\"Hello World\n\");'),
(433, 'Omgrofl', 'omgrofl', 'lol iz 72\r\nrofl lol\r\nlol iz 101\r\nrofl lol\r\nlol iz 108\r\nrofl lol\r\nrofl lol\r\nlool iz 111\r\nrofl lool\r\nloool iz 44\r\nrofl loool\r\nloool iz 32\r\nrofl loool\r\nloool iz 87\r\nrofl loool\r\nrofl lool\r\nlool iz 114\r\nrofl lool\r\nrofl lol\r\nlol iz 100\r\nrofl lol\r\nlol iz 33\r\nrofl lol'),
(434, 'Ooc', 'ooc', 'main: func {\r\n    \"Hello World\" println()\r\n}'),
(435, 'Ook', 'ok', 'Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\r\nOok. Ook. Ook. Ook. Ook! Ook? Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\r\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook! Ook! Ook? Ook! Ook? Ook.\r\nOok! Ook. Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\r\nOok. Ook. Ook! Ook? Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook?\r\nOok! Ook! Ook? Ook! Ook? Ook. Ook. Ook. Ook! Ook. Ook. Ook. Ook. Ook. Ook. Ook.\r\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook. Ook! Ook. Ook. Ook. Ook. Ook.\r\nOok. Ook. Ook! Ook. Ook. Ook? Ook. Ook? Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook.\r\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook? Ook. Ook. Ook.\r\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook! Ook! Ook? Ook! Ook? Ook. Ook! Ook.\r\nOok. Ook? Ook. Ook? Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\r\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook? Ook. Ook. Ook.\r\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\r\nOok. Ook? Ook! Ook! Ook? Ook! Ook? Ook. Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook.\r\nOok? Ook. Ook? Ook. Ook? Ook. Ook? Ook. Ook! Ook. Ook. Ook. Ook. Ook. Ook. Ook.\r\nOok! Ook. Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook.\r\nOok! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook!\r\nOok! Ook. Ook. Ook? Ook. Ook? Ook. Ook. Ook! Ook.'),
(436, 'Opa', 'opa', 'jlog(\"Hello World\")'),
(437, 'Openlaszlo', 'lzx', '<canvas>\r\n    <text>Hello World</text>\r\n</canvas>'),
(438, 'Oraclesql', 'sql', 'SELECT \'Hello World\' FROM DUAL;'),
(439, 'Orc', 'orc', '{- HelloWorld.orc -- Orc program HelloWorld\r\n -\r\n - $Id$\r\n -\r\n - Created by xbony2 on Nov 8, 2014 8:30:25 PM\r\n - Licensed under public domain.\r\n -}\r\n\r\nPrintln(\"Hello World\") >>\r\nstop'),
(440, 'Oz', 'oz', '{Show \'Hello World\'}'),
(441, 'Parenthetic', 'p', 'Parenthetic - https://github.com/cammckinnon/Parenthetic\r\n\r\n((()()())(()(()()))((()(()))((())()()()()()()())((()()(()))((())()()()()()()()()())\r\n((())()()()()()()()()()()))))((()()())(()(()()()))((()(())(())())((())()()()()()()(\r\n)()()()()()()()()()()()()()()()()()()()()()()()()())))((()(()))((()(())(())())((()(\r\n()))(()(()()))((())()()()()()()())))((()(())(())())((()(()))(()(()()))((())()()()()\r\n)))((()(())(())())((()(()))(()(()()))((())()()()()()()()()()()())))((()(())(())())(\r\n(()(()))(()(()()))((())()()()()()()()()()()())))((()(())(())())((()(()))(()(()()))(\r\n(())()()()()()()()()()()()()()())))(()(()()()))((()(())(())())((()(()))(()(()()))((\r\n())()()()()()()()()()()()()()()()()()()()()()())))((()(())(())())((()(()))(()(()())\r\n)((())()()()()()()()()()()()()()())))((()(())(())())((()(()))(()(()()))((())()()()(\r\n)()()()()()()()()()()()()())))((()(())(())())((()(()))(()(()()))((())()()()()()()()\r\n()()()())))((()(())(())())((()(()))(()(()()))((())()()()))))'),
(442, 'Parser', 'p', '@main[]\r\n  ^rem{Will print \"Hello World\" when run as CGI script}\r\n  $hello[Hello World]\r\n  $result[$hello]'),
(443, 'Pascal', 'p', 'program HelloWorld(output);\r\nbegin\r\n        writeln(\'Hello World\');\r\nend.'),
(444, 'Pauscal', 'pdp', 'Importar \"Pauscal.prp\"\r\nMensaje(\"Hello World\")\r\nFin'),
(445, 'Pawn', 'p', '#include <core>\r\n \r\nmain(){\r\n    print(\"Hello World\");   \r\n}'),
(446, 'Pb', 'pwr', '; Hello World in \"PowerBatch Plus+\" from Computing Systems Design, Inc.\r\n\r\nVariable        Msg,13,\"Hello World\"\r\n\r\nWrite           Msg'),
(447, 'Pbwin', 'bas', '#COMPILE EXE\r\n#DIM ALL\r\n\r\nFUNCTION PBMAIN () AS LONG\r\n\r\n    MSGBOX \"Hello World\"\r\n\r\nEND FUNCTION');
INSERT INTO `language` (`id`, `language_name`, `file_extension`, `hello_world_program`) VALUES
(448, 'Pebble', 'c', '#include <pebble.h>\r\n\r\nstatic Window* main_window;\r\nstatic TextLayer* text_layer, *world_layer;\r\n\r\nstatic void main_window_load(Window* window) {\r\n    Layer *window_layer = window_get_root_layer(window);\r\n    window_set_background_color(main_window, GColorBlack);\r\n    GRect bounds = layer_get_bounds(window_layer);\r\n    text_layer = text_layer_create(\r\n        GRect(0, bounds.size.h / 2 - 42, bounds.size.w, 120));\r\n    text_layer_set_text(text_layer, \"Hello\");\r\n    text_layer_set_background_color(text_layer, GColorClear);\r\n    text_layer_set_text_color(text_layer, GColorWhite);\r\n    text_layer_set_font(text_layer, fonts_get_system_font(FONT_KEY_BITHAM_42_BOLD));\r\n    text_layer_set_text_alignment(text_layer, GTextAlignmentCenter);\r\n\r\n    world_layer = text_layer_create(\r\n        GRect(0, bounds.size.h / 2, bounds.size.w, 120));\r\n    text_layer_set_background_color(world_layer, GColorClear);\r\n    text_layer_set_text(world_layer, \"World\");\r\n    text_layer_set_text_color(world_layer, GColorLightGray);\r\n    text_layer_set_font(world_layer, fonts_get_system_font(FONT_KEY_BITHAM_42_BOLD));\r\n    text_layer_set_text_alignment(world_layer, GTextAlignmentCenter);\r\n  \r\n    layer_add_child(window_layer, text_layer_get_layer(text_layer));\r\n    layer_add_child(window_layer, text_layer_get_layer(world_layer));\r\n}\r\nstatic void main_window_unload(Window* window) {\r\n    text_layer_destroy(text_layer);\r\n    text_layer_destroy(world_layer);\r\n}\r\n\r\nstatic void init() {\r\n    main_window = window_create();\r\n    window_set_window_handlers(main_window, (WindowHandlers) {\r\n        .load = main_window_load,\r\n        .unload = main_window_unload\r\n    });\r\n    window_stack_push(main_window, true);\r\n}\r\n\r\nstatic void deinit() {\r\n    window_destroy(main_window);\r\n}\r\n\r\nint main(void) {\r\n    init();\r\n    app_event_loop();\r\n    deinit();\r\n}'),
(449, 'Perl', 'cgi', '#!/usr/local/bin/perl -w\r\n   use CGI;                             # load CGI routines\r\n   $q = CGI->new;                        # create new CGI object\r\n   print $q->header,                    # create the HTTP header\r\n         $q->start_html(\'Hello World\'), # start the HTML\r\n         $q->h1(\'Hello World\'),         # level 1 header\r\n         $q->end_html;                  # end the HTML\r\n\r\n # http://perldoc.perl.org/CGI.html'),
(450, 'Perl', 'pl', '#!/usr/bin/perl\r\nprint \"Hello World\n\";'),
(451, 'Perl6', 'p6', '#!/usr/bin/env perl6\r\n\r\nv6;\r\n\r\nsay \"Hello World\";'),
(452, 'Perseus', 'p%2B%2B', 'link CUI entry main\r\n\r\ninclude \"Windows.inc\"\r\ninclude \"Console.inc\"\r\n\r\nfunc main()\r\n{\r\n	Console.Init(\"Console\")\r\n	Console.Write(\"Hello World\")\r\n}'),
(453, 'Pharo', 'st', '\'Hello World\' crLog'),
(454, 'Php', 'php', '<?php\r\n\r\necho \'Hello World\';'),
(455, 'Picat', 'pi', 'main =>\r\n  println(\'Hello World\').'),
(457, 'Pig', 'pig', 'Hello WorldPIGHello World'),
(458, 'Pikalang', 'pokeball', 'pi pi pi pi pi pi pi pi pi pi pika pipi pi pi pi pi pi pi pi pipi pi pi\r\npi pi pi pi pi pi pi pi pipi pi pi pi pipi pi pichu pichu pichu pichu ka\r\nchu pipi pi pi pikachu pipi pi pikachu pi pi pi pi pi pi pi pikachu\r\npikachu pi pi pi pikachu pipi pi pi pikachu pichu pichu pi pi pi pi pi\r\npi pi pi pi pi pi pi pi pi pi pikachu pipi pikachu pi pi pi pikachu ka\r\nka ka ka ka ka pikachu ka ka ka ka ka ka ka ka pikachu pipi pi pikachu\r\npipi pikachu'),
(459, 'Pike', 'pike', 'int main() {\r\n    write(\"Hello World\n\");\r\n    return 0;\r\n}'),
(460, 'Pit', 'pit', 'NOT 1\r\nSND 1\r\nSND 0\r\nSND 0\r\nSND 0\r\nSND 1\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 0\r\nSND 1\r\nSND 0\r\nSND 0\r\nSND 0\r\nSND 1\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 0\r\nSND 1\r\nSND 0\r\nSND 0\r\nSND 0\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 0\r\nSND 1\r\nSND 0\r\nSND 0\r\nSND 0\r\nSND 1\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 0\r\nSND 1\r\nSND 0\r\nSND 0\r\nSND 0\r\nSND 1\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 0\r\nSND 1\r\nSND 0\r\nSND 0\r\nSND 0\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 0\r\nSND 1\r\nSND 0\r\nSND 0\r\nSND 0\r\nSND 1\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 0\r\nSND 1\r\nSND 0\r\nSND 0\r\nSND 0\r\nSND 1\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 0\r\nSND 1\r\nSND 0\r\nSND 0\r\nSND 0\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 0\r\nSND 1\r\nSND 0\r\nSND 0\r\nSND 0\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 0\r\nSND 1\r\nSND 0\r\nSND 0\r\nSND 0\r\nSND 1\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 0\r\nSND 1\r\nSND 0\r\nSND 0\r\nSND 0\r\nSND 1\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 0\r\nSND 1\r\nSND 0\r\nSND 0\r\nSND 0\r\nSND 1\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nSND 2\r\nSND 1\r\nNOT 2\r\nSND 2\r\nSND 0\r\nOFF 0'),
(461, 'Pizza', 'pizza', 'class HelloWorld {\r\n  public static void main(String[] args) {\r\n    System.out.println(\"Hello World\");\r\n  }\r\n}'),
(462, 'Please Porige Hot', 'pph', '1 Please porige hot or cold Hello World'),
(463, 'Pli', 'pl1', 'Hello2: proc options(main);\r\n     put list (\'Hello World\');\r\nend Hello2;'),
(464, 'Plsql', 'sql', 'begin\r\n  dbms_output.put_line(\'Hello World\');\r\nend;\r\n/'),
(465, 'Pluvo', 'pvo', 'say \"Hello World\"'),
(466, 'Polynomial', 'pol', 'f(x) = x^54 - 159014x^53 + 10832073396865804x^52 - 1722454995853645185024x^51 + 37968621468067227708480815104x^50 - 6048436172078846536054214083215360x^49 - 233513143301713321053926514246008438784x^48 + 1104146527973661777408036024159387365933056x^47 - 43427940760660892945598234855622393627754364928x^46 + 67688151387034834407174775878348678887678180065280x^45 - 2657323397811390386816113812836066598878541383083229182x^44 + 1750284245331664692109566288590033450135765470086567034878x^43 - 66462310637170791141330436813018840528707142797162918925303806x^42 + 20508128690597856095696899775729835128839331997155438812840591358x^41 - 664953230461190852547732663527306948596506725237756131883009775239166x^40 + 122666463513285791263166623998020333809641694974891527172108001766014974x^39 - 2290339732715482683303962242601771918911509803450296139283376474479399010302x^38 + 333681206682071257276765622169335904551081599525895157749622024410862633091070x^37 - 1691043431739585500544644861024318773165895772478850636648655229589277769014968318x^36 + 200506166911493278122043091578573690630915822238274576692536396738642535022472462334x^35 - 83725352136727902926962688002085013348571758969699327995437883996918505898393112412158x^34 + 8946701875864986004178866146568026543826377674206253421423964436944549188572512744636414x^33 - 1867315954108076983102178980404722124954606614812493711046674205982894462255753012843642878x^32 + 178324449027542424363250070678452160645175392388973092115587091266832446376253808451931602942x^31 - 24291196173290792733633389253959325279211027629620980716292664144523119832413508515604964835326x^30 + 2051361313277806101971735175010721323823623545474630082713676031861264604659894615015106038202366x^29 - 204163318930245521138048084566822704550940204786829904381641555821279624471050262962488593524719614x^28 + 15080204889675869155229234744312762198619136509808788153390711130175410235109921892971369525296496638x^27 - 1165291326138700992648690286268194728713765396851822888922293042494539382622438040850689893573528125438x^26 + 74455666269114358239917407447450883116392692238031999396368360323797637882097034155445411572501551513598x^25 - 4629813507931028276481888188824918837219940394558223324294713679828523226590836146159419165677988974952446x^24 + 253120956733554432342716622232076867923990466385729228242480842746036367109236814280617493808254752667992062x^23 - 12935074231319533186983493987243575840365401040882648745356769581430267310941451311894303395892917187039461374x^22 + 598913063059871613059857216856855349855419761967359474402923993393922286606408014770709182577971747789238960126x^21 - 25428508737739962276270688610109187572552304592436884974847563375647270022873810881862347086815806954727658225662x^20 + 988075525812553477917947118187566933771383003967243891018665745909746387720410669543775339912470070203350513614846x^19 - 34974169531686082193562459271768002009744513364736394486295709944600099597472906094246515756034869419547478867312638x^18 + 1131815654865400099721068380879494797357578573000978123266770256219841969966466292315303189575522430114658452248723454x^17 - 33333243367066790224431125737877702592396473433676485170092104273794119865956405762749777296265621241096608710368690174x^16 + 892264657182917347092519064707331396991280027881775637162618455630037117552251223731760472327631168507410442258403557374x^15 - 21741234185793763082357467767610152549960037645439852577400502876137832861902450604589029830428630800969050504520911552510x^14 + 477743401378059186285442060198126775727720768799991712595952810072435362385423036993075850469213290973558290972495134588926x^13 - 9542386958914044777985633223358827925072853726403754987291921876055021910330691028409034466645850263821631147144589476888574x^12 + 170373657119042581679392061752246883211700633236029252140524140404116909796029987541347425321627477671207061587436661802795006x^11 - 2749764955487032211189043031405167033392562632980461084259430732124101539469658631267867961079629561250003844967312558638759934x^10 + 39258870077914541482854786591008101985140318175933710685982149707499006040540918873742652203012485463461181385232920427641176062x^9 - 500368492335132183249328269334693420237229115021360007044007047308659390943642645302624438601527360932151837223729879018719150078x^8 + 5561474165691513638632263097940791619157749550438413179410744745968666079707113111702893276550591486283330334999248957967519711230x^7 - 53880783522289363454704538003114570363811073301017229192681339922824957590137011676197017433885609211428303922108095981658814021630x^6 + 445288801638974965851448060362741780190759776482802809915713807735430669749072211419415506701161594212827516720492113889326434091006x^5 - 3062244326655950294268213743871987045997296637980493381720979841832789151604468970705217772640392632442086114584286495283795927760894x^4 + 17350497861833021048265568696066512194485118861967772235263366259072517869159731356876777820098774378356979847504601682094845149052926x^3 - 74168531044100993077468285584515190766733489300066134507874699191841424986708021389184383419592112291881531106870872614137017669779454x^2 + 228571929129635500353661243768318776163922747079196359396738280844215833818180963007061674605170476519898831960207022976332263187283966x - 611392605770821583281602313540767104622218840531412047272348323116466189132132314542079626967192155939298340170675960484343482356334590'),
(467, 'Pony', 'pony', 'actor Main\r\n  new create(env: Env) =>\r\n    env.out.print(\"Hello World\")'),
(468, 'Portugol', 'por', 'algoritmo \"Hello World\"\r\n// Função: Hello World\r\n// Autor: d3z40\r\n// Data: 22/08/2018\r\n// Seção de Declarações\r\n\r\nvar\r\n \r\ninicio\r\n// Seção de Comandos\r\nescreva (\"Hello World\")\r\nfimalgoritmo'),
(469, 'Postcss', 'pcss', 'body::before {\r\n    content: \"Hello World\";\r\n}'),
(470, 'Postgresql', 'sql', 'SELECT \'Hello World\' AS hello_message;'),
(471, 'Postscript', 'ps', '% run> gs -q -sDEVICE=nullpage postscript.ps\r\n(Hello World\n) print quit'),
(472, 'Postscript Page', 'ps', '% run> gs -q postscript_page.ps\r\n/pt {72 div} def\r\n/y 9 def\r\n/textdraw {/Courier findfont 12 pt scalefont setfont 8 pt y moveto show} def\r\n\r\n72 72 scale\r\n0 0 0 setrgbcolor\r\n\r\n(Hello World) textdraw\r\nshowpage\r\nquit'),
(473, 'Posxml', 'posxml', '<display line=\"0\" column=\"0\" message=\"Hello World\" />'),
(474, 'Potaka', 'ptk', 'দেখাও(\"Hello World\");'),
(475, 'Potigol', 'poti', 'escreva \"Hello World\"'),
(476, 'Powershell', 'ps1', '\'Hello World\''),
(477, 'Processing', 'pde', 'size(128, 128);\r\nbackground(0);\r\ntextAlign(CENTER, CENTER);\r\nfill(255);\r\ntext(\"Hello World\", width / 2, height / 2);'),
(478, 'Profan', NULL, 'print \"Hello World\"'),
(479, 'Prolog', 'pro', 'helloWorld :-\r\n  write(\'Hello World\').\r\n\r\n:- helloWorld.'),
(480, 'Promela', 'pml', 'active proctype main(){\r\n  printf(\"Hello World\")\r\n}'),
(481, 'Providex', 'vim', 'begin  \r\n   print \"Hello World\" \r\nend'),
(482, 'Pug', 'pug', 'doctype html\r\nhtml\r\n    head\r\n       title Hello World\r\n    body\r\n       h1 Hello World'),
(483, 'Pure Data', 'pd', '#N canvas 1029 457 450 300 10;\r\n#X obj 127 132 print;\r\n#X msg 127 86 Hello World;\r\n#X connect 1 0 0 0;'),
(484, 'Purebasic', 'pb', 'If OpenConsole()\r\n  PrintN(\"Hello World\")\r\nEndIf'),
(485, 'Purescript', 'purs', 'module Main where\r\n\r\nimport Debug.Trace\r\n\r\nmain = trace \"Hello World\"'),
(486, 'Pyret', 'arr', 'print(\'Hello World\')'),
(487, 'Python', 'py', '#!/usr/bin/env python\r\nprint \"Hello World\"'),
(488, 'Python3', 'py', '#!/usr/bin/env python3\r\nprint(\"Hello World\")'),
(489, 'Q', 'q', '\"Hello World\"'),
(490, 'Qbasic', 'bas', 'PRINT \"Hello World\"'),
(491, 'Qcl', 'qcl', 'print \"Hello World\";'),
(492, 'Qore', 'q', '#!/usr/bin/env qore\r\n%exec-class HelloWorld\r\nclass HelloWorld\r\n{\r\n    constructor()\r\n    {\r\n	    background $.say(\"Hello World\");\r\n    }\r\n    private say($arg)\r\n    {\r\n	    printf(\"%s\n\", $arg);\r\n    }\r\n}'),
(493, 'Qsharp', 'qs', 'namespace Quantum.HelloWorld {\r\n    open Microsoft.Quantum.Canon;\r\n    open Microsoft.Quantum.Intrinsic;\r\n\r\n\r\n    operation HelloWorld() : Unit {\r\n        Message(\"Hello World\");\r\n    }\r\n}'),
(494, 'Qu', 'qu', '\'Hello World\'\r\ntest'),
(495, 'Quakec', 'qc', 'bprint(\"Hello World\n\");'),
(496, 'Quartzcomposer', 'qtz', '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\r\n<plist version=\"1.0\">\r\n<dict>\r\n	<key>editorViewerWindow</key>\r\n	<string>202 156 512 430 0 0 1280 777 </string>\r\n	<key>frameworkVersion</key>\r\n	<string>334</string>\r\n	<key>rootPatch</key>\r\n	<dict>\r\n		<key>class</key>\r\n		<string>QCPatch</string>\r\n		<key>state</key>\r\n		<dict>\r\n			<key>connections</key>\r\n			<dict>\r\n				<key>connection_1</key>\r\n				<dict>\r\n					<key>destinationNode</key>\r\n					<string>Billboard_1</string>\r\n					<key>destinationPort</key>\r\n					<string>inputImage</string>\r\n					<key>sourceNode</key>\r\n					<string>TextImage_1</string>\r\n					<key>sourcePort</key>\r\n					<string>outputImage</string>\r\n				</dict>\r\n			</dict>\r\n			<key>nodes</key>\r\n			<array>\r\n				<dict>\r\n					<key>class</key>\r\n					<string>QCTextImage</string>\r\n					<key>key</key>\r\n					<string>TextImage_1</string>\r\n					<key>state</key>\r\n					<dict>\r\n						<key>customInputPortStates</key>\r\n						<dict>\r\n							<key>inputGlyphSize</key>\r\n							<dict>\r\n								<key>value</key>\r\n								<real>1.0</real>\r\n							</dict>\r\n							<key>inputHeight</key>\r\n							<dict>\r\n								<key>value</key>\r\n								<real>0.0</real>\r\n							</dict>\r\n							<key>inputKerning</key>\r\n							<dict>\r\n								<key>value</key>\r\n								<real>0.0</real>\r\n							</dict>\r\n							<key>inputLeading</key>\r\n							<dict>\r\n								<key>value</key>\r\n								<real>0.0</real>\r\n							</dict>\r\n							<key>inputWidth</key>\r\n							<dict>\r\n								<key>value</key>\r\n								<real>0.0</real>\r\n							</dict>\r\n						</dict>\r\n						<key>fontName</key>\r\n						<string>LucidaGrande</string>\r\n						<key>fontSize</key>\r\n						<real>1.0</real>\r\n						<key>horizontalAlignment</key>\r\n						<string>Centered</string>\r\n						<key>ivarInputPortStates</key>\r\n						<dict>\r\n							<key>inputFontName</key>\r\n							<dict>\r\n								<key>value</key>\r\n								<string>LucidaGrande</string>\r\n							</dict>\r\n							<key>inputGlyphSize</key>\r\n							<dict>\r\n								<key>value</key>\r\n								<real>1.0</real>\r\n							</dict>\r\n							<key>inputHeight</key>\r\n							<dict>\r\n								<key>value</key>\r\n								<real>0.0</real>\r\n							</dict>\r\n							<key>inputKerning</key>\r\n							<dict>\r\n								<key>value</key>\r\n								<real>0.0</real>\r\n							</dict>\r\n							<key>inputLeading</key>\r\n							<dict>\r\n								<key>value</key>\r\n								<real>0.0</real>\r\n							</dict>\r\n							<key>inputString</key>\r\n							<dict>\r\n								<key>value</key>\r\n								<string>Hello World</string>\r\n							</dict>\r\n							<key>inputWidth</key>\r\n							<dict>\r\n								<key>value</key>\r\n								<real>0.0</real>\r\n							</dict>\r\n						</dict>\r\n						<key>manualLayout</key>\r\n						<false/>\r\n						<key>userInfo</key>\r\n						<data>\r\n						BAtzdHJlYW10eXBlZIHoA4QBQISE\r\n						hBNOU011dGFibGVEaWN0aW9uYXJ5\r\n						AISEDE5TRGljdGlvbmFyeQCEhAhO\r\n						U09iamVjdACFhAFpAZKEhIQITlNT\r\n						dHJpbmcBlYQBKwhwb3NpdGlvboaS\r\n						hISEB05TVmFsdWUAlYQBKoSEDHtD\r\n						R1BvaW50PWRkfZuBHwKBuQCGhg==\r\n						</data>\r\n						<key>version</key>\r\n						<integer>2</integer>\r\n						<key>verticalAlignment</key>\r\n						<string>Centered</string>\r\n					</dict>\r\n				</dict>\r\n				<dict>\r\n					<key>class</key>\r\n					<string>QCBillboard</string>\r\n					<key>key</key>\r\n					<string>Billboard_1</string>\r\n					<key>state</key>\r\n					<dict>\r\n						<key>CIRendering</key>\r\n						<false/>\r\n						<key>customInputPortStates</key>\r\n						<dict>\r\n							<key>inputScale</key>\r\n							<dict>\r\n								<key>value</key>\r\n								<real>1.0</real>\r\n							</dict>\r\n						</dict>\r\n						<key>ivarInputPortStates</key>\r\n						<dict>\r\n							<key>inputBlending</key>\r\n							<dict>\r\n								<key>value</key>\r\n								<integer>1</integer>\r\n							</dict>\r\n							<key>inputColor</key>\r\n							<dict>\r\n								<key>value</key>\r\n								<dict>\r\n									<key>alpha</key>\r\n									<real>1.0</real>\r\n									<key>blue</key>\r\n									<real>0.0</real>\r\n									<key>green</key>\r\n									<real>0.0</real>\r\n									<key>red</key>\r\n									<real>0.0</real>\r\n								</dict>\r\n							</dict>\r\n							<key>inputPixelAligned</key>\r\n							<dict>\r\n								<key>value</key>\r\n								<real>0.0</real>\r\n							</dict>\r\n							<key>inputRotation</key>\r\n							<dict>\r\n								<key>value</key>\r\n								<real>0.0</real>\r\n							</dict>\r\n							<key>inputScale</key>\r\n							<dict>\r\n								<key>value</key>\r\n								<real>1.0</real>\r\n							</dict>\r\n							<key>inputX</key>\r\n							<dict>\r\n								<key>value</key>\r\n								<real>0.0</real>\r\n							</dict>\r\n							<key>inputY</key>\r\n							<dict>\r\n								<key>value</key>\r\n								<real>0.0</real>\r\n							</dict>\r\n						</dict>\r\n						<key>optimizedRendering</key>\r\n						<false/>\r\n						<key>pixelAligned</key>\r\n						<real>0.0</real>\r\n						<key>sizeMode</key>\r\n						<string>autoHeight</string>\r\n						<key>systemInputPortStates</key>\r\n						<dict>\r\n							<key>_enable</key>\r\n							<dict>\r\n								<key>value</key>\r\n								<true/>\r\n							</dict>\r\n						</dict>\r\n						<key>userInfo</key>\r\n						<data>\r\n						BAtzdHJlYW10eXBlZIHoA4QBQISE\r\n						hBNOU011dGFibGVEaWN0aW9uYXJ5\r\n						AISEDE5TRGljdGlvbmFyeQCEhAhO\r\n						U09iamVjdACFhAFpAZKEhIQITlNT\r\n						dHJpbmcBlYQBKwhwb3NpdGlvboaS\r\n						hISEB05TVmFsdWUAlYQBKoSEDHtD\r\n						R1BvaW50PWRkfZuB+gKBuQCGhg==\r\n						</data>\r\n						<key>version</key>\r\n						<integer>4</integer>\r\n					</dict>\r\n				</dict>\r\n			</array>\r\n			<key>userInfo</key>\r\n			<data>\r\n			BAtzdHJlYW10eXBlZIHoA4QBQISEhBNOU011dGFibGVEaWN0aW9u\r\n			YXJ5AISEDE5TRGljdGlvbmFyeQCEhAhOU09iamVjdACFhAFpA5KE\r\n			hIQITlNTdHJpbmcBlYQBKwp6b29tRmFjdG9yhpKEhIQITlNOdW1i\r\n			ZXIAhIQHTlNWYWx1ZQCVhAEqhIQBZpwBhpKEl5gJc2Nyb2xsaW5n\r\n			hpKEmpuEhAx7Q0dQb2ludD1kZH2dgwAAAAAATIBAgUYBhpKEl5gI\r\n			cG9zaXRpb26GkoSam56dAAWGhg==\r\n			</data>\r\n		</dict>\r\n	</dict>\r\n</dict>\r\n</plist>'),
(497, 'Qugord', 'qugord', '~group hello from %2 to %14 also affect hello into \"Hello World\" also each hello into 0 task give 0 to 1 also at 1 join 1 and %1\r\n~publish also split hello'),
(498, 'Quorum', 'quorum', 'output \"Hello World\"'),
(499, 'Qwerty', 'qwerty', 'begin\r\n	?hello = \"Hello World\"\r\n	if 1 == 1 then\r\n		output ?hello\r\n	fi\r\nend'),
(500, 'R', 'R', 'cat(\"Hello World\n\")'),
(501, 'Racket', 'rkt', '#lang racket\r\n\"Hello World\"'),
(502, 'Radixal', 'radixal', '1 3 2 44 15 27 15 4 2 34 15 34 15 4 4 121 15 4 2 8 15\r\n4 4 45 15 121 15 3 4 56 15 1102 15 46 15 3 2 15 15 3 4 5 15'),
(503, 'Ratfor', 'ratfor', 'print *, \'Hello World\'\r\nend'),
(504, 'React', 'js', 'function Hello() {\r\n  return <h1>Hello World</h1>;\r\n}\r\n\r\nReact.render(<Hello />, document.body);'),
(505, 'React360', 'js', 'import React from \"react\";\r\nimport { AppRegistry, Text, View, StyleSheet } from \"react-360\";\r\n\r\nexport default class hello_world extends React.Component {\r\n    render() {\r\n        return (\r\n            <View style={styles.panel}>\r\n                <View style={styles.greetingBox}>\r\n                    <Text style={styles.greeting}>Hello World</Text>\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    panel: {\r\n        // Fill the entire surface\r\n        width: 1000,\r\n        height: 600,\r\n        backgroundColor: \"rgba(255, 255, 255, 0.4)\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    greetingBox: {\r\n        padding: 20,\r\n        backgroundColor: \"#000000\",\r\n        borderColor: \"#639dda\",\r\n        borderWidth: 2,\r\n    },\r\n    greeting: {\r\n        fontSize: 30,\r\n    },\r\n});\r\n\r\nAppRegistry.registerComponent(\"hello_world\", () => hello_world);'),
(506, 'Readlink', 'readlink', 'Hello World'),
(507, 'Realbasic', 'realbasic', 'Function Run(args() as String) As Integer\r\n  Print \"Hello World\"\r\n  Quit\r\nEnd Function'),
(508, 'Reason', 're', 'print_string \"Hello World\"'),
(509, 'Rebol', 'r', 'print \"Hello World\"'),
(510, 'Rebol', 'reb', 'print \"Hello World\"'),
(511, 'Recurse', 'recurse', 'Main function\r\n$###########v######################################\r\n>..9n_3n{5Av# \'H\' = 9*8       # \'w\' = (2*8-1)*8-1 #\r\n#vA3_[_A7_A<# \'e\' = \'H\'+3*8+5 # \'o\' = \'W\'-8       #\r\n#>_[5n{4A_[v# \'l\' = \'e\'+7     # \'r\' = \'o\'+3       #\r\n#vS1{n2[_n4<# \'l\'             # \'l\' = \'r\'-6       #\r\n#>n{1S_8S_3v# \'o\' = \'l\'+3     # \'d\' = \'l\'-8       #\r\n#v[_S8_S6_A<# \',\' = 5*8+ 4    # \'!\' = 4*8+1       #\r\n#>4n{1A_[..!# \' \' = 4*8       #                   <\r\n$###########^######################################\r\n\r\n Multiply by 8 (Bidirectional)\r\nn####v#####\r\n>{8}m#m}8{<\r\nn####^#####\r\n\r\n Push on left stack and print (Bidirectional)\r\n_##v###\r\n>{!#!{<\r\n_##^###\r\n\r\n Add (Bidirectional)\r\nA##v###\r\n>}a#a}<\r\nA##^###\r\n\r\n Subtract (Bidirectional)\r\nS##v###\r\n>}s#s}<\r\nS##^###'),
(512, 'Red', 'red', 'Red [Needs: \'View]\r\nview [text \"Hello World\"]'),
(513, 'Redis', NULL, 'set Hello World'),
(514, 'Refal', 'ref', '$ENTRY Go { = <Hello>;}\r\nHello {\r\n   = <Prout \'Hello World\'>;\r\n}'),
(515, 'Restructuredtext', 'rst', '============\r\nHello World\r\n============'),
(516, 'Retro', 'retro', '\"Hello World\" puts'),
(517, 'Rexx', 'rexx', '<<hello.rexx>>=\r\nSay \"Hello World\"'),
(518, 'Richtea', 'tea', 'Print(\"Hello World\");'),
(519, 'Ride', 'ride', 'throw(\"Hello World\")'),
(520, 'Ring', 'ring', 'see \"Hello World\"'),
(521, 'Rivescript', 'rive', '+ *\r\n- Hello World'),
(522, 'Rockstar', 'rock', 'Scream \"Hello World\"'),
(523, 'Roco', 'roco', 'cout 72\r\ncout 101\r\ncout 108\r\ncout 108\r\ncout 111\r\ncout 44\r\ncout 32\r\ncout 87\r\ncout 111\r\ncout 114\r\ncout 108\r\ncout 100\r\ncout 33\r\nac'),
(524, 'Roy', 'roy', 'console.log \"Hello World\"'),
(525, 'Rpg Iv', 'rpgle', '/free\r\n    dsply \'Hello World\';\r\n    return;\r\n/end-free'),
(526, 'Rpg', 'rpgle', '**free\r\ndsply \'Hello World\';\r\nreturn;'),
(527, 'Rtl2', 'rtl2', 'TITLE Hello World;\r\n\r\nLET NL=10;\r\n\r\nEXT PROC(REF ARRAY BYTE) TWRT;\r\n\r\nENT PROC INT RRJOB();\r\n\r\n    TWRT(\"Hello World#NL#\");\r\n    RETURN(1);\r\n\r\nENDPROC;'),
(528, 'Ruby', 'rb', '#!/usr/bin/env ruby\r\nputs \"Hello World\"'),
(529, 'Ruota', 'ruo', 'printl(\"Hello World\")'),
(530, 'Rust', 'rs', 'fn main() {\r\n    println!(\"Hello World\");\r\n}'),
(531, 'S Algol', NULL, 'write \"Hello World\"\r\n?'),
(532, 'Sacred', 'sacred', ')( )( (( )( (( (( () ( () ( (( () )) )( )( )( )) )( )) )( )) )( (( (( (( ) )) ) (( (( )( )( ((( (( () () () () () () ((( (( (( )( ((( ((( (( (( ((( (( () ((( )) )) ((( )) )) ((( (( (( (( ((( () () () ((( )) )) ((( )) )) )( ((( (( (( (( () ((('),
(533, 'Sal', 's', 'proc main()\r\n    loop\r\n        WriteLine(\"Hello World\")\r\n    endloop\r\nend'),
(534, 'Sas', 'sas', '%macro putit( string= ); \r\n     %put &string; \r\n     %mend; \r\n\r\n%putit(string=Hello World)'),
(535, 'Sass', 'sass', 'body::before\r\n	content: \"Hello World\"'),
(536, 'Sather', 'sa', 'class MAIN is\r\n   main is \r\n      loop \r\n         #OUT + \"Hello World\n\" \r\n      end \r\n   end\r\nend'),
(537, 'Scala', 'scala', 'object HelloWorld extends App {\r\n  println(\"Hello World\")\r\n}'),
(538, 'Scheme', 'scm', '(display \"Hello World\") (newline)'),
(539, 'Schwift', 'y', 'show me what you got \"Hello World\"'),
(540, 'Scilab', 'scilab', 'disp(\"Hello World\")'),
(541, 'Scratch', 'sb', 'ScratchV02'),
(543, 'Scratch1', 'sb', 'ScratchV02'),
(545, 'Scss', 'scss', 'body::before {\r\n    content: \"Hello World\";\r\n}'),
(546, 'Sed', 'sed', '#!/usr/bin/sed -f sed.sed\r\nc\r\nHello World\r\nq'),
(547, 'Seed', NULL, '20 77698190481213510983405846204529755428212736563278528088055816123655499433757607718113585773285686740433752335768949721107461077652705328567448384490378909463204984642622585570301449419608763821501335954761638946551568252142160714228369356054944595121742743720935369219143086698092657062614382519069928478344861416117079283276656675368390764675728501797178208908097054412833019383889935034413095990596139618411133857423995278221670378808372393943846302426674985203826030563290800228881174929701934609803807325868775242909948272754141956168876233403760199007405891058308908050926690654387065882097924294620229833663324754801060691573338185912369627367088050915813931912943122729210762147280440619571047157836177316082899933374851699282897590433145623725705072835054748369992455883804733164985993447304652512229557984322495162682327137071900307763332392727562988633724175094951314863886096190608268953115914497741446723188169519334729165647294618083444761551231012944903572063441813639201051793052623561949314826491616145873848990439549320951496534538450810083853945092224500179417650727351532486362656533602860500906935826231374501097567347929533018944533000919137863885267937690665655625569011036163950983389810112758403211861147501289650757555111271813737813381172074709337306647481507917983021055643749698971365256395367215437223669891280521155247529741719633106765965869860677198632388808752014013939448563313855130972968670015202479226496876067874099463222366536167126653600056389712632892652810365218798697007191747287017174284819764736012653205048166550645507761123345279502597627995423826537299795220169894222867163817508592362092945387317777666016102146798532337718546431888424995701016828542559577710937459975677354300708252448630110787487122698124054544454425586794841157136743408274159313823745226919626156949004386804874236325506583268311452185182143521552429596087556634158778951670223004413763782647825362665491934988477225698133609360969370513836064317152213804169538880632390908441210809806024082600637872813704781431414342781727628446451808751293046212690472851527294326981763969926510021099532791692362104324026231160941956411410511639925420026544463125250979130259151326444714248961523031316570018708849878676230362246913063109584502143502908906243190007062857721367402065760878808920961082444422470813023453274563914735545463757909757689866565064353853099958949763412521666109346825939993377745919874506439752272141853783745051726268592621080457687000431023453539135927140364910898906534604541224314820195082362228787083990333757268808864746297304451768935814651205074884015268982492445996542040655715230139673520569765431617018824427859214902954216246257690105154030408059145566852643855789351907818461502260430297487602982850090037405732117988720732457199005151517240766953718440639691354185802798689950155164379549518496065038927905828230066053603755553745353618846804435103593395141938947781375633374976924393453162350331593801284839409264892975739791751842620029351535320807733966984270102067017902086335370470815153908942490581427972998999752666174807935897314584088695849094389002316139005810918748032068307783088481430339303809949409414892479892121893571274086727250767713365523021125610242269894861374297866741571608166536165735922984579027986499758294460652554897534526492251140681138244025665400003029337114012766773010641359450599171473565675885966777145500248501370644599274741842644014722083732709145488157998306684831419559774212264003518406013032514468522158218837161285401631773099549510145156007147884565387852623860047153609138110997222297132678660783411624002400927435687937355446057878202312894093195453248164648271580944753933355967626542678764854079218206499479071658357103085513937246462858404881973219571392564909528645166637501279457604649906515968389831094896970731573714836150178126997674563415266672131632765794599548356902607125568792417432226125654028873443580337866760487651905138461301986816386866811155111486155341154153322710638921116465132825486519667178335471102213200521032618562169530188826434060179505699797068436325168526618824444305122475837890944742004331675952611756641739756206337285946'),
(548, 'Seed7', 's7', '$ include \"seed7_05.s7i\";\r\n\r\nconst proc: main is func\r\n  begin\r\n    writeln(\"Hello World\");\r\n  end func;'),
(549, 'Self', 'self', '\'Hello World\' printLine'),
(550, 'Semicolon', NULL, ';;;;⁏;;⁏;;;\r\n⁏ ;;;;;;⁏⁏;;⁏;⁏\r\n⁏ ;;;;;;⁏⁏;⁏⁏;;\r\n;;⁏⁏ ;;⁏ ;;;;;;⁏⁏;⁏⁏⁏⁏\r\n⁏ ;;;;;;⁏;;;;;\r\n⁏ ;;;;;;⁏⁏⁏;⁏⁏⁏\r\n⁏ ;;;;;;⁏⁏;⁏⁏⁏⁏\r\n;;⁏⁏ ;;;;;;⁏⁏\r\n⁏;;⁏ ;;;;;;⁏⁏;⁏⁏;;\r\n⁏ ;;;;;;⁏⁏;;⁏;;\r\n⁏ ;;;;;;⁏;;;;⁏\r\n⁏ ;;;;;;;⁏;⁏;\r\n⁏ ;;  ;'),
(551, 'Sendstuff', 'ss', '>(Add      72 >(Output) \r\n>(Add      29 >(Output)\r\n>(Add      7  >(Output) \r\n              >(Output)\r\n>(Add      3  >(Output)\r\n>(Subtract 67 >(Output)\r\n>(Subtract 12 >(Output) \r\n>(Add      55 >(Output)\r\n>(Add      24 >(Output)\r\n>(Add      3  >(Output)\r\n>(Subtract 6  >(Output)\r\n>(Subtract 8  >(Output)\r\n>(Subtract 67 >(Output)'),
(552, 'Setanta', 'set', 'scríobh(\"Hello World\")'),
(553, 'Shakespeare', 'spl', 'The Infamous Hello World Program.\r\n\r\nRomeo, a young man with a remarkable patience.\r\nJuliet, a likewise young woman of remarkable grace.\r\nOphelia, a remarkable woman much in dispute with Hamlet.\r\nHamlet, the flatterer of Andersen Insulting A/S.\r\n\r\n\r\n                    Act I: Hamlet\'s insults and flattery.\r\n\r\n                    Scene I: The insulting of Romeo.\r\n\r\n[Enter Hamlet and Romeo]\r\n\r\nHamlet:\r\n You lying stupid fatherless big smelly half-witted coward!\r\n You are as stupid as the difference between a handsome rich brave\r\n hero and thyself! Speak your mind!\r\n\r\n You are as brave as the sum of your fat little stuffed misused dusty\r\n old rotten codpiece and a beautiful fair warm peaceful sunny summer\'s\r\n day. You are as healthy as the difference between the sum of the\r\n sweetest reddest rose and my father and yourself! Speak your mind!\r\n\r\n You are as cowardly as the sum of yourself and the difference\r\n between a big mighty proud kingdom and a horse. Speak your mind.\r\n\r\n Speak your mind!\r\n\r\n[Exit Romeo]\r\n\r\n                    Scene II: The praising of Juliet.\r\n\r\n[Enter Juliet]\r\n\r\nHamlet:\r\n Thou art as sweet as the sum of the sum of Romeo and his horse and his\r\n black cat! Speak thy mind!\r\n\r\n[Exit Juliet]\r\n\r\n                    Scene III: The praising of Ophelia.\r\n\r\n[Enter Ophelia]\r\n\r\nHamlet:\r\n Thou art as lovely as the product of a large rural town and my amazing\r\n bottomless embroidered purse. Speak thy mind!\r\n\r\n Thou art as loving as the product of the bluest clearest sweetest sky\r\n and the sum of a squirrel and a white horse. Thou art as beautiful as\r\n the difference between Juliet and thyself. Speak thy mind!\r\n\r\n[Exeunt Ophelia and Hamlet]\r\n\r\n\r\n                    Act II: Behind Hamlet\'s back.\r\n\r\n                    Scene I: Romeo and Juliet\'s conversation.\r\n\r\n[Enter Romeo and Juliet]\r\n\r\nRomeo:\r\n Speak your mind. You are as worried as the sum of yourself and the\r\n difference between my small smooth hamster and my nose. Speak your\r\n mind!\r\n\r\nJuliet:\r\n Speak YOUR mind! You are as bad as Hamlet! You are as small as the\r\n difference between the square of the difference between my little pony\r\n and your big hairy hound and the cube of your sorry little\r\n codpiece. Speak your mind!\r\n\r\n[Exit Romeo]\r\n\r\n                    Scene II: Juliet and Ophelia\'s conversation.\r\n\r\n[Enter Ophelia]\r\n\r\nJuliet:\r\n Thou art as good as the quotient between Romeo and the sum of a small\r\n furry animal and a leech. Speak your mind!\r\n\r\nOphelia:\r\n Thou art as disgusting as the quotient between Romeo and twice the\r\n difference between a mistletoe and an oozing infected blister! Speak\r\n your mind!\r\n\r\n[Exeunt]'),
(554, 'Shell', 'sh', '#!/bin/sh\r\necho \"Hello World\"'),
(555, 'Shen', 'shen', '(pr \"Hello World\")'),
(556, 'Sidekiq', 'sidekiq', 'def self.❨╯°□°❩╯︵┻━┻\r\n    puts \"Hello World\"\r\nend'),
(557, 'Sil', 'SIL', 'print Hello World'),
(558, 'Simpl+', 'usp', '// Hello World in Crestron\'s SIMPL+\r\nFunction Main\r\n{\r\n    Print(\"Hello World\n\");\r\n}'),
(559, 'Simula', 'sim', 'Begin\r\n   OutText (\"Hello World\");\r\n   Outimage;\r\nEnd;'),
(560, 'Skip', 'sk', 'fun main(): void {\r\n  print_string(\"Hello World\")\r\n}'),
(561, 'Skript', 'sk', 'on load:\r\n	broadcast \"Hello World\"'),
(562, 'Slashes', 'slashes', 'Hello World'),
(563, 'Slim', 'slim', 'doctype html\r\nhead\r\n  title Hello World\r\nbody\r\n  h1 Hello World'),
(564, 'Smali', 'smali', '.class public LHelloWorld;\r\n\r\n.super Ljava/lang/Object;\r\n\r\n.method public static main([Ljava/lang/String;)V\r\n    .registers 2\r\n\r\n    sget-object v0, Ljava/lang/System;->out:Ljava/io/PrintStream;\r\n\r\n    const-string	v1, \"Hello World\"\r\n\r\n    invoke-virtual {v0, v1}, Ljava/io/PrintStream;->println(Ljava/lang/String;)V\r\n\r\n    return-void\r\n.end method'),
(565, 'Smalltalk Gnu', 'st', '\'Hello World\' printNl !'),
(566, 'Smalltalk', 'sm', 'Transcript show: \'Hello World\'.'),
(567, 'Smil', 'smil', '<smil>\r\n <head>\r\n  <layout>\r\n   <root-layout width=\"300\" height=\"160\" background-color=\"white\"/>\r\n   <region id=\"text_region\" left=\"115\" top=\"60\"/>\r\n  </layout>\r\n </head>\r\n <body>\r\n  <text src=\"data:,Hello%20World!\" region=\"text_region\">\r\n   <param name=\"fontFace\" value=\"Arial\"/>\r\n  </text>\r\n </body>\r\n</smil>'),
(568, 'Sml', 'sml', 'val () = print \"Hello World\n\"'),
(569, 'Snowman', 'sm', '~\"Hello World\"sPvG'),
(570, 'Solidity', 'sol', 'pragma solidity ^0.6.4;\r\n\r\ncontract HelloWorld {\r\n    function render () public pure returns (string memory) {\r\n        return \'Hello World\';\r\n    }\r\n}'),
(571, 'Soupscript', 'script', 'PrintLn Hello World\r\n\r\nBreak'),
(572, 'Sparql', 'sparql', 'SELECT ?h WHERE { \r\n  VALUES ?h { \"Hello World\" } \r\n}'),
(573, 'Spoon', 'spoon', '11111111110010001011111110101111111111010111010101101101101100000110101100101001010010101111111001010001010111001010010110010100110111111111111111110010100100010101110010100000000000000000000010100000000000000000000000000010100101001010010001010'),
(574, 'Spss', 'spss', 'BEGIN PROGRAM.\r\nprint \"Hello World\"\r\nEND PROGRAM.'),
(575, 'Sql', 'sql', 'SELECT \'Hello World\';'),
(576, 'Squirrel', 'nut', 'print(\"Hello World\");'),
(577, 'Standard Ml', 'sml', 'fun hello() = print(\"Hello World\n\");\r\n\r\nhello()'),
(578, 'Stanza', 'stanza', 'println(\"Hello World\")'),
(579, 'Starlark', 'star', 'print(\"Hello World\")'),
(580, 'Streem', 'strm', '[\"Hello World\"] | stdout'),
(581, 'Stuck', 'stuck', '\"Hello World\"'),
(582, 'Stylus', 'styl', 'body::before\r\n	content: \"Hello World\"'),
(583, 'Subleq', 'sq', 'loop:       hello (-1)\r\n            minusOne loop\r\n            minusOne checkEnd+1\r\ncheckEnd:   Z hello (-1) \r\n            Z Z loop\r\n				\r\n. minusOne: -1\r\n. hello: \"Hello World\n\" Z: 0'),
(584, 'Supercollider', 'sc', '\"Hello World\".postln;'),
(585, 'Svelte', 'svelte', '<script>\r\n  let message = \'Hello World\';\r\n</script>\r\n\r\n<p>{ message }</p>'),
(586, 'Svg', 'svg', '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\r\n<svg width=\"240\" height=\"100\" viewBox=\"0 0 240 100\" zoomAndPan=\"disable\"\r\n     xmlns=\"http://www.w3.org/2000/svg\"  xmlns:xlink=\"http://www.w3.org/1999/xlink\">\r\n  <title>Hello World</title>\r\n    <g>\r\n      <text x=\"10\" y=\"50\">Hello World</text>\r\n      <animate attributeName=\'opacity\' values=\'0;1\' dur=\'4s\' fill=\'freeze\' begin=\"0s\"/>\r\n    </g>\r\n</svg>'),
(587, 'Swift', 'swift', 'print(\"Hello World\")'),
(588, 'Systemtap', 'stp', 'probe oneshot { println(\"Hello World\") }'),
(589, '上海话', 'shanghai', '嘎讪胡：“Hello World”。'),
(590, 'Plain Text', 'txt', 'Hello World'),
(591, 'Raffalang', 'bro', 'TODO MUNDO FALA DE MIM \"Hello World\" BRO;'),
(592, 'Tao Presentations', 'ddd', '// ****************************************************************************\r\n//  hello_world.ddd                                                 Tao project\r\n// ****************************************************************************\r\n//\r\n// File Description:\r\n//\r\n// Original hello world with Tao Presentations.\r\n// http://www.taodyne.com/shop/en/blog/3-getting-started-with-tao-presentations\r\n//\r\n//\r\n//\r\n// ****************************************************************************\r\n//  (C) 1992-2010 Christophe de Dinechin <christophe@taodyne.com>\r\n//  (C) 2010 Jérôme Forissier <jerome@taodyne.com>\r\n//  (C) 2010 Catherine Burvelle <cathy@taodyne.com>\r\n//  (C) 2010 Taodyne SAS\r\n// ****************************************************************************\r\n\r\ncolor \"white\"\r\nmilkyway 10000\r\nrotatez -23\r\nearth 400\r\nhello_world 440\r\n\r\n\r\nmilkyway R ->\r\n// ----------------------------------------------------------------------------\r\n//    Draw the Milky Way\r\n// ----------------------------------------------------------------------------\r\n    locally\r\n        texture_wrap true, true\r\n        texture_transform {scale 5, 5, 5}\r\n        texture \"milkyway.jpg\"\r\n        rotatey 0.02 * page_time + 100\r\n        scale 1, -1, 1\r\n        sphere R\r\n\r\n\r\nearth R ->\r\n// ----------------------------------------------------------------------------\r\n//    Draw Earth\r\n// ----------------------------------------------------------------------------\r\n    locally\r\n        texture \"earth.bmp\"\r\n        texture_wrap true, true\r\n        rotatey 5 * page_time + 250\r\n        sphere 0, 0, 0, R\r\n\r\n\r\nhello_world R ->\r\n// ----------------------------------------------------------------------------\r\n//    Draw \"hello world\" text\r\n// ----------------------------------------------------------------------------\r\n    locally\r\n        frame_texture 1900, 600,\r\n            color 1, 1, 1, 1\r\n            reset_transform\r\n            // If font Arial Unicode installed, it will be used.\r\n            // Otherwise, unifont will be used (unifont is packaged\r\n            // with Tao presentations).\r\n            font \"Arial Unicode MS\", \"unifont\", 72\r\n            move_to -800, -9, 0\r\n            text \"Hello World or Καλημέρα κόσμε; or こんにちは 世界\"\r\n        rotatey -11 * page_time + 180\r\n        color 20% , 20% , 20% , 70%\r\n        sphere 0, 0, 0, R - 30\r\n        color 100% , 90% , 20% , 90%\r\n        sphere 0, 0, 0, R'),
(593, 'Tapebagel', 'tb', '%% %++ %++ %++ %++ %++ %++ %++ %++ @* ## %++ %++ %++ %++ %++ @* ## %++\r\n%++ %++ %++ %++ %++ %++ %++ %++ %++ %++ %++ @* @* ## %++ %++ %++ %++\r\n%++ %++ %++ %++ %++ %++ %++ %++ %++ %++ %++ @* ## @* %++ %++ %++ %++\r\n%++ %++ %++ %++ %++ %++ %++ %++ %++ %++ %++ %++ %++ %++ %++ %++ %++\r\n%++ %++ @* ## %++ %++ %++ %++ %++ %++ %++ %++ %++ %++ %++ %++ %++\r\n%++ %++ @* ## %++ %++ %++ %++ %++ %++ %++ %++ %++ %++ %++ %++ %++\r\n%++ %++ %++ %++ %++ @* ##  %++ %++ %++ %++ %++ %++ %++ %++ %++ %++\r\n%++ %++ @* ## %++ %++ %++ %++ @* ##'),
(594, 'Tcl', 'tcl', 'puts \"Hello World\"'),
(595, 'Tcsh', 'tcsh', '#!/bin/tcsh\r\necho \"Hello World\"'),
(596, 'Telephone', NULL, '#How to Spell HELLO WORLD on a standard telephone keypad\r\n43556 96753'),
(597, 'Terra', 't', 'print(\"Hello World\")'),
(599, 'Thp', 'hrp', '; Hello World in \"The Harper Programmer\"\r\n; Compiled and tested with version 2.0 Sybex Edition\r\n\r\nVariable        Msg,13,\"Hello World\"\r\n\r\nWrite           Msg'),
(600, 'Thue', 'th', 'a::=~Hello World\r\n::=\r\na'),
(601, 'Ti Hexadecimal', 'hex', 'AsmPrgm\r\nEF4045\r\n111A1A\r\nED53D786\r\n21A89D\r\nEF6145\r\nC9\r\n48656C6C6F20776F726C64202100'),
(602, 'Tibasic', 'ti', 'PROGRAM:HELLOW\r\n:ClrHome\r\n:Disp \"Hello World\"'),
(603, 'Tk', 'tk', 'label .l -text \"Hello World\"\r\npack .l'),
(604, 'Tri', 'tri', 'inc inc psh psh psh mul sto nxt sto psh mul lst psh add \r\nsto prn nxt zro clr inc inc inc psh psh add inc nxt pop \r\ninc psh lst psh mul one psh add sto nxt sto lst lst psh \r\nnxt nxt nxt add sto prn zro inc inc inc psh inc psh add \r\nsto prn prn inc inc inc prn clr lst lst lst psh nxt psh\r\nsub nxt sto inc prn lst one clr inc psh psh inc psh mul \r\nnxt psh sub neg pop prn inc nxt psh nxt sto inc inc inc\r\ninc inc inc inc inc prn lst prn nxt dec dec dec dec dec \r\nprn dec dec dec dec dec dec prn lst dec dec dec dec dec \r\ndec dec dec dec dec dec prn lst prn lin'),
(605, 'Trollscript', 'troll', 'Trooloolooloolooloolooloolooloolollooooolooloolooloolooloolooooolooloolooloolooloolooloolooloooooloolooloooooloooloolooloololllllooooloololoooooololooolooloolooloolooloololoolooolooloololooooooloololooooloololooloolooloolooloolooloolooloolooloolooloololooooolooolooloololooollollollollollolllooollollollollollollollollloooooololooooolooll.'),
(606, 'Trumpscript', 'py', 'say \"Hello World\"!\r\nAmerica is great.'),
(607, 'Tsql', 'sql', 'DECLARE @message varchar(128)\r\nSELECT  @message = \'Hello World\'\r\nPRINT   @message'),
(608, 'Ttcn3', 'ttcn', 'module HelloWorld\r\n{\r\n    control\r\n    {\r\n        log(\"Hello World\");\r\n    }\r\n }'),
(609, 'Turing', 'oot', 'put \"Hello World\"'),
(610, 'Turing', 't', 'put \"Hello World\"'),
(611, 'Typescript', 'ts', 'console.log(\"Hello World\");'),
(612, 'Ubercode', 'cls', 'Ubercode 1 class HelloWorld  \r\n\r\n  public function Main()\r\n  code\r\n    call Msgbox(\"Hello World\", \"My first program\", \"OK\")\r\n  end function\r\n\r\n  end class'),
(613, 'Ubiquity', 'ubiquity', 'function cmd_hello_world() {\r\n  displayMessage(\"Hello World\");\r\n}'),
(614, 'Umajin', 'u', 'println \'Hello World\''),
(615, 'Unicomal', 'lst', '0100 PRINT \"Hello World\"'),
(616, 'Unlambda', 'unl', '`r```````````.H.e.l.l.o. .w.o.r.l.di'),
(617, 'V', NULL, 'iHello World'),
(618, 'V', 'v', 'println(\"Hello World\")'),
(619, 'Vala', 'vala', 'static void main (string[] args)\r\n{\r\n	stdout.printf (\"Hello World\n\");\r\n}'),
(620, 'Vbnet', 'vb', 'Module HelloWorld\r\n    Sub Main()\r\n        System.Console.WriteLine(\"Hello World\")\r\n    End Sub\r\nEnd Module'),
(621, 'Velato', 'ly', 'on \"2.19.64\"\r\n\r\nheader{\r\n  title = \"Hello World\"\r\n}\r\n\r\nlanguage \"english\"\r\n\r\npaper {\r\n  top-margin = 1.5in\r\n  left-margin = 2.0in\r\n  right-margin = 2.0in\r\n}\r\n\r\nscore {\r\n  	ranspose c c\' {\r\n    % H\r\n    <c a>4\r\n    g8(\r\n    e8 f8\r\n    gs8 d8\r\n    g8) |\r\n\r\n    % e\r\n    a8\r\n    <g e>4.\r\n    <f cs>4\r\n    c16( cs16\r\n    g8 |\r\n\r\n    % l\r\n    a8)\r\n    <g e>8\r\n    <f cs>4\r\n    <c a>4\r\n    g4( |\r\n\r\n    % l\r\n    a16 g16\r\n    e16 f8\r\n    cs8.) <c a g>2 |\r\n\r\n    % o\r\n    a8( g8 e8)\r\n    f8.\r\n    cs16( cs8 cs8 g8 |\r\n\r\n    % ,\r\n    a8 g4\r\n    e8 f8\r\n    e e\r\n    g8) |\r\n\r\n    % space\r\n    a8\r\n    <g e>4.\r\n    f8(\r\n    ds d\r\n    g8 |\r\n\r\n    % W\r\n    a8 g4\r\n    e8 f8\r\n    a8 gs8\r\n    g8) |\r\n\r\n    % o\r\n    a8( g8\r\n    e8 f8\r\n    cs8 cs8) <cs g>4 |\r\n\r\n    % r\r\n    a8( g8\r\n    e8 f8\r\n    cs8 cs8 e8. g16 |\r\n\r\n    % l\r\n    c16 a16)\r\n    <g e>8\r\n    <f cs>4\r\n    <c a>4\r\n    g4( |\r\n\r\n    % d\r\n    a8 g4\r\n    e16 f16\r\n    cs8 c8 c8\r\n    g8 |\r\n\r\n    % !\r\n    a16)\r\n    <g e>4\r\n    f16( ds16 ds16)\r\n    <g c>2 |\r\n  }\r\n  layout {\r\n    indent = 0cm\r\n  }\r\n  midi {\r\n    	empo 4 = 120\r\n  }\r\n}'),
(622, 'Verbose', 'verbose', 'PUT THE NUMBER LXXII ONTO THE TOP OF THE PROGRAM STACK\r\nGET THE TOP ELEMENT OF THE STACK AND CONVERT IT TO AN ASCII CHARACTER AND OUTPUT IT FOR THE CURRENT PERSON USING THIS PROGRAM TO SEE\r\nPUT THE NUMBER CI ONTO THE TOP OF THE PROGRAM STACK\r\nGET THE TOP ELEMENT OF THE STACK AND CONVERT IT TO AN ASCII CHARACTER AND OUTPUT IT FOR THE CURRENT PERSON USING THIS PROGRAM TO SEE\r\nPUT THE NUMBER CVIII ONTO THE TOP OF THE PROGRAM STACK\r\nGET THE TOP ELEMENT OF THE STACK AND CONVERT IT TO AN ASCII CHARACTER AND OUTPUT IT FOR THE CURRENT PERSON USING THIS PROGRAM TO SEE\r\nGET THE TOP ELEMENT OF THE STACK AND CONVERT IT TO AN ASCII CHARACTER AND OUTPUT IT FOR THE CURRENT PERSON USING THIS PROGRAM TO SEE\r\nPUT THE NUMBER CXI ONTO THE TOP OF THE PROGRAM STACK\r\nGET THE TOP ELEMENT OF THE STACK AND CONVERT IT TO AN ASCII CHARACTER AND OUTPUT IT FOR THE CURRENT PERSON USING THIS PROGRAM TO SEE\r\nPUT THE NUMBER XLIV ONTO THE TOP OF THE PROGRAM STACK\r\nGET THE TOP ELEMENT OF THE STACK AND CONVERT IT TO AN ASCII CHARACTER AND OUTPUT IT FOR THE CURRENT PERSON USING THIS PROGRAM TO SEE\r\nPUT THE NUMBER XXXII ONTO THE TOP OF THE PROGRAM STACK\r\nGET THE TOP ELEMENT OF THE STACK AND CONVERT IT TO AN ASCII CHARACTER AND OUTPUT IT FOR THE CURRENT PERSON USING THIS PROGRAM TO SEE\r\nPUT THE NUMBER CXIX ONTO THE TOP OF THE PROGRAM STACK\r\nGET THE TOP ELEMENT OF THE STACK AND CONVERT IT TO AN ASCII CHARACTER AND OUTPUT IT FOR THE CURRENT PERSON USING THIS PROGRAM TO SEE\r\nPUT THE NUMBER CXI ONTO THE TOP OF THE PROGRAM STACK\r\nGET THE TOP ELEMENT OF THE STACK AND CONVERT IT TO AN ASCII CHARACTER AND OUTPUT IT FOR THE CURRENT PERSON USING THIS PROGRAM TO SEE\r\nPUT THE NUMBER CXIV ONTO THE TOP OF THE PROGRAM STACK\r\nGET THE TOP ELEMENT OF THE STACK AND CONVERT IT TO AN ASCII CHARACTER AND OUTPUT IT FOR THE CURRENT PERSON USING THIS PROGRAM TO SEE\r\nPUT THE NUMBER CVIII ONTO THE TOP OF THE PROGRAM STACK\r\nGET THE TOP ELEMENT OF THE STACK AND CONVERT IT TO AN ASCII CHARACTER AND OUTPUT IT FOR THE CURRENT PERSON USING THIS PROGRAM TO SEE\r\nPUT THE NUMBER C ONTO THE TOP OF THE PROGRAM STACK\r\nGET THE TOP ELEMENT OF THE STACK AND CONVERT IT TO AN ASCII CHARACTER AND OUTPUT IT FOR THE CURRENT PERSON USING THIS PROGRAM TO SEE\r\nPUT THE NUMBER XXXIII ONTO THE TOP OF THE PROGRAM STACK\r\nGET THE TOP ELEMENT OF THE STACK AND CONVERT IT TO AN ASCII CHARACTER AND OUTPUT IT FOR THE CURRENT PERSON USING THIS PROGRAM TO SEE');
INSERT INTO `language` (`id`, `language_name`, `file_extension`, `hello_world_program`) VALUES
(623, 'Verbosefuck', 'vbfk', '~!comment!~VerboseFuck, a BrainFuck derivative focussing on verbosity. see more at <http://esolangs.org/wiki/VerboseFuck>~!uncomment!~\r\nprogram.initialize();\r\nmath.equation(program.errors.handler.activated = boolean(false));\r\nprogram.console.standardinput.openstream();\r\nprogram.console.standardoutput.openstream();\r\ndefine(defines.variable, variable(pointer));\r\nimplanttype(pointer, types.pointer(to:types.byte));\r\nmath.equation(pointer = void(0));\r\nprogram.memory.allocate(pointer, void(math.infinity), program.memory.memorytype.bidirectional);\r\n~!comment!~MANDATORY~!uncomment!~\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n~!comment!~MANDATORY~!uncomment!~\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n~!comment!~MANDATORY~!uncomment!~\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\ndefine(defines.label, defines.label.createnew());\r\nconditional(block.if, boolean.inequality(deref(pointer), byte(0))) { \r\n	math.equation(pointer = pointer + void(1));\r\n	~!comment!~MANDATORY~!uncomment!~\r\n	math.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n	math.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n	math.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n	math.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n	~!comment!~MANDATORY~!uncomment!~\r\n	math.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n	math.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n	math.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n	math.equation(pointer = pointer + void(1));\r\n	~!comment!~MANDATORY~!uncomment!~\r\n	math.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n	math.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n	math.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n	math.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n	~!comment!~MANDATORY~!uncomment!~\r\n	math.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n	math.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n	math.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n	math.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n	~!comment!~MANDATORY~!uncomment!~\r\n	math.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n	math.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n	math.equation(pointer = pointer + void(1));\r\n	math.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n	~!comment!~MANDATORY~!uncomment!~\r\n	math.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n	math.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n	math.equation(pointer = pointer + void(1));\r\n	math.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n	~!comment!~MANDATORY~!uncomment!~\r\n	math.equation(pointer = pointer - void(1));\r\n	math.equation(pointer = pointer - void(1));\r\n	math.equation(pointer = pointer - void(1));\r\n	math.equation(pointer = pointer - void(1));\r\n	~!comment!~MANDATORY~!uncomment!~\r\n	math.equation(deref(pointer) = (deref(pointer) - byte(1)):binaryand:byte(255));\r\n};\r\nconditional(block.if, boolean.inequality(deref(pointer), byte(0))) { \r\n	program.flow.labeledjump(defines.label.last());\r\n};\r\nundefine(defines.label, defines.label.last());\r\nmath.equation(pointer = pointer + void(1));\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n~!comment!~MANDATORY~!uncomment!~\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\nprogram.console.standardoutput.stream.writeunbufferedchars(array.create(1, conversion.changedatatype(deref(pointer), types.character, conversion.method.binary)), 0, 1);\r\nmath.equation(pointer = pointer + void(1));\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n~!comment!~MANDATORY~!uncomment!~\r\nprogram.console.standardoutput.stream.writeunbufferedchars(array.create(1, conversion.changedatatype(deref(pointer), types.character, conversion.method.binary)), 0, 1);\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n~!comment!~MANDATORY~!uncomment!~\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n~!comment!~MANDATORY~!uncomment!~\r\nprogram.console.standardoutput.stream.writeunbufferedchars(array.create(1, conversion.changedatatype(deref(pointer), types.character, conversion.method.binary)), 0, 1);\r\nprogram.console.standardoutput.stream.writeunbufferedchars(array.create(1, conversion.changedatatype(deref(pointer), types.character, conversion.method.binary)), 0, 1);\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n~!comment!~MANDATORY~!uncomment!~\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\nprogram.console.standardoutput.stream.writeunbufferedchars(array.create(1, conversion.changedatatype(deref(pointer), types.character, conversion.method.binary)), 0, 1);\r\nmath.equation(pointer = pointer + void(1));\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n~!comment!~MANDATORY~!uncomment!~\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\nprogram.console.standardoutput.stream.writeunbufferedchars(array.create(1, conversion.changedatatype(deref(pointer), types.character, conversion.method.binary)), 0, 1);\r\nmath.equation(pointer = pointer - void(1));\r\nmath.equation(pointer = pointer - void(1));\r\n~!comment!~MANDATORY~!uncomment!~\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n~!comment!~MANDATORY~!uncomment!~\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n~!comment!~MANDATORY~!uncomment!~\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n~!comment!~MANDATORY~!uncomment!~\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\nprogram.console.standardoutput.stream.writeunbufferedchars(array.create(1, conversion.changedatatype(deref(pointer), types.character, conversion.method.binary)), 0, 1);\r\n~!comment!~MANDATORY~!uncomment!~\r\nmath.equation(pointer = pointer + void(1));\r\nprogram.console.standardoutput.stream.writeunbufferedchars(array.create(1, conversion.changedatatype(deref(pointer), types.character, conversion.method.binary)), 0, 1);\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n~!comment!~MANDATORY~!uncomment!~\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\nprogram.console.standardoutput.stream.writeunbufferedchars(array.create(1, conversion.changedatatype(deref(pointer), types.character, conversion.method.binary)), 0, 1);\r\nmath.equation(deref(pointer) = (deref(pointer) - byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) - byte(1)):binaryand:byte(255));\r\n~!comment!~MANDATORY~!uncomment!~\r\nmath.equation(deref(pointer) = (deref(pointer) - byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) - byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) - byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) - byte(1)):binaryand:byte(255));\r\n~!comment!~MANDATORY~!uncomment!~\r\nprogram.console.standardoutput.stream.writeunbufferedchars(array.create(1, conversion.changedatatype(deref(pointer), types.character, conversion.method.binary)), 0, 1);\r\nmath.equation(deref(pointer) = (deref(pointer) - byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) - byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) - byte(1)):binaryand:byte(255));\r\n~!comment!~MANDATORY~!uncomment!~\r\nmath.equation(deref(pointer) = (deref(pointer) - byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) - byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) - byte(1)):binaryand:byte(255));\r\nmath.equation(deref(pointer) = (deref(pointer) - byte(1)):binaryand:byte(255));\r\n~!comment!~MANDATORY~!uncomment!~\r\nmath.equation(deref(pointer) = (deref(pointer) - byte(1)):binaryand:byte(255));\r\nprogram.console.standardoutput.stream.writeunbufferedchars(array.create(1, conversion.changedatatype(deref(pointer), types.character, conversion.method.binary)), 0, 1);\r\nmath.equation(pointer = pointer + void(1));\r\nmath.equation(deref(pointer) = (deref(pointer) + byte(1)):binaryand:byte(255));\r\n~!comment!~MANDATORY~!uncomment!~\r\nprogram.console.standardoutput.stream.writeunbufferedchars(array.create(1, conversion.changedatatype(deref(pointer), types.character, conversion.method.binary)), 0, 1);\r\nmath.equation(pointer = pointer + void(1));\r\nprogram.console.standardoutput.stream.writeunbufferedchars(array.create(1, conversion.changedatatype(deref(pointer), types.character, conversion.method.binary)), 0, 1);\r\n~!comment!~MANDATORY~!uncomment!~\r\nprogram.memory.deallocate(pointer, void(math.infinity), program.memory.memorytype.bidirectional);\r\nundefine(defines.variable, variable(pointer));\r\nprogram.console.standardoutput.closestream();\r\nprogram.console.standardinput.closestream();\r\nprogram.terminate();\r\n~!comment!~MANDATORY~!uncomment!~'),
(624, 'Verilog', 'v', 'module main;\r\n  initial\r\n    begin\r\n      $display(\"Hello World\");\r\n      $finish;\r\n    end\r\nendmodule'),
(625, 'Verve', 'vrv', 'print(\"Hello World\")'),
(626, 'Vhdl', 'vhdl', 'use std.textio.all;\r\n\r\nentity hello_world is\r\nend hello_world;\r\n\r\narchitecture behaviour of hello_world is\r\nbegin\r\n	process\r\n    begin\r\n       write (output, String\'(\"Hello World\"));\r\n       wait;\r\n    end process;\r\nend behaviour;'),
(627, 'Vi', NULL, 'The following tab indented lines will cause a true vi with modelines\r\nactivated to infinitely loop puting \"Hello World\" in the buffer. Hit\r\n to abort the loop and see the output. None of the vi clones\r\nsupport modelines this powerful, and modelines are diabled by default.\r\nSet the environment variable EXINIT to \"set ml\" to activate modelines.\r\n\r\n	vi: $  y a :\r\n	vi: $-1y b :\r\n	vi: @b :\r\n	put a |@b\r\n	Hello World\r\n\r\nWhitespace is largely insignificant, but these must be the last five\r\nlines in the file to work properly. Unless it is in \"vi: ... :\" or\r\n\"ex: ... :\" format, any preceeding text will be ignored.'),
(628, 'Vimscript', 'vim', 'echo \"Hello World\"'),
(629, 'Virgil', 'v3', 'def main() {\r\n        System.puts(\"Hello World\n\");\r\n }'),
(630, 'Visual Basic For Applications', 'vba', 'Sub HelloWorld()\r\n    Call MsgBox(\"Hello World\")\r\nEnd Sub'),
(631, 'Visual Basic Script', 'vbs', 'MsgBox \"Hello World\"'),
(632, 'Visual Basic', 'vb', 'Module HelloWorld\r\n    Sub Main()\r\n        MsgBox(\"Hello World\")\r\n    End Sub\r\nEnd Module'),
(633, 'Visualfoxpro', 'prg', '* Message Box:\r\nMESSAGEBOX(\"Hello World\")\r\n\r\n* Print to screen:\r\n? \"Hello World\"\r\n\r\n* GUI:\r\nloForm = CREATEOBJECT(\"HiForm\")\r\nloForm.Show(1)\r\n\r\nDEFINE CLASS HiForm AS Form\r\n	AutoCenter	= .T.\r\n	Caption		= \"Hello World\"\r\n	\r\n	ADD OBJECT lblHi as Label ;\r\n		WITH Caption = \"Hello World\"\r\nENDDEFINE'),
(634, 'Vjass', 'j', 'struct HelloWorld extends array\r\n    private static method onInit takes nothing returns nothing\r\n        call DisplayTimedTextToPlayer(GetLocalPlayer(), 0, 0, 0, \"Hello World\")\r\n    endmethod\r\nendstruct'),
(635, 'Vms', 'vms', '$top:\r\n$write sys$output \"Hello World\"\r\n$wait 00:00:10\r\n$goto top'),
(636, 'Vowels', 'vw', 'ue\r\nyeouo\r\neuea\r\neuai\r\neuai\r\neuoa\r\neaiu\r\neaao\r\neioo\r\neuoa\r\neuou\r\neuai\r\neuee\r\neaai\r\neeoe\r\neeee\r\ny'),
(637, 'Vrml', 'wrl', '#VRML V2.0 utf8\r\nShape {\r\n    geometry Text {\r\n        string \"Hello World\"\r\n    }\r\n}'),
(638, 'Vue', 'js', '<div id=\"app\">\r\n  <p>{{ message }}</p>\r\n</div>\r\n<script>\r\nnew Vue({\r\n  el: \'#app\',\r\n  data: {\r\n    message: \'Hello World\'\r\n  }\r\n})\r\n</script>'),
(639, 'Wenyan', 'wy', '吾有一言。曰「「Hello World」」。書之。'),
(640, 'Wheat', 'wheat', 'input h\r\nif h \"H\":\r\n output \" world!\"\r\n output N\r\n terminate\r\noutput \"Hello,\"'),
(641, 'Whenever', 'whenever', '1 print(\"Hello World\");'),
(642, 'Whirl', 'wr', '110001100111000111110000010001111100011000000000110000011100000110000010000\r\n011000111100000111110000011100001111100100011001110000111111100001001111100\r\n011000000000110000011000111110001000000000000000000001001111110000111111000\r\n100000000000000000000000000011111000100100000000111111000100000000000001001\r\n000011111000001110000111110010001100011000000100010000011000000000000000001\r\n100000111001111100111111000100111001111000011100010011111110000111000110000\r\n000000000000000000000000000001000100001111100000111000011111001100011100000\r\n111000000010001111100000111110001000000000111000110000000000000000000000000\r\n000000100100001111100000111000011100010000000000000100010000111110001110001\r\n111100111111000011100001100111000111000000000001111100000111000110000110110\r\n001000000000010000001111100000111000011111000000010001110000000000000000000\r\n000000000000100000011111000001100'),
(643, 'Whitespace', 'ws', 'push 0   \r\npush 10  	 	 \r\npush 33  	    	\r\npush 100  		  	  \r\npush 108  		 		  \r\npush 114  			  	 \r\npush 111  		 				\r\npush 119  			 			\r\npush 32  	     \r\npush 44  	 		  \r\ncopy 3	  		\r\ncopy 6	  		 \r\ndup \r\npush 101   		  	 	\r\npush 72  	  	   \r\n\r\nlabel 0   \r\noutchar	\r\ndup   \r\npush 0    \r\nswap \r\nsub		  	\r\njn	0	  \r\nexit'),
(644, 'Wikitext', NULL, 'Hello World'),
(645, 'Wml', 'wml', '#define HELLOWORLD\r\n  [message]\r\n    speaker=\"narrator\"\r\n    message=_\"Hello World\"\r\n  [/message]\r\n#enddef'),
(646, 'Wolframlanguage', 'wl', 'Print[\"Hello World\"];'),
(647, 'Wren', 'wren', 'IO.print(\"Hello World\")'),
(648, 'Wsh', 'vbs', 'WScript.Echo \"Hello World\"\r\nWScript.Quit'),
(649, 'X D', 'xd', ';-~~~~~> ;P ;~~> ;P ;------> ;-P ;--> ;P ;D ;~~---> ;P ;| ;~~< ;----> ;P\r\n;~---------> ;P ;--> ;P ;-----< ;P ;-------< ;P ;D ;> ;P ;~< ;-------< ;P'),
(650, 'Xbase++', 'prg', 'func Main()\r\n    Qout(\"Hello World\")\r\nreturn 1'),
(651, 'Xbase', 'dbf', 'do while .t.\r\n ? \'Hello World\'\r\nenddo'),
(652, 'Xl', 'xl', '// XL programming language: http://xlr.sourceforge.net\r\nwriteln \"Hello World\"'),
(653, 'Xlisp', 'xlisp', '(DISPLAY \"Hello World\")\r\n(NEWLINE)'),
(654, 'Xlogo', 'lgo', 'to HelloWorld\r\n resetall\r\n hideturtle\r\n fd 20 left 180\r\n fd 40 left 180\r\n fd 20 right 90\r\n fd 20 left 90\r\n fd 20 left 180\r\n fd 40 left 90\r\n fd 20 left 90\r\n fd 20 right 90\r\n fd 20 right 90\r\n fd 10 right 90\r\n fd 20 left 90\r\n fd 10 left 90\r\n fd 30 left 90\r\n fd 40 left 180\r\n fd 40 left 90\r\n fd 20 left 90\r\n fd 40 left 180\r\n fd 40 left 90\r\n fd 40 left 90\r\n fd 20 left 90\r\n fd 20 left 90\r\n fd 20 left 90\r\n fd 60 left 90\r\n fd 40 left 180\r\n fd 40 left 90\r\n fd 20 left 90\r\n fd 20 left 180\r\n fd 20 left 90\r\n fd 20 left 90\r\n fd 40 left 180\r\n fd 40 left 90\r\n fd 40 left 90\r\n fd 20 left 90\r\n fd 20 left 90\r\n fd 20 left 90\r\n fd 40 left 90\r\n fd 20 right 90\r\n fd 20 right 90\r\n fd 5  left 90  \r\n fd 5  left 90  \r\n fd 25 left 180\r\n fd 40 left 90\r\n fd 40 left 90\r\n fd 20 left 90\r\n fd 20 left 90\r\n fd 20 left 90\r\n fd 20 left 90\r\n fd 40 left 180\r\n fd 40\r\nend'),
(655, 'Xml', 'xml', '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<text><![CDATA[Hello World]]></text>'),
(656, 'Xpl0', 'xpl', 'code Text=12;\r\nText(0, \"Hello World\")'),
(657, 'Xquery', 'xq', 'let $hello := \"Hello World\"\r\nreturn $hello'),
(658, 'Xrf', 'xrf', '53374 54374 54374 545F4 54374\r\n54374 54374 41345 546F4 54374\r\n54374 54374 54374 54554 54554\r\n545F4 54314 54554 54554 54554\r\n545F4 54314 54314 54554 545F4\r\n54314 33745 54664 54664 54664\r\n54664 54314 54664 54664 54664\r\n54664 54664 54664 54314 54934\r\n54554 5454F 54374 5451F 54314\r\n54554 545F4 54314 54664 54664\r\n54664 54314 54664 54664 54664\r\n54664 9151B'),
(659, 'Xslt', 'xslt', '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\r\n    <xsl:template match=\"/\">\r\n        <xsl:text>Hello World</xsl:text>\r\n    </xsl:template>\r\n</xsl:stylesheet>'),
(660, 'Xul', 'xul', '<?xml version=\"1.0\"?>\r\n<window xmlns=\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\">\r\n    <label value=\"Hello World\"/>\r\n</window>'),
(661, 'Y', 'y', 'module helloworld\r\n\r\n	define(EOF,(-1))\r\n	\r\n	import printf from \"ylib.d\"\r\n\r\n	main()\r\n		printf(\"Hello World\n\")\r\n	end\r\nend'),
(662, 'Yaml', 'yaml', 'hello: world'),
(663, 'Yolang', 'yo', 'Yo!Yo!Yo!Yo!Yo!Yo!Yo!Yo!Yo!Yo!yo!yoYo!Yo!Yo!Yo!Yo!Yo!Yo!yoYo!Yo!Yo!Yo!Yo!Yo!Yo!Yo!Yo!Yo!yoYo!Yo!Yo!yoYo!YOYOYOYOYo?YO?yoYo!Yo!YO!yoYo!YO!Yo!Yo!Yo!Yo!Yo!Yo!Yo!YO!YO!Yo!Yo!Yo!YO!yoYo!Yo!YO!YOYOYo!Yo!Yo!Yo!Yo!Yo!Yo!Yo!Yo!Yo!Yo!Yo!Yo!Yo!Yo!YO!yoYO!Yo!Yo!Yo!YO!Yo?Yo?Yo?Yo?Yo?Yo?YO!Yo?Yo?Yo?Yo?Yo?Yo?Yo?Yo?YO!yoYo!YO!yoYO!'),
(664, 'Yoptascript', 'js', 'ксива.малява(\"Hello World\") нах'),
(665, 'Zbd', NULL, '+ Mr.B says \"Hello Friend\"'),
(666, 'Zepto', 'zp', '(write \"Hello World\")'),
(667, 'Zetaplex', 'zeta', '      / #111#87 #        #         ######\r\n3      4 #        #        #        #      #\r\n3      1 #        #        #        #      #\r\n#      1 #        #        #        #      #\r\n1####### /44#23#/ #        #        #      #\r\n0      8 #        #        #        #      #\r\n0      0 1        #        #        #      #\r\n#      1 1        #        #        #      #\r\n      / 1#108sy 101#72Os DrFe####  ######'),
(668, 'Zim', 'zim', 'output \"Hello World\"'),
(669, 'Zimbu', 'zu', 'FUNC Main() int\r\n  IO.write(\"Hello World\n\")\r\n  RETURN 0\r\n}'),
(670, 'Zinc', 'zn', '//! zinc\r\nlibrary HelloWorld {\r\n    private function onInit() {\r\n        DisplayTimedTextToPlayer(GetLocalPlayer(), 0, 0, 0, \"Hello World\");\r\n    }\r\n}\r\n//! endzinc'),
(671, 'Zombie', 'zombie', 'HelloWorld is a zombie\r\nsummon\r\n  task SayHello\r\n      say \"Hello World\"\r\n  animate\r\nanimate'),
(672, 'Zonnon', 'znn', 'module HelloWorld;\r\nbegin\r\n    writeln(\"Hello World\");\r\nend HelloWorld.'),
(673, 'Zsh', 'zsh', '#!/bin/zsh\r\necho \"Hello World\"');

-- --------------------------------------------------------

--
-- Tabelstructuur voor tabel `language_github_issues`
--

CREATE TABLE `language_github_issues` (
  `id` int(11) NOT NULL,
  `language_id` int(11) NOT NULL,
  `year` int(4) NOT NULL,
  `quarter` int(1) NOT NULL,
  `issue_count` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Gegevens worden geëxporteerd voor tabel `language_github_issues`
--

INSERT INTO `language_github_issues` (`id`, `language_id`, `year`, `quarter`, `issue_count`) VALUES
(1, 333, 2021, 1, 230);

-- --------------------------------------------------------

--
-- Tabelstructuur voor tabel `language_popularity`
--

CREATE TABLE `language_popularity` (
  `id` int(11) NOT NULL,
  `language_id` int(11) NOT NULL,
  `year` int(4) NOT NULL,
  `rating_percentile` decimal(5,2) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Gegevens worden geëxporteerd voor tabel `language_popularity`
--

INSERT INTO `language_popularity` (`id`, `language_id`, `year`, `rating_percentile`) VALUES
(1, 333, 2020, '23.00');

--
-- Indexen voor geëxporteerde tabellen
--

--
-- Indexen voor tabel `language`
--
ALTER TABLE `language`
  ADD PRIMARY KEY (`id`);

--
-- Indexen voor tabel `language_github_issues`
--
ALTER TABLE `language_github_issues`
  ADD PRIMARY KEY (`id`),
  ADD KEY `fk_languageGithubIssues_language_languageId` (`language_id`);

--
-- Indexen voor tabel `language_popularity`
--
ALTER TABLE `language_popularity`
  ADD PRIMARY KEY (`id`),
  ADD KEY `fk_languagePopularity_language_languageId` (`language_id`);

--
-- AUTO_INCREMENT voor geëxporteerde tabellen
--

--
-- AUTO_INCREMENT voor een tabel `language`
--
ALTER TABLE `language`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=676;

--
-- AUTO_INCREMENT voor een tabel `language_github_issues`
--
ALTER TABLE `language_github_issues`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- AUTO_INCREMENT voor een tabel `language_popularity`
--
ALTER TABLE `language_popularity`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=3;

--
-- Beperkingen voor geëxporteerde tabellen
--

--
-- Beperkingen voor tabel `language_github_issues`
--
ALTER TABLE `language_github_issues`
  ADD CONSTRAINT `fk_languageGithubIssues_language_languageId` FOREIGN KEY (`language_id`) REFERENCES `language` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Beperkingen voor tabel `language_popularity`
--
ALTER TABLE `language_popularity`
  ADD CONSTRAINT `fk_languagePopularity_language_languageId` FOREIGN KEY (`language_id`) REFERENCES `language` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
COMMIT;
